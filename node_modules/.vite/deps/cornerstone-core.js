import {
  __commonJS
} from "./chunk-G3PMV62Z.js";

// node_modules/cornerstone-core/dist/cornerstone.js
var require_cornerstone = __commonJS({
  "node_modules/cornerstone-core/dist/cornerstone.js"(exports, module) {
    (function webpackUniversalModuleDefinition(root, factory) {
      if (typeof exports === "object" && typeof module === "object")
        module.exports = factory();
      else if (typeof define === "function" && define.amd)
        define("cornerstone-core", [], factory);
      else if (typeof exports === "object")
        exports["cornerstone-core"] = factory();
      else
        root["cornerstone"] = factory();
    })(window, function() {
      return (
        /******/
        function(modules) {
          function hotDisposeChunk(chunkId) {
            delete installedChunks[chunkId];
          }
          var parentHotUpdateCallback = window["webpackHotUpdate"];
          window["webpackHotUpdate"] = // eslint-disable-next-line no-unused-vars
          /******/
          function webpackHotUpdateCallback(chunkId, moreModules) {
            hotAddUpdateChunk(chunkId, moreModules);
            if (parentHotUpdateCallback) parentHotUpdateCallback(chunkId, moreModules);
          };
          function hotDownloadUpdateChunk(chunkId) {
            var head = document.getElementsByTagName("head")[0];
            var script = document.createElement("script");
            script.charset = "utf-8";
            script.src = __webpack_require__.p + "" + chunkId + "." + hotCurrentHash + ".hot-update.js";
            ;
            head.appendChild(script);
          }
          function hotDownloadManifest(requestTimeout) {
            requestTimeout = requestTimeout || 1e4;
            return new Promise(function(resolve, reject) {
              if (typeof XMLHttpRequest === "undefined") {
                return reject(new Error("No browser support"));
              }
              try {
                var request = new XMLHttpRequest();
                var requestPath = __webpack_require__.p + "" + hotCurrentHash + ".hot-update.json";
                request.open("GET", requestPath, true);
                request.timeout = requestTimeout;
                request.send(null);
              } catch (err) {
                return reject(err);
              }
              request.onreadystatechange = function() {
                if (request.readyState !== 4) return;
                if (request.status === 0) {
                  reject(
                    /******/
                    new Error("Manifest request to " + requestPath + " timed out.")
                    /******/
                  );
                } else if (request.status === 404) {
                  resolve();
                } else if (request.status !== 200 && request.status !== 304) {
                  reject(new Error("Manifest request to " + requestPath + " failed."));
                } else {
                  try {
                    var update = JSON.parse(request.responseText);
                  } catch (e) {
                    reject(e);
                    return;
                  }
                  resolve(update);
                }
              };
            });
          }
          var hotApplyOnUpdate = true;
          var hotCurrentHash = "4d8d88ba53621f59b9a9";
          var hotRequestTimeout = 1e4;
          var hotCurrentModuleData = {};
          var hotCurrentChildModule;
          var hotCurrentParents = [];
          var hotCurrentParentsTemp = [];
          function hotCreateRequire(moduleId) {
            var me = installedModules[moduleId];
            if (!me) return __webpack_require__;
            var fn = function(request) {
              if (me.hot.active) {
                if (installedModules[request]) {
                  if (installedModules[request].parents.indexOf(moduleId) === -1) {
                    installedModules[request].parents.push(moduleId);
                  }
                } else {
                  hotCurrentParents = [moduleId];
                  hotCurrentChildModule = request;
                }
                if (me.children.indexOf(request) === -1) {
                  me.children.push(request);
                }
              } else {
                console.warn(
                  /******/
                  "[HMR] unexpected require(" + /******/
                  request + /******/
                  ") from disposed module " + /******/
                  moduleId
                  /******/
                );
                hotCurrentParents = [];
              }
              return __webpack_require__(request);
            };
            var ObjectFactory = function ObjectFactory2(name2) {
              return {
                /******/
                configurable: true,
                /******/
                enumerable: true,
                /******/
                get: function() {
                  return __webpack_require__[name2];
                },
                /******/
                set: function(value) {
                  __webpack_require__[name2] = value;
                }
                /******/
              };
            };
            for (var name in __webpack_require__) {
              if (
                /******/
                Object.prototype.hasOwnProperty.call(__webpack_require__, name) && /******/
                name !== "e" && /******/
                name !== "t"
              ) {
                Object.defineProperty(fn, name, ObjectFactory(name));
              }
            }
            fn.e = function(chunkId) {
              if (hotStatus === "ready") hotSetStatus("prepare");
              hotChunksLoading++;
              return __webpack_require__.e(chunkId).then(finishChunkLoading, function(err) {
                finishChunkLoading();
                throw err;
              });
              function finishChunkLoading() {
                hotChunksLoading--;
                if (hotStatus === "prepare") {
                  if (!hotWaitingFilesMap[chunkId]) {
                    hotEnsureUpdateChunk(chunkId);
                  }
                  if (hotChunksLoading === 0 && hotWaitingFiles === 0) {
                    hotUpdateDownloaded();
                  }
                }
              }
            };
            fn.t = function(value, mode) {
              if (mode & 1) value = fn(value);
              return __webpack_require__.t(value, mode & ~1);
            };
            return fn;
          }
          function hotCreateModule(moduleId) {
            var hot = {
              /******/
              // private stuff
              /******/
              _acceptedDependencies: {},
              /******/
              _declinedDependencies: {},
              /******/
              _selfAccepted: false,
              /******/
              _selfDeclined: false,
              /******/
              _disposeHandlers: [],
              /******/
              _main: hotCurrentChildModule !== moduleId,
              /******/
              /******/
              // Module API
              /******/
              active: true,
              /******/
              accept: function(dep, callback) {
                if (dep === void 0) hot._selfAccepted = true;
                else if (typeof dep === "function") hot._selfAccepted = dep;
                else if (typeof dep === "object")
                  for (var i = 0; i < dep.length; i++)
                    hot._acceptedDependencies[dep[i]] = callback || function() {
                    };
                else hot._acceptedDependencies[dep] = callback || function() {
                };
              },
              /******/
              decline: function(dep) {
                if (dep === void 0) hot._selfDeclined = true;
                else if (typeof dep === "object")
                  for (var i = 0; i < dep.length; i++)
                    hot._declinedDependencies[dep[i]] = true;
                else hot._declinedDependencies[dep] = true;
              },
              /******/
              dispose: function(callback) {
                hot._disposeHandlers.push(callback);
              },
              /******/
              addDisposeHandler: function(callback) {
                hot._disposeHandlers.push(callback);
              },
              /******/
              removeDisposeHandler: function(callback) {
                var idx = hot._disposeHandlers.indexOf(callback);
                if (idx >= 0) hot._disposeHandlers.splice(idx, 1);
              },
              /******/
              /******/
              // Management API
              /******/
              check: hotCheck,
              /******/
              apply: hotApply,
              /******/
              status: function(l) {
                if (!l) return hotStatus;
                hotStatusHandlers.push(l);
              },
              /******/
              addStatusHandler: function(l) {
                hotStatusHandlers.push(l);
              },
              /******/
              removeStatusHandler: function(l) {
                var idx = hotStatusHandlers.indexOf(l);
                if (idx >= 0) hotStatusHandlers.splice(idx, 1);
              },
              /******/
              /******/
              //inherit from previous dispose call
              /******/
              data: hotCurrentModuleData[moduleId]
              /******/
            };
            hotCurrentChildModule = void 0;
            return hot;
          }
          var hotStatusHandlers = [];
          var hotStatus = "idle";
          function hotSetStatus(newStatus) {
            hotStatus = newStatus;
            for (var i = 0; i < hotStatusHandlers.length; i++)
              hotStatusHandlers[i].call(null, newStatus);
          }
          var hotWaitingFiles = 0;
          var hotChunksLoading = 0;
          var hotWaitingFilesMap = {};
          var hotRequestedFilesMap = {};
          var hotAvailableFilesMap = {};
          var hotDeferred;
          var hotUpdate, hotUpdateNewHash;
          function toModuleId(id) {
            var isNumber = +id + "" === id;
            return isNumber ? +id : id;
          }
          function hotCheck(apply) {
            if (hotStatus !== "idle") {
              throw new Error("check() is only allowed in idle status");
            }
            hotApplyOnUpdate = apply;
            hotSetStatus("check");
            return hotDownloadManifest(hotRequestTimeout).then(function(update) {
              if (!update) {
                hotSetStatus("idle");
                return null;
              }
              hotRequestedFilesMap = {};
              hotWaitingFilesMap = {};
              hotAvailableFilesMap = update.c;
              hotUpdateNewHash = update.h;
              hotSetStatus("prepare");
              var promise = new Promise(function(resolve, reject) {
                hotDeferred = {
                  /******/
                  resolve,
                  /******/
                  reject
                  /******/
                };
              });
              hotUpdate = {};
              var chunkId = "cornerstone";
              {
                hotEnsureUpdateChunk(chunkId);
              }
              if (
                /******/
                hotStatus === "prepare" && /******/
                hotChunksLoading === 0 && /******/
                hotWaitingFiles === 0
              ) {
                hotUpdateDownloaded();
              }
              return promise;
            });
          }
          function hotAddUpdateChunk(chunkId, moreModules) {
            if (!hotAvailableFilesMap[chunkId] || !hotRequestedFilesMap[chunkId])
              return;
            hotRequestedFilesMap[chunkId] = false;
            for (var moduleId in moreModules) {
              if (Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {
                hotUpdate[moduleId] = moreModules[moduleId];
              }
            }
            if (--hotWaitingFiles === 0 && hotChunksLoading === 0) {
              hotUpdateDownloaded();
            }
          }
          function hotEnsureUpdateChunk(chunkId) {
            if (!hotAvailableFilesMap[chunkId]) {
              hotWaitingFilesMap[chunkId] = true;
            } else {
              hotRequestedFilesMap[chunkId] = true;
              hotWaitingFiles++;
              hotDownloadUpdateChunk(chunkId);
            }
          }
          function hotUpdateDownloaded() {
            hotSetStatus("ready");
            var deferred = hotDeferred;
            hotDeferred = null;
            if (!deferred) return;
            if (hotApplyOnUpdate) {
              Promise.resolve().then(function() {
                return hotApply(hotApplyOnUpdate);
              }).then(
                /******/
                function(result) {
                  deferred.resolve(result);
                },
                /******/
                function(err) {
                  deferred.reject(err);
                }
                /******/
              );
            } else {
              var outdatedModules = [];
              for (var id in hotUpdate) {
                if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
                  outdatedModules.push(toModuleId(id));
                }
              }
              deferred.resolve(outdatedModules);
            }
          }
          function hotApply(options) {
            if (hotStatus !== "ready")
              throw new Error("apply() is only allowed in ready status");
            options = options || {};
            var cb;
            var i;
            var j;
            var module2;
            var moduleId;
            function getAffectedStuff(updateModuleId) {
              var outdatedModules2 = [updateModuleId];
              var outdatedDependencies2 = {};
              var queue2 = outdatedModules2.slice().map(function(id2) {
                return {
                  /******/
                  chain: [id2],
                  /******/
                  id: id2
                  /******/
                };
              });
              while (queue2.length > 0) {
                var queueItem = queue2.pop();
                var moduleId2 = queueItem.id;
                var chain = queueItem.chain;
                module2 = installedModules[moduleId2];
                if (!module2 || module2.hot._selfAccepted) continue;
                if (module2.hot._selfDeclined) {
                  return {
                    /******/
                    type: "self-declined",
                    /******/
                    chain,
                    /******/
                    moduleId: moduleId2
                    /******/
                  };
                }
                if (module2.hot._main) {
                  return {
                    /******/
                    type: "unaccepted",
                    /******/
                    chain,
                    /******/
                    moduleId: moduleId2
                    /******/
                  };
                }
                for (var i2 = 0; i2 < module2.parents.length; i2++) {
                  var parentId = module2.parents[i2];
                  var parent = installedModules[parentId];
                  if (!parent) continue;
                  if (parent.hot._declinedDependencies[moduleId2]) {
                    return {
                      /******/
                      type: "declined",
                      /******/
                      chain: chain.concat([parentId]),
                      /******/
                      moduleId: moduleId2,
                      /******/
                      parentId
                      /******/
                    };
                  }
                  if (outdatedModules2.indexOf(parentId) !== -1) continue;
                  if (parent.hot._acceptedDependencies[moduleId2]) {
                    if (!outdatedDependencies2[parentId])
                      outdatedDependencies2[parentId] = [];
                    addAllToSet(outdatedDependencies2[parentId], [moduleId2]);
                    continue;
                  }
                  delete outdatedDependencies2[parentId];
                  outdatedModules2.push(parentId);
                  queue2.push({
                    /******/
                    chain: chain.concat([parentId]),
                    /******/
                    id: parentId
                    /******/
                  });
                }
              }
              return {
                /******/
                type: "accepted",
                /******/
                moduleId: updateModuleId,
                /******/
                outdatedModules: outdatedModules2,
                /******/
                outdatedDependencies: outdatedDependencies2
                /******/
              };
            }
            function addAllToSet(a, b) {
              for (var i2 = 0; i2 < b.length; i2++) {
                var item2 = b[i2];
                if (a.indexOf(item2) === -1) a.push(item2);
              }
            }
            var outdatedDependencies = {};
            var outdatedModules = [];
            var appliedUpdate = {};
            var warnUnexpectedRequire = function warnUnexpectedRequire2() {
              console.warn(
                /******/
                "[HMR] unexpected require(" + result.moduleId + ") to disposed module"
                /******/
              );
            };
            for (var id in hotUpdate) {
              if (Object.prototype.hasOwnProperty.call(hotUpdate, id)) {
                moduleId = toModuleId(id);
                var result;
                if (hotUpdate[id]) {
                  result = getAffectedStuff(moduleId);
                } else {
                  result = {
                    /******/
                    type: "disposed",
                    /******/
                    moduleId: id
                    /******/
                  };
                }
                var abortError = false;
                var doApply = false;
                var doDispose = false;
                var chainInfo = "";
                if (result.chain) {
                  chainInfo = "\nUpdate propagation: " + result.chain.join(" -> ");
                }
                switch (result.type) {
                  /******/
                  case "self-declined":
                    if (options.onDeclined) options.onDeclined(result);
                    if (!options.ignoreDeclined)
                      abortError = new Error(
                        /******/
                        "Aborted because of self decline: " + /******/
                        result.moduleId + /******/
                        chainInfo
                        /******/
                      );
                    break;
                  /******/
                  case "declined":
                    if (options.onDeclined) options.onDeclined(result);
                    if (!options.ignoreDeclined)
                      abortError = new Error(
                        /******/
                        "Aborted because of declined dependency: " + /******/
                        result.moduleId + /******/
                        " in " + /******/
                        result.parentId + /******/
                        chainInfo
                        /******/
                      );
                    break;
                  /******/
                  case "unaccepted":
                    if (options.onUnaccepted) options.onUnaccepted(result);
                    if (!options.ignoreUnaccepted)
                      abortError = new Error(
                        /******/
                        "Aborted because " + moduleId + " is not accepted" + chainInfo
                        /******/
                      );
                    break;
                  /******/
                  case "accepted":
                    if (options.onAccepted) options.onAccepted(result);
                    doApply = true;
                    break;
                  /******/
                  case "disposed":
                    if (options.onDisposed) options.onDisposed(result);
                    doDispose = true;
                    break;
                  /******/
                  default:
                    throw new Error("Unexception type " + result.type);
                }
                if (abortError) {
                  hotSetStatus("abort");
                  return Promise.reject(abortError);
                }
                if (doApply) {
                  appliedUpdate[moduleId] = hotUpdate[moduleId];
                  addAllToSet(outdatedModules, result.outdatedModules);
                  for (moduleId in result.outdatedDependencies) {
                    if (
                      /******/
                      Object.prototype.hasOwnProperty.call(
                        /******/
                        result.outdatedDependencies,
                        /******/
                        moduleId
                        /******/
                      )
                    ) {
                      if (!outdatedDependencies[moduleId])
                        outdatedDependencies[moduleId] = [];
                      addAllToSet(
                        /******/
                        outdatedDependencies[moduleId],
                        /******/
                        result.outdatedDependencies[moduleId]
                        /******/
                      );
                    }
                  }
                }
                if (doDispose) {
                  addAllToSet(outdatedModules, [result.moduleId]);
                  appliedUpdate[moduleId] = warnUnexpectedRequire;
                }
              }
            }
            var outdatedSelfAcceptedModules = [];
            for (i = 0; i < outdatedModules.length; i++) {
              moduleId = outdatedModules[i];
              if (
                /******/
                installedModules[moduleId] && /******/
                installedModules[moduleId].hot._selfAccepted
              )
                outdatedSelfAcceptedModules.push({
                  /******/
                  module: moduleId,
                  /******/
                  errorHandler: installedModules[moduleId].hot._selfAccepted
                  /******/
                });
            }
            hotSetStatus("dispose");
            Object.keys(hotAvailableFilesMap).forEach(function(chunkId) {
              if (hotAvailableFilesMap[chunkId] === false) {
                hotDisposeChunk(chunkId);
              }
            });
            var idx;
            var queue = outdatedModules.slice();
            while (queue.length > 0) {
              moduleId = queue.pop();
              module2 = installedModules[moduleId];
              if (!module2) continue;
              var data = {};
              var disposeHandlers = module2.hot._disposeHandlers;
              for (j = 0; j < disposeHandlers.length; j++) {
                cb = disposeHandlers[j];
                cb(data);
              }
              hotCurrentModuleData[moduleId] = data;
              module2.hot.active = false;
              delete installedModules[moduleId];
              delete outdatedDependencies[moduleId];
              for (j = 0; j < module2.children.length; j++) {
                var child = installedModules[module2.children[j]];
                if (!child) continue;
                idx = child.parents.indexOf(moduleId);
                if (idx >= 0) {
                  child.parents.splice(idx, 1);
                }
              }
            }
            var dependency;
            var moduleOutdatedDependencies;
            for (moduleId in outdatedDependencies) {
              if (
                /******/
                Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
              ) {
                module2 = installedModules[moduleId];
                if (module2) {
                  moduleOutdatedDependencies = outdatedDependencies[moduleId];
                  for (j = 0; j < moduleOutdatedDependencies.length; j++) {
                    dependency = moduleOutdatedDependencies[j];
                    idx = module2.children.indexOf(dependency);
                    if (idx >= 0) module2.children.splice(idx, 1);
                  }
                }
              }
            }
            hotSetStatus("apply");
            hotCurrentHash = hotUpdateNewHash;
            for (moduleId in appliedUpdate) {
              if (Object.prototype.hasOwnProperty.call(appliedUpdate, moduleId)) {
                modules[moduleId] = appliedUpdate[moduleId];
              }
            }
            var error = null;
            for (moduleId in outdatedDependencies) {
              if (
                /******/
                Object.prototype.hasOwnProperty.call(outdatedDependencies, moduleId)
              ) {
                module2 = installedModules[moduleId];
                if (module2) {
                  moduleOutdatedDependencies = outdatedDependencies[moduleId];
                  var callbacks = [];
                  for (i = 0; i < moduleOutdatedDependencies.length; i++) {
                    dependency = moduleOutdatedDependencies[i];
                    cb = module2.hot._acceptedDependencies[dependency];
                    if (cb) {
                      if (callbacks.indexOf(cb) !== -1) continue;
                      callbacks.push(cb);
                    }
                  }
                  for (i = 0; i < callbacks.length; i++) {
                    cb = callbacks[i];
                    try {
                      cb(moduleOutdatedDependencies);
                    } catch (err) {
                      if (options.onErrored) {
                        options.onErrored({
                          /******/
                          type: "accept-errored",
                          /******/
                          moduleId,
                          /******/
                          dependencyId: moduleOutdatedDependencies[i],
                          /******/
                          error: err
                          /******/
                        });
                      }
                      if (!options.ignoreErrored) {
                        if (!error) error = err;
                      }
                    }
                  }
                }
              }
            }
            for (i = 0; i < outdatedSelfAcceptedModules.length; i++) {
              var item = outdatedSelfAcceptedModules[i];
              moduleId = item.module;
              hotCurrentParents = [moduleId];
              try {
                __webpack_require__(moduleId);
              } catch (err) {
                if (typeof item.errorHandler === "function") {
                  try {
                    item.errorHandler(err);
                  } catch (err2) {
                    if (options.onErrored) {
                      options.onErrored({
                        /******/
                        type: "self-accept-error-handler-errored",
                        /******/
                        moduleId,
                        /******/
                        error: err2,
                        /******/
                        originalError: err
                        /******/
                      });
                    }
                    if (!options.ignoreErrored) {
                      if (!error) error = err2;
                    }
                    if (!error) error = err;
                  }
                } else {
                  if (options.onErrored) {
                    options.onErrored({
                      /******/
                      type: "self-accept-errored",
                      /******/
                      moduleId,
                      /******/
                      error: err
                      /******/
                    });
                  }
                  if (!options.ignoreErrored) {
                    if (!error) error = err;
                  }
                }
              }
            }
            if (error) {
              hotSetStatus("fail");
              return Promise.reject(error);
            }
            hotSetStatus("idle");
            return new Promise(function(resolve) {
              resolve(outdatedModules);
            });
          }
          var installedModules = {};
          function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) {
              return installedModules[moduleId].exports;
            }
            var module2 = installedModules[moduleId] = {
              /******/
              i: moduleId,
              /******/
              l: false,
              /******/
              exports: {},
              /******/
              hot: hotCreateModule(moduleId),
              /******/
              parents: (hotCurrentParentsTemp = hotCurrentParents, hotCurrentParents = [], hotCurrentParentsTemp),
              /******/
              children: []
              /******/
            };
            modules[moduleId].call(module2.exports, module2, module2.exports, hotCreateRequire(moduleId));
            module2.l = true;
            return module2.exports;
          }
          __webpack_require__.m = modules;
          __webpack_require__.c = installedModules;
          __webpack_require__.d = function(exports2, name, getter) {
            if (!__webpack_require__.o(exports2, name)) {
              Object.defineProperty(exports2, name, { enumerable: true, get: getter });
            }
          };
          __webpack_require__.r = function(exports2) {
            if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
              Object.defineProperty(exports2, Symbol.toStringTag, { value: "Module" });
            }
            Object.defineProperty(exports2, "__esModule", { value: true });
          };
          __webpack_require__.t = function(value, mode) {
            if (mode & 1) value = __webpack_require__(value);
            if (mode & 8) return value;
            if (mode & 4 && typeof value === "object" && value && value.__esModule) return value;
            var ns = /* @__PURE__ */ Object.create(null);
            __webpack_require__.r(ns);
            Object.defineProperty(ns, "default", { enumerable: true, value });
            if (mode & 2 && typeof value != "string") for (var key in value) __webpack_require__.d(ns, key, (function(key2) {
              return value[key2];
            }).bind(null, key));
            return ns;
          };
          __webpack_require__.n = function(module2) {
            var getter = module2 && module2.__esModule ? (
              /******/
              function getDefault() {
                return module2["default"];
              }
            ) : (
              /******/
              function getModuleExports() {
                return module2;
              }
            );
            __webpack_require__.d(getter, "a", getter);
            return getter;
          };
          __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
          };
          __webpack_require__.p = "";
          __webpack_require__.h = function() {
            return hotCurrentHash;
          };
          return hotCreateRequire("./index.js")(__webpack_require__.s = "./index.js");
        }({
          /***/
          "./canvasToPixel.js": (
            /*!**************************!*\
              !*** ./canvasToPixel.js ***!
              \**************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/getTransform.js */
                "./internal/getTransform.js"
              );
              __webpack_exports__["default"] = function(element, pt) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                var transform = Object(_internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
                transform.invert();
                return transform.transformPoint(pt.x, pt.y);
              };
            }
          ),
          /***/
          "./colors/colormap.js": (
            /*!****************************!*\
              !*** ./colors/colormap.js ***!
              \****************************/
            /*! exports provided: getColormapsList, getColormap */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "getColormapsList", function() {
                return getColormapsList;
              });
              __webpack_require__.d(__webpack_exports__, "getColormap", function() {
                return getColormap;
              });
              var _lookupTable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./lookupTable.js */
                "./colors/lookupTable.js"
              );
              var COLOR_TRANSPARENT = [0, 0, 0, 0];
              var colormapsData = {
                hotIron: {
                  name: "Hot Iron",
                  numOfColors: 256,
                  colors: [[0, 0, 0, 255], [2, 0, 0, 255], [4, 0, 0, 255], [6, 0, 0, 255], [8, 0, 0, 255], [10, 0, 0, 255], [12, 0, 0, 255], [14, 0, 0, 255], [16, 0, 0, 255], [18, 0, 0, 255], [20, 0, 0, 255], [22, 0, 0, 255], [24, 0, 0, 255], [26, 0, 0, 255], [28, 0, 0, 255], [30, 0, 0, 255], [32, 0, 0, 255], [34, 0, 0, 255], [36, 0, 0, 255], [38, 0, 0, 255], [40, 0, 0, 255], [42, 0, 0, 255], [44, 0, 0, 255], [46, 0, 0, 255], [48, 0, 0, 255], [50, 0, 0, 255], [52, 0, 0, 255], [54, 0, 0, 255], [56, 0, 0, 255], [58, 0, 0, 255], [60, 0, 0, 255], [62, 0, 0, 255], [64, 0, 0, 255], [66, 0, 0, 255], [68, 0, 0, 255], [70, 0, 0, 255], [72, 0, 0, 255], [74, 0, 0, 255], [76, 0, 0, 255], [78, 0, 0, 255], [80, 0, 0, 255], [82, 0, 0, 255], [84, 0, 0, 255], [86, 0, 0, 255], [88, 0, 0, 255], [90, 0, 0, 255], [92, 0, 0, 255], [94, 0, 0, 255], [96, 0, 0, 255], [98, 0, 0, 255], [100, 0, 0, 255], [102, 0, 0, 255], [104, 0, 0, 255], [106, 0, 0, 255], [108, 0, 0, 255], [110, 0, 0, 255], [112, 0, 0, 255], [114, 0, 0, 255], [116, 0, 0, 255], [118, 0, 0, 255], [120, 0, 0, 255], [122, 0, 0, 255], [124, 0, 0, 255], [126, 0, 0, 255], [128, 0, 0, 255], [130, 0, 0, 255], [132, 0, 0, 255], [134, 0, 0, 255], [136, 0, 0, 255], [138, 0, 0, 255], [140, 0, 0, 255], [142, 0, 0, 255], [144, 0, 0, 255], [146, 0, 0, 255], [148, 0, 0, 255], [150, 0, 0, 255], [152, 0, 0, 255], [154, 0, 0, 255], [156, 0, 0, 255], [158, 0, 0, 255], [160, 0, 0, 255], [162, 0, 0, 255], [164, 0, 0, 255], [166, 0, 0, 255], [168, 0, 0, 255], [170, 0, 0, 255], [172, 0, 0, 255], [174, 0, 0, 255], [176, 0, 0, 255], [178, 0, 0, 255], [180, 0, 0, 255], [182, 0, 0, 255], [184, 0, 0, 255], [186, 0, 0, 255], [188, 0, 0, 255], [190, 0, 0, 255], [192, 0, 0, 255], [194, 0, 0, 255], [196, 0, 0, 255], [198, 0, 0, 255], [200, 0, 0, 255], [202, 0, 0, 255], [204, 0, 0, 255], [206, 0, 0, 255], [208, 0, 0, 255], [210, 0, 0, 255], [212, 0, 0, 255], [214, 0, 0, 255], [216, 0, 0, 255], [218, 0, 0, 255], [220, 0, 0, 255], [222, 0, 0, 255], [224, 0, 0, 255], [226, 0, 0, 255], [228, 0, 0, 255], [230, 0, 0, 255], [232, 0, 0, 255], [234, 0, 0, 255], [236, 0, 0, 255], [238, 0, 0, 255], [240, 0, 0, 255], [242, 0, 0, 255], [244, 0, 0, 255], [246, 0, 0, 255], [248, 0, 0, 255], [250, 0, 0, 255], [252, 0, 0, 255], [254, 0, 0, 255], [255, 0, 0, 255], [255, 2, 0, 255], [255, 4, 0, 255], [255, 6, 0, 255], [255, 8, 0, 255], [255, 10, 0, 255], [255, 12, 0, 255], [255, 14, 0, 255], [255, 16, 0, 255], [255, 18, 0, 255], [255, 20, 0, 255], [255, 22, 0, 255], [255, 24, 0, 255], [255, 26, 0, 255], [255, 28, 0, 255], [255, 30, 0, 255], [255, 32, 0, 255], [255, 34, 0, 255], [255, 36, 0, 255], [255, 38, 0, 255], [255, 40, 0, 255], [255, 42, 0, 255], [255, 44, 0, 255], [255, 46, 0, 255], [255, 48, 0, 255], [255, 50, 0, 255], [255, 52, 0, 255], [255, 54, 0, 255], [255, 56, 0, 255], [255, 58, 0, 255], [255, 60, 0, 255], [255, 62, 0, 255], [255, 64, 0, 255], [255, 66, 0, 255], [255, 68, 0, 255], [255, 70, 0, 255], [255, 72, 0, 255], [255, 74, 0, 255], [255, 76, 0, 255], [255, 78, 0, 255], [255, 80, 0, 255], [255, 82, 0, 255], [255, 84, 0, 255], [255, 86, 0, 255], [255, 88, 0, 255], [255, 90, 0, 255], [255, 92, 0, 255], [255, 94, 0, 255], [255, 96, 0, 255], [255, 98, 0, 255], [255, 100, 0, 255], [255, 102, 0, 255], [255, 104, 0, 255], [255, 106, 0, 255], [255, 108, 0, 255], [255, 110, 0, 255], [255, 112, 0, 255], [255, 114, 0, 255], [255, 116, 0, 255], [255, 118, 0, 255], [255, 120, 0, 255], [255, 122, 0, 255], [255, 124, 0, 255], [255, 126, 0, 255], [255, 128, 4, 255], [255, 130, 8, 255], [255, 132, 12, 255], [255, 134, 16, 255], [255, 136, 20, 255], [255, 138, 24, 255], [255, 140, 28, 255], [255, 142, 32, 255], [255, 144, 36, 255], [255, 146, 40, 255], [255, 148, 44, 255], [255, 150, 48, 255], [255, 152, 52, 255], [255, 154, 56, 255], [255, 156, 60, 255], [255, 158, 64, 255], [255, 160, 68, 255], [255, 162, 72, 255], [255, 164, 76, 255], [255, 166, 80, 255], [255, 168, 84, 255], [255, 170, 88, 255], [255, 172, 92, 255], [255, 174, 96, 255], [255, 176, 100, 255], [255, 178, 104, 255], [255, 180, 108, 255], [255, 182, 112, 255], [255, 184, 116, 255], [255, 186, 120, 255], [255, 188, 124, 255], [255, 190, 128, 255], [255, 192, 132, 255], [255, 194, 136, 255], [255, 196, 140, 255], [255, 198, 144, 255], [255, 200, 148, 255], [255, 202, 152, 255], [255, 204, 156, 255], [255, 206, 160, 255], [255, 208, 164, 255], [255, 210, 168, 255], [255, 212, 172, 255], [255, 214, 176, 255], [255, 216, 180, 255], [255, 218, 184, 255], [255, 220, 188, 255], [255, 222, 192, 255], [255, 224, 196, 255], [255, 226, 200, 255], [255, 228, 204, 255], [255, 230, 208, 255], [255, 232, 212, 255], [255, 234, 216, 255], [255, 236, 220, 255], [255, 238, 224, 255], [255, 240, 228, 255], [255, 242, 232, 255], [255, 244, 236, 255], [255, 246, 240, 255], [255, 248, 244, 255], [255, 250, 248, 255], [255, 252, 252, 255], [255, 255, 255, 255]]
                },
                pet: {
                  name: "PET",
                  numColors: 256,
                  colors: [[0, 0, 0, 255], [0, 2, 1, 255], [0, 4, 3, 255], [0, 6, 5, 255], [0, 8, 7, 255], [0, 10, 9, 255], [0, 12, 11, 255], [0, 14, 13, 255], [0, 16, 15, 255], [0, 18, 17, 255], [0, 20, 19, 255], [0, 22, 21, 255], [0, 24, 23, 255], [0, 26, 25, 255], [0, 28, 27, 255], [0, 30, 29, 255], [0, 32, 31, 255], [0, 34, 33, 255], [0, 36, 35, 255], [0, 38, 37, 255], [0, 40, 39, 255], [0, 42, 41, 255], [0, 44, 43, 255], [0, 46, 45, 255], [0, 48, 47, 255], [0, 50, 49, 255], [0, 52, 51, 255], [0, 54, 53, 255], [0, 56, 55, 255], [0, 58, 57, 255], [0, 60, 59, 255], [0, 62, 61, 255], [0, 65, 63, 255], [0, 67, 65, 255], [0, 69, 67, 255], [0, 71, 69, 255], [0, 73, 71, 255], [0, 75, 73, 255], [0, 77, 75, 255], [0, 79, 77, 255], [0, 81, 79, 255], [0, 83, 81, 255], [0, 85, 83, 255], [0, 87, 85, 255], [0, 89, 87, 255], [0, 91, 89, 255], [0, 93, 91, 255], [0, 95, 93, 255], [0, 97, 95, 255], [0, 99, 97, 255], [0, 101, 99, 255], [0, 103, 101, 255], [0, 105, 103, 255], [0, 107, 105, 255], [0, 109, 107, 255], [0, 111, 109, 255], [0, 113, 111, 255], [0, 115, 113, 255], [0, 117, 115, 255], [0, 119, 117, 255], [0, 121, 119, 255], [0, 123, 121, 255], [0, 125, 123, 255], [0, 128, 125, 255], [1, 126, 127, 255], [3, 124, 129, 255], [5, 122, 131, 255], [7, 120, 133, 255], [9, 118, 135, 255], [11, 116, 137, 255], [13, 114, 139, 255], [15, 112, 141, 255], [17, 110, 143, 255], [19, 108, 145, 255], [21, 106, 147, 255], [23, 104, 149, 255], [25, 102, 151, 255], [27, 100, 153, 255], [29, 98, 155, 255], [31, 96, 157, 255], [33, 94, 159, 255], [35, 92, 161, 255], [37, 90, 163, 255], [39, 88, 165, 255], [41, 86, 167, 255], [43, 84, 169, 255], [45, 82, 171, 255], [47, 80, 173, 255], [49, 78, 175, 255], [51, 76, 177, 255], [53, 74, 179, 255], [55, 72, 181, 255], [57, 70, 183, 255], [59, 68, 185, 255], [61, 66, 187, 255], [63, 64, 189, 255], [65, 63, 191, 255], [67, 61, 193, 255], [69, 59, 195, 255], [71, 57, 197, 255], [73, 55, 199, 255], [75, 53, 201, 255], [77, 51, 203, 255], [79, 49, 205, 255], [81, 47, 207, 255], [83, 45, 209, 255], [85, 43, 211, 255], [86, 41, 213, 255], [88, 39, 215, 255], [90, 37, 217, 255], [92, 35, 219, 255], [94, 33, 221, 255], [96, 31, 223, 255], [98, 29, 225, 255], [100, 27, 227, 255], [102, 25, 229, 255], [104, 23, 231, 255], [106, 21, 233, 255], [108, 19, 235, 255], [110, 17, 237, 255], [112, 15, 239, 255], [114, 13, 241, 255], [116, 11, 243, 255], [118, 9, 245, 255], [120, 7, 247, 255], [122, 5, 249, 255], [124, 3, 251, 255], [126, 1, 253, 255], [128, 0, 255, 255], [130, 2, 252, 255], [132, 4, 248, 255], [134, 6, 244, 255], [136, 8, 240, 255], [138, 10, 236, 255], [140, 12, 232, 255], [142, 14, 228, 255], [144, 16, 224, 255], [146, 18, 220, 255], [148, 20, 216, 255], [150, 22, 212, 255], [152, 24, 208, 255], [154, 26, 204, 255], [156, 28, 200, 255], [158, 30, 196, 255], [160, 32, 192, 255], [162, 34, 188, 255], [164, 36, 184, 255], [166, 38, 180, 255], [168, 40, 176, 255], [170, 42, 172, 255], [171, 44, 168, 255], [173, 46, 164, 255], [175, 48, 160, 255], [177, 50, 156, 255], [179, 52, 152, 255], [181, 54, 148, 255], [183, 56, 144, 255], [185, 58, 140, 255], [187, 60, 136, 255], [189, 62, 132, 255], [191, 64, 128, 255], [193, 66, 124, 255], [195, 68, 120, 255], [197, 70, 116, 255], [199, 72, 112, 255], [201, 74, 108, 255], [203, 76, 104, 255], [205, 78, 100, 255], [207, 80, 96, 255], [209, 82, 92, 255], [211, 84, 88, 255], [213, 86, 84, 255], [215, 88, 80, 255], [217, 90, 76, 255], [219, 92, 72, 255], [221, 94, 68, 255], [223, 96, 64, 255], [225, 98, 60, 255], [227, 100, 56, 255], [229, 102, 52, 255], [231, 104, 48, 255], [233, 106, 44, 255], [235, 108, 40, 255], [237, 110, 36, 255], [239, 112, 32, 255], [241, 114, 28, 255], [243, 116, 24, 255], [245, 118, 20, 255], [247, 120, 16, 255], [249, 122, 12, 255], [251, 124, 8, 255], [253, 126, 4, 255], [255, 128, 0, 255], [255, 130, 4, 255], [255, 132, 8, 255], [255, 134, 12, 255], [255, 136, 16, 255], [255, 138, 20, 255], [255, 140, 24, 255], [255, 142, 28, 255], [255, 144, 32, 255], [255, 146, 36, 255], [255, 148, 40, 255], [255, 150, 44, 255], [255, 152, 48, 255], [255, 154, 52, 255], [255, 156, 56, 255], [255, 158, 60, 255], [255, 160, 64, 255], [255, 162, 68, 255], [255, 164, 72, 255], [255, 166, 76, 255], [255, 168, 80, 255], [255, 170, 85, 255], [255, 172, 89, 255], [255, 174, 93, 255], [255, 176, 97, 255], [255, 178, 101, 255], [255, 180, 105, 255], [255, 182, 109, 255], [255, 184, 113, 255], [255, 186, 117, 255], [255, 188, 121, 255], [255, 190, 125, 255], [255, 192, 129, 255], [255, 194, 133, 255], [255, 196, 137, 255], [255, 198, 141, 255], [255, 200, 145, 255], [255, 202, 149, 255], [255, 204, 153, 255], [255, 206, 157, 255], [255, 208, 161, 255], [255, 210, 165, 255], [255, 212, 170, 255], [255, 214, 174, 255], [255, 216, 178, 255], [255, 218, 182, 255], [255, 220, 186, 255], [255, 222, 190, 255], [255, 224, 194, 255], [255, 226, 198, 255], [255, 228, 202, 255], [255, 230, 206, 255], [255, 232, 210, 255], [255, 234, 214, 255], [255, 236, 218, 255], [255, 238, 222, 255], [255, 240, 226, 255], [255, 242, 230, 255], [255, 244, 234, 255], [255, 246, 238, 255], [255, 248, 242, 255], [255, 250, 246, 255], [255, 252, 250, 255], [255, 255, 255, 255]]
                },
                hotMetalBlue: {
                  name: "Hot Metal Blue",
                  numColors: 256,
                  colors: [[0, 0, 0, 255], [0, 0, 2, 255], [0, 0, 4, 255], [0, 0, 6, 255], [0, 0, 8, 255], [0, 0, 10, 255], [0, 0, 12, 255], [0, 0, 14, 255], [0, 0, 16, 255], [0, 0, 17, 255], [0, 0, 19, 255], [0, 0, 21, 255], [0, 0, 23, 255], [0, 0, 25, 255], [0, 0, 27, 255], [0, 0, 29, 255], [0, 0, 31, 255], [0, 0, 33, 255], [0, 0, 35, 255], [0, 0, 37, 255], [0, 0, 39, 255], [0, 0, 41, 255], [0, 0, 43, 255], [0, 0, 45, 255], [0, 0, 47, 255], [0, 0, 49, 255], [0, 0, 51, 255], [0, 0, 53, 255], [0, 0, 55, 255], [0, 0, 57, 255], [0, 0, 59, 255], [0, 0, 61, 255], [0, 0, 63, 255], [0, 0, 65, 255], [0, 0, 67, 255], [0, 0, 69, 255], [0, 0, 71, 255], [0, 0, 73, 255], [0, 0, 75, 255], [0, 0, 77, 255], [0, 0, 79, 255], [0, 0, 81, 255], [0, 0, 83, 255], [0, 0, 84, 255], [0, 0, 86, 255], [0, 0, 88, 255], [0, 0, 90, 255], [0, 0, 92, 255], [0, 0, 94, 255], [0, 0, 96, 255], [0, 0, 98, 255], [0, 0, 100, 255], [0, 0, 102, 255], [0, 0, 104, 255], [0, 0, 106, 255], [0, 0, 108, 255], [0, 0, 110, 255], [0, 0, 112, 255], [0, 0, 114, 255], [0, 0, 116, 255], [0, 0, 117, 255], [0, 0, 119, 255], [0, 0, 121, 255], [0, 0, 123, 255], [0, 0, 125, 255], [0, 0, 127, 255], [0, 0, 129, 255], [0, 0, 131, 255], [0, 0, 133, 255], [0, 0, 135, 255], [0, 0, 137, 255], [0, 0, 139, 255], [0, 0, 141, 255], [0, 0, 143, 255], [0, 0, 145, 255], [0, 0, 147, 255], [0, 0, 149, 255], [0, 0, 151, 255], [0, 0, 153, 255], [0, 0, 155, 255], [0, 0, 157, 255], [0, 0, 159, 255], [0, 0, 161, 255], [0, 0, 163, 255], [0, 0, 165, 255], [0, 0, 167, 255], [3, 0, 169, 255], [6, 0, 171, 255], [9, 0, 173, 255], [12, 0, 175, 255], [15, 0, 177, 255], [18, 0, 179, 255], [21, 0, 181, 255], [24, 0, 183, 255], [26, 0, 184, 255], [29, 0, 186, 255], [32, 0, 188, 255], [35, 0, 190, 255], [38, 0, 192, 255], [41, 0, 194, 255], [44, 0, 196, 255], [47, 0, 198, 255], [50, 0, 200, 255], [52, 0, 197, 255], [55, 0, 194, 255], [57, 0, 191, 255], [59, 0, 188, 255], [62, 0, 185, 255], [64, 0, 182, 255], [66, 0, 179, 255], [69, 0, 176, 255], [71, 0, 174, 255], [74, 0, 171, 255], [76, 0, 168, 255], [78, 0, 165, 255], [81, 0, 162, 255], [83, 0, 159, 255], [85, 0, 156, 255], [88, 0, 153, 255], [90, 0, 150, 255], [93, 2, 144, 255], [96, 4, 138, 255], [99, 6, 132, 255], [102, 8, 126, 255], [105, 9, 121, 255], [108, 11, 115, 255], [111, 13, 109, 255], [114, 15, 103, 255], [116, 17, 97, 255], [119, 19, 91, 255], [122, 21, 85, 255], [125, 23, 79, 255], [128, 24, 74, 255], [131, 26, 68, 255], [134, 28, 62, 255], [137, 30, 56, 255], [140, 32, 50, 255], [143, 34, 47, 255], [146, 36, 44, 255], [149, 38, 41, 255], [152, 40, 38, 255], [155, 41, 35, 255], [158, 43, 32, 255], [161, 45, 29, 255], [164, 47, 26, 255], [166, 49, 24, 255], [169, 51, 21, 255], [172, 53, 18, 255], [175, 55, 15, 255], [178, 56, 12, 255], [181, 58, 9, 255], [184, 60, 6, 255], [187, 62, 3, 255], [190, 64, 0, 255], [194, 66, 0, 255], [198, 68, 0, 255], [201, 70, 0, 255], [205, 72, 0, 255], [209, 73, 0, 255], [213, 75, 0, 255], [217, 77, 0, 255], [221, 79, 0, 255], [224, 81, 0, 255], [228, 83, 0, 255], [232, 85, 0, 255], [236, 87, 0, 255], [240, 88, 0, 255], [244, 90, 0, 255], [247, 92, 0, 255], [251, 94, 0, 255], [255, 96, 0, 255], [255, 98, 3, 255], [255, 100, 6, 255], [255, 102, 9, 255], [255, 104, 12, 255], [255, 105, 15, 255], [255, 107, 18, 255], [255, 109, 21, 255], [255, 111, 24, 255], [255, 113, 26, 255], [255, 115, 29, 255], [255, 117, 32, 255], [255, 119, 35, 255], [255, 120, 38, 255], [255, 122, 41, 255], [255, 124, 44, 255], [255, 126, 47, 255], [255, 128, 50, 255], [255, 130, 53, 255], [255, 132, 56, 255], [255, 134, 59, 255], [255, 136, 62, 255], [255, 137, 65, 255], [255, 139, 68, 255], [255, 141, 71, 255], [255, 143, 74, 255], [255, 145, 76, 255], [255, 147, 79, 255], [255, 149, 82, 255], [255, 151, 85, 255], [255, 152, 88, 255], [255, 154, 91, 255], [255, 156, 94, 255], [255, 158, 97, 255], [255, 160, 100, 255], [255, 162, 103, 255], [255, 164, 106, 255], [255, 166, 109, 255], [255, 168, 112, 255], [255, 169, 115, 255], [255, 171, 118, 255], [255, 173, 121, 255], [255, 175, 124, 255], [255, 177, 126, 255], [255, 179, 129, 255], [255, 181, 132, 255], [255, 183, 135, 255], [255, 184, 138, 255], [255, 186, 141, 255], [255, 188, 144, 255], [255, 190, 147, 255], [255, 192, 150, 255], [255, 194, 153, 255], [255, 196, 156, 255], [255, 198, 159, 255], [255, 200, 162, 255], [255, 201, 165, 255], [255, 203, 168, 255], [255, 205, 171, 255], [255, 207, 174, 255], [255, 209, 176, 255], [255, 211, 179, 255], [255, 213, 182, 255], [255, 215, 185, 255], [255, 216, 188, 255], [255, 218, 191, 255], [255, 220, 194, 255], [255, 222, 197, 255], [255, 224, 200, 255], [255, 226, 203, 255], [255, 228, 206, 255], [255, 229, 210, 255], [255, 231, 213, 255], [255, 233, 216, 255], [255, 235, 219, 255], [255, 237, 223, 255], [255, 239, 226, 255], [255, 240, 229, 255], [255, 242, 232, 255], [255, 244, 236, 255], [255, 246, 239, 255], [255, 248, 242, 255], [255, 250, 245, 255], [255, 251, 249, 255], [255, 253, 252, 255], [255, 255, 255, 255]]
                },
                pet20Step: {
                  name: "PET 20 Step",
                  numColors: 256,
                  colors: [[0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [0, 0, 0, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [96, 0, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 80, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [48, 48, 112, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [80, 80, 128, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [96, 96, 176, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [112, 112, 192, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [128, 128, 224, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 96, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [48, 144, 48, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [80, 192, 80, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [64, 224, 64, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [224, 224, 80, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 208, 96, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 176, 64, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [208, 144, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [192, 96, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [176, 48, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 0, 0, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255], [255, 255, 255, 255]]
                },
                gray: {
                  name: "Gray",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0, 0], [1, 1, 1]],
                    green: [[0, 0, 0], [1, 1, 1]],
                    blue: [[0, 0, 0], [1, 1, 1]]
                  }
                },
                jet: {
                  name: "Jet",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0, 0], [0.35, 0, 0], [0.66, 1, 1], [0.89, 1, 1], [1, 0.5, 0.5]],
                    green: [[0, 0, 0], [0.125, 0, 0], [0.375, 1, 1], [0.64, 1, 1], [0.91, 0, 0], [1, 0, 0]],
                    blue: [[0, 0.5, 0.5], [0.11, 1, 1], [0.34, 1, 1], [0.65, 0, 0], [1, 0, 0]]
                  }
                },
                hsv: {
                  name: "HSV",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 1, 1], [0.15873, 1, 1], [0.174603, 0.96875, 0.96875], [0.333333, 0.03125, 0.03125], [0.349206, 0, 0], [0.666667, 0, 0], [0.68254, 0.03125, 0.03125], [0.84127, 0.96875, 0.96875], [0.857143, 1, 1], [1, 1, 1]],
                    green: [[0, 0, 0], [0.15873, 0.9375, 0.9375], [0.174603, 1, 1], [0.507937, 1, 1], [0.666667, 0.0625, 0.0625], [0.68254, 0, 0], [1, 0, 0]],
                    blue: [[0, 0, 0], [0.333333, 0, 0], [0.349206, 0.0625, 0.0625], [0.507937, 1, 1], [0.84127, 1, 1], [0.857143, 0.9375, 0.9375], [1, 0.09375, 0.09375]]
                  }
                },
                hot: {
                  name: "Hot",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0.0416, 0.0416], [0.365079, 1, 1], [1, 1, 1]],
                    green: [[0, 0, 0], [0.365079, 0, 0], [0.746032, 1, 1], [1, 1, 1]],
                    blue: [[0, 0, 0], [0.746032, 0, 0], [1, 1, 1]]
                  }
                },
                cool: {
                  name: "Cool",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0, 0], [1, 1, 1]],
                    green: [[0, 1, 1], [1, 0, 0]],
                    blue: [[0, 1, 1], [1, 1, 1]]
                  }
                },
                spring: {
                  name: "Spring",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 1, 1], [1, 1, 1]],
                    green: [[0, 0, 0], [1, 1, 1]],
                    blue: [[0, 1, 1], [1, 0, 0]]
                  }
                },
                summer: {
                  name: "Summer",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0, 0], [1, 1, 1]],
                    green: [[0, 0.5, 0.5], [1, 1, 1]],
                    blue: [[0, 0.4, 0.4], [1, 0.4, 0.4]]
                  }
                },
                autumn: {
                  name: "Autumn",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 1, 1], [1, 1, 1]],
                    green: [[0, 0, 0], [1, 1, 1]],
                    blue: [[0, 0, 0], [1, 0, 0]]
                  }
                },
                winter: {
                  name: "Winter",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0, 0], [1, 0, 0]],
                    green: [[0, 0, 0], [1, 1, 1]],
                    blue: [[0, 1, 1], [1, 0.5, 0.5]]
                  }
                },
                bone: {
                  name: "Bone",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0, 0], [0.746032, 0.652778, 0.652778], [1, 1, 1]],
                    green: [[0, 0, 0], [0.365079, 0.319444, 0.319444], [0.746032, 0.777778, 0.777778], [1, 1, 1]],
                    blue: [[0, 0, 0], [0.365079, 0.444444, 0.444444], [1, 1, 1]]
                  }
                },
                copper: {
                  name: "Copper",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0, 0], [0.809524, 1, 1], [1, 1, 1]],
                    green: [[0, 0, 0], [1, 0.7812, 0.7812]],
                    blue: [[0, 0, 0], [1, 0.4975, 0.4975]]
                  }
                },
                spectral: {
                  name: "Spectral",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0, 0], [0.05, 0.4667, 0.4667], [0.1, 0.5333, 0.5333], [0.15, 0, 0], [0.2, 0, 0], [0.25, 0, 0], [0.3, 0, 0], [0.35, 0, 0], [0.4, 0, 0], [0.45, 0, 0], [0.5, 0, 0], [0.55, 0, 0], [0.6, 0, 0], [0.65, 0.7333, 0.7333], [0.7, 0.9333, 0.9333], [0.75, 1, 1], [0.8, 1, 1], [0.85, 1, 1], [0.9, 0.8667, 0.8667], [0.95, 0.8, 0.8], [1, 0.8, 0.8]],
                    green: [[0, 0, 0], [0.05, 0, 0], [0.1, 0, 0], [0.15, 0, 0], [0.2, 0, 0], [0.25, 0.4667, 0.4667], [0.3, 0.6, 0.6], [0.35, 0.6667, 0.6667], [0.4, 0.6667, 0.6667], [0.45, 0.6, 0.6], [0.5, 0.7333, 0.7333], [0.55, 0.8667, 0.8667], [0.6, 1, 1], [0.65, 1, 1], [0.7, 0.9333, 0.9333], [0.75, 0.8, 0.8], [0.8, 0.6, 0.6], [0.85, 0, 0], [0.9, 0, 0], [0.95, 0, 0], [1, 0.8, 0.8]],
                    blue: [[0, 0, 0], [0.05, 0.5333, 0.5333], [0.1, 0.6, 0.6], [0.15, 0.6667, 0.6667], [0.2, 0.8667, 0.8667], [0.25, 0.8667, 0.8667], [0.3, 0.8667, 0.8667], [0.35, 0.6667, 0.6667], [0.4, 0.5333, 0.5333], [0.45, 0, 0], [0.5, 0, 0], [0.55, 0, 0], [0.6, 0, 0], [0.65, 0, 0], [0.7, 0, 0], [0.75, 0, 0], [0.8, 0, 0], [0.85, 0, 0], [0.9, 0, 0], [0.95, 0, 0], [1, 0.8, 0.8]]
                  }
                },
                coolwarm: {
                  name: "CoolWarm",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0.2298057, 0.2298057], [0.03125, 0.26623388, 0.26623388], [0.0625, 0.30386891, 0.30386891], [0.09375, 0.342804478, 0.342804478], [0.125, 0.38301334, 0.38301334], [0.15625, 0.424369608, 0.424369608], [0.1875, 0.46666708, 0.46666708], [0.21875, 0.509635204, 0.509635204], [0.25, 0.552953156, 0.552953156], [0.28125, 0.596262162, 0.596262162], [0.3125, 0.639176211, 0.639176211], [0.34375, 0.681291281, 0.681291281], [0.375, 0.722193294, 0.722193294], [0.40625, 0.761464949, 0.761464949], [0.4375, 0.798691636, 0.798691636], [0.46875, 0.833466556, 0.833466556], [0.5, 0.865395197, 0.865395197], [0.53125, 0.897787179, 0.897787179], [0.5625, 0.924127593, 0.924127593], [0.59375, 0.944468518, 0.944468518], [0.625, 0.958852946, 0.958852946], [0.65625, 0.96732803, 0.96732803], [0.6875, 0.969954137, 0.969954137], [0.71875, 0.966811177, 0.966811177], [0.75, 0.958003065, 0.958003065], [0.78125, 0.943660866, 0.943660866], [0.8125, 0.923944917, 0.923944917], [0.84375, 0.89904617, 0.89904617], [0.875, 0.869186849, 0.869186849], [0.90625, 0.834620542, 0.834620542], [0.9375, 0.795631745, 0.795631745], [0.96875, 0.752534934, 0.752534934], [1, 0.705673158, 0.705673158]],
                    green: [[0, 0.298717966, 0.298717966], [0.03125, 0.353094838, 0.353094838], [0.0625, 0.406535296, 0.406535296], [0.09375, 0.458757618, 0.458757618], [0.125, 0.50941904, 0.50941904], [0.15625, 0.558148092, 0.558148092], [0.1875, 0.604562568, 0.604562568], [0.21875, 0.648280772, 0.648280772], [0.25, 0.688929332, 0.688929332], [0.28125, 0.726149107, 0.726149107], [0.3125, 0.759599947, 0.759599947], [0.34375, 0.788964712, 0.788964712], [0.375, 0.813952739, 0.813952739], [0.40625, 0.834302879, 0.834302879], [0.4375, 0.849786142, 0.849786142], [0.46875, 0.860207984, 0.860207984], [0.5, 0.86541021, 0.86541021], [0.53125, 0.848937047, 0.848937047], [0.5625, 0.827384882, 0.827384882], [0.59375, 0.800927443, 0.800927443], [0.625, 0.769767752, 0.769767752], [0.65625, 0.734132809, 0.734132809], [0.6875, 0.694266682, 0.694266682], [0.71875, 0.650421156, 0.650421156], [0.75, 0.602842431, 0.602842431], [0.78125, 0.551750968, 0.551750968], [0.8125, 0.49730856, 0.49730856], [0.84375, 0.439559467, 0.439559467], [0.875, 0.378313092, 0.378313092], [0.90625, 0.312874446, 0.312874446], [0.9375, 0.24128379, 0.24128379], [0.96875, 0.157246067, 0.157246067], [1, 0.01555616, 0.01555616]],
                    blue: [[0, 0.753683153, 0.753683153], [0.03125, 0.801466763, 0.801466763], [0.0625, 0.84495867, 0.84495867], [0.09375, 0.883725899, 0.883725899], [0.125, 0.917387822, 0.917387822], [0.15625, 0.945619588, 0.945619588], [0.1875, 0.968154911, 0.968154911], [0.21875, 0.98478814, 0.98478814], [0.25, 0.995375608, 0.995375608], [0.28125, 0.999836203, 0.999836203], [0.3125, 0.998151185, 0.998151185], [0.34375, 0.990363227, 0.990363227], [0.375, 0.976574709, 0.976574709], [0.40625, 0.956945269, 0.956945269], [0.4375, 0.931688648, 0.931688648], [0.46875, 0.901068838, 0.901068838], [0.5, 0.865395561, 0.865395561], [0.53125, 0.820880546, 0.820880546], [0.5625, 0.774508472, 0.774508472], [0.59375, 0.726736146, 0.726736146], [0.625, 0.678007945, 0.678007945], [0.65625, 0.628751763, 0.628751763], [0.6875, 0.579375448, 0.579375448], [0.71875, 0.530263762, 0.530263762], [0.75, 0.481775914, 0.481775914], [0.78125, 0.434243684, 0.434243684], [0.8125, 0.387970225, 0.387970225], [0.84375, 0.343229596, 0.343229596], [0.875, 0.300267182, 0.300267182], [0.90625, 0.259301199, 0.259301199], [0.9375, 0.220525627, 0.220525627], [0.96875, 0.184115123, 0.184115123], [1, 0.150232812, 0.150232812]]
                  }
                },
                blues: {
                  name: "Blues",
                  numColors: 256,
                  gamma: 1,
                  segmentedData: {
                    red: [[0, 0.9686274528503418, 0.9686274528503418], [0.125, 0.8705882430076599, 0.8705882430076599], [0.25, 0.7764706015586853, 0.7764706015586853], [0.375, 0.6196078658103943, 0.6196078658103943], [0.5, 0.41960784792900085, 0.41960784792900085], [0.625, 0.25882354378700256, 0.25882354378700256], [0.75, 0.12941177189350128, 0.12941177189350128], [0.875, 0.0313725508749485, 0.0313725508749485], [1, 0.0313725508749485, 0.0313725508749485]],
                    green: [[0, 0.9843137264251709, 0.9843137264251709], [0.125, 0.9215686321258545, 0.9215686321258545], [0.25, 0.8588235378265381, 0.8588235378265381], [0.375, 0.7921568751335144, 0.7921568751335144], [0.5, 0.6823529601097107, 0.6823529601097107], [0.625, 0.572549045085907, 0.572549045085907], [0.75, 0.4431372582912445, 0.4431372582912445], [0.875, 0.3176470696926117, 0.3176470696926117], [1, 0.1882352977991104, 0.1882352977991104]],
                    blue: [[0, 1, 1], [0.125, 0.9686274528503418, 0.9686274528503418], [0.25, 0.9372549057006836, 0.9372549057006836], [0.375, 0.8823529481887817, 0.8823529481887817], [0.5, 0.8392156958580017, 0.8392156958580017], [0.625, 0.7764706015586853, 0.7764706015586853], [0.75, 0.7098039388656616, 0.7098039388656616], [0.875, 0.6117647290229797, 0.6117647290229797], [1, 0.41960784792900085, 0.41960784792900085]]
                  }
                }
              };
              function linspace(a, b, n) {
                n = n === null ? 100 : n;
                var increment = (b - a) / (n - 1);
                var vector = [];
                while (n-- > 0) {
                  vector.push(a);
                  a += increment;
                }
                vector[vector.length - 1] = b;
                return vector;
              }
              function getRank(array, elem) {
                var left = 0;
                var right = array.length - 1;
                while (left <= right) {
                  var mid = left + Math.floor((right - left) / 2);
                  var midElem = array[mid];
                  if (midElem === elem) {
                    return mid;
                  } else if (elem < midElem) {
                    right = mid - 1;
                  } else {
                    left = mid + 1;
                  }
                }
                return left;
              }
              function searchSorted(inputArray, values) {
                var i;
                var indexes = [];
                var len = values.length;
                inputArray.sort(function(a, b) {
                  return a - b;
                });
                for (i = 0; i < len; i++) {
                  indexes[i] = getRank(inputArray, values[i]);
                }
                return indexes;
              }
              function makeMappingArray(N, data, gamma) {
                var i;
                var x = [];
                var y0 = [];
                var y1 = [];
                var lut = [];
                gamma = gamma === null ? 1 : gamma;
                for (i = 0; i < data.length; i++) {
                  var element = data[i];
                  x.push((N - 1) * element[0]);
                  y0.push(element[1]);
                  y1.push(element[1]);
                }
                var xLinSpace = linspace(0, 1, N);
                for (i = 0; i < N; i++) {
                  xLinSpace[i] = (N - 1) * Math.pow(xLinSpace[i], gamma);
                }
                var xLinSpaceIndexes = searchSorted(x, xLinSpace);
                for (i = 1; i < N - 1; i++) {
                  var index = xLinSpaceIndexes[i];
                  var colorPercent = (xLinSpace[i] - x[index - 1]) / (x[index] - x[index - 1]);
                  var colorDelta = y0[index] - y1[index - 1];
                  lut[i] = colorPercent * colorDelta + y1[index - 1];
                }
                lut[0] = y1[0];
                lut[N - 1] = y0[data.length - 1];
                return lut;
              }
              function createLinearSegmentedColormap(segmentedData, N, gamma) {
                var i;
                var lut = [];
                N = N === null ? 256 : N;
                gamma = gamma === null ? 1 : gamma;
                var redLut = makeMappingArray(N, segmentedData.red, gamma);
                var greenLut = makeMappingArray(N, segmentedData.green, gamma);
                var blueLut = makeMappingArray(N, segmentedData.blue, gamma);
                for (i = 0; i < N; i++) {
                  var red = Math.round(redLut[i] * 255);
                  var green = Math.round(greenLut[i] * 255);
                  var blue = Math.round(blueLut[i] * 255);
                  var rgba = [red, green, blue, 255];
                  lut.push(rgba);
                }
                return lut;
              }
              function getColormapsList() {
                var colormaps = [];
                var keys = Object.keys(colormapsData);
                keys.forEach(function(key) {
                  if (colormapsData.hasOwnProperty(key)) {
                    var colormap = colormapsData[key];
                    colormaps.push({
                      id: key,
                      name: colormap.name
                    });
                  }
                });
                colormaps.sort(function(a, b) {
                  var aName = a.name.toLowerCase();
                  var bName = b.name.toLowerCase();
                  if (aName === bName) {
                    return 0;
                  }
                  return aName < bName ? -1 : 1;
                });
                return colormaps;
              }
              function getColormap(id, colormapData) {
                var colormap = colormapsData[id];
                if (!colormap) {
                  colormap = colormapsData[id] = colormapData || {
                    name: "",
                    colors: []
                  };
                }
                if (!colormap.colors && colormap.segmentedData) {
                  colormap.colors = createLinearSegmentedColormap(colormap.segmentedData, colormap.numColors, colormap.gamma);
                }
                return {
                  getId: function getId() {
                    return id;
                  },
                  getColorSchemeName: function getColorSchemeName() {
                    return colormap.name;
                  },
                  setColorSchemeName: function setColorSchemeName(name) {
                    colormap.name = name;
                  },
                  getNumberOfColors: function getNumberOfColors() {
                    return colormap.colors.length;
                  },
                  setNumberOfColors: function setNumberOfColors(numColors) {
                    while (colormap.colors.length < numColors) {
                      colormap.colors.push(COLOR_TRANSPARENT);
                    }
                    colormap.colors.length = numColors;
                  },
                  getColor: function getColor(index) {
                    if (this.isValidIndex(index)) {
                      return colormap.colors[index];
                    }
                    return COLOR_TRANSPARENT;
                  },
                  getColorRepeating: function getColorRepeating(index) {
                    var numColors = colormap.colors.length;
                    index = numColors ? index % numColors : 0;
                    return this.getColor(index);
                  },
                  setColor: function setColor(index, rgba) {
                    if (this.isValidIndex(index)) {
                      colormap.colors[index] = rgba;
                    }
                  },
                  addColor: function addColor(rgba) {
                    colormap.colors.push(rgba);
                  },
                  insertColor: function insertColor(index, rgba) {
                    if (this.isValidIndex(index)) {
                      colormap.colors.splice(index, 1, rgba);
                    }
                  },
                  removeColor: function removeColor(index) {
                    if (this.isValidIndex(index)) {
                      colormap.colors.splice(index, 1);
                    }
                  },
                  clearColors: function clearColors() {
                    colormap.colors = [];
                  },
                  buildLookupTable: function buildLookupTable(lut) {
                    if (!lut) {
                      return;
                    }
                    var numColors = colormap.colors.length;
                    lut.setNumberOfTableValues(numColors);
                    for (var i = 0; i < numColors; i++) {
                      lut.setTableValue(i, colormap.colors[i]);
                    }
                  },
                  createLookupTable: function createLookupTable() {
                    var lut = new _lookupTable_js__WEBPACK_IMPORTED_MODULE_0__["default"]();
                    this.buildLookupTable(lut);
                    return lut;
                  },
                  isValidIndex: function isValidIndex(index) {
                    return index >= 0 && index < colormap.colors.length;
                  }
                };
              }
            }
          ),
          /***/
          "./colors/index.js": (
            /*!*************************!*\
              !*** ./colors/index.js ***!
              \*************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _colormap_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./colormap.js */
                "./colors/colormap.js"
              );
              var _lookupTable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./lookupTable.js */
                "./colors/lookupTable.js"
              );
              __webpack_exports__["default"] = {
                getColormap: _colormap_js__WEBPACK_IMPORTED_MODULE_0__["getColormap"],
                getColormapsList: _colormap_js__WEBPACK_IMPORTED_MODULE_0__["getColormapsList"],
                LookupTable: _lookupTable_js__WEBPACK_IMPORTED_MODULE_1__["default"]
              };
            }
          ),
          /***/
          "./colors/lookupTable.js": (
            /*!*******************************!*\
              !*** ./colors/lookupTable.js ***!
              \*******************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                  var descriptor = props[i];
                  descriptor.enumerable = descriptor.enumerable || false;
                  descriptor.configurable = true;
                  if ("value" in descriptor) descriptor.writable = true;
                  Object.defineProperty(target, descriptor.key, descriptor);
                }
              }
              function _createClass(Constructor, protoProps, staticProps) {
                if (protoProps) _defineProperties(Constructor.prototype, protoProps);
                if (staticProps) _defineProperties(Constructor, staticProps);
                return Constructor;
              }
              var BELOW_RANGE_COLOR_INDEX = 0;
              var ABOVE_RANGE_COLOR_INDEX = 1;
              var NAN_COLOR_INDEX = 2;
              function HSVToRGB(hue, sat, val) {
                if (hue > 1) {
                  throw new Error("HSVToRGB expects hue < 1");
                }
                var rgb = [];
                if (sat === 0) {
                  rgb[0] = val;
                  rgb[1] = val;
                  rgb[2] = val;
                  return rgb;
                }
                var hueCase = Math.floor(hue * 6);
                var frac = 6 * hue - hueCase;
                var lx = val * (1 - sat);
                var ly = val * (1 - sat * frac);
                var lz = val * (1 - sat * (1 - frac));
                switch (hueCase) {
                  /* 0<hue<1/6 */
                  case 0:
                  case 6:
                    rgb[0] = val;
                    rgb[1] = lz;
                    rgb[2] = lx;
                    break;
                  /* 1/6<hue<2/6 */
                  case 1:
                    rgb[0] = ly;
                    rgb[1] = val;
                    rgb[2] = lx;
                    break;
                  /* 2/6<hue<3/6 */
                  case 2:
                    rgb[0] = lx;
                    rgb[1] = val;
                    rgb[2] = lz;
                    break;
                  /* 3/6<hue/4/6 */
                  case 3:
                    rgb[0] = lx;
                    rgb[1] = ly;
                    rgb[2] = val;
                    break;
                  /* 4/6<hue<5/6 */
                  case 4:
                    rgb[0] = lz;
                    rgb[1] = lx;
                    rgb[2] = val;
                    break;
                  /* 5/6<hue<1 */
                  case 5:
                    rgb[0] = val;
                    rgb[1] = lx;
                    rgb[2] = ly;
                    break;
                }
                return rgb;
              }
              function linearIndexLookupMain(v, p) {
                var dIndex;
                if (v < p.Range[0]) {
                  dIndex = p.MaxIndex + BELOW_RANGE_COLOR_INDEX + 1.5;
                } else if (v > p.Range[1]) {
                  dIndex = p.MaxIndex + ABOVE_RANGE_COLOR_INDEX + 1.5;
                } else {
                  dIndex = (v + p.Shift) * p.Scale;
                }
                return Math.floor(dIndex);
              }
              var LookupTable = function() {
                function LookupTable2() {
                  _classCallCheck(this, LookupTable2);
                  this.NumberOfColors = 256;
                  this.Ramp = "linear";
                  this.TableRange = [0, 255];
                  this.HueRange = [0, 0.66667];
                  this.SaturationRange = [1, 1];
                  this.ValueRange = [1, 1];
                  this.AlphaRange = [1, 1];
                  this.NaNColor = [128, 0, 0, 255];
                  this.BelowRangeColor = [0, 0, 0, 255];
                  this.UseBelowRangeColor = true;
                  this.AboveRangeColor = [255, 255, 255, 255];
                  this.UseAboveRangeColor = true;
                  this.InputRange = [0, 255];
                  this.Table = [];
                }
                _createClass(LookupTable2, [{
                  key: "setNumberOfTableValues",
                  value: function setNumberOfTableValues(number) {
                    this.NumberOfColors = number;
                  }
                  /**
                   * Set the shape of the table ramp to either 'linear', 'scurve' or 'sqrt'
                   * @param {String} ramp A string value representing the shape of the table. Allowed values are 'linear', 'scurve' or 'sqrt'
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "setRamp",
                  value: function setRamp(ramp) {
                    this.Ramp = ramp;
                  }
                  /**
                   * Sets the minimum/maximum scalar values for scalar mapping.
                   * Scalar values less than minimum range value are clamped to minimum range value.
                   * Scalar values greater than maximum range value are clamped to maximum range value.
                   * @param {Number} start A double representing the minimum scaler value of the LookupTable
                   * @param {any} end A double representing the maximum scaler value of the LookupTable
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "setTableRange",
                  value: function setTableRange(start, end) {
                    this.TableRange[0] = start;
                    this.TableRange[1] = end;
                  }
                  /**
                   * Set the range in hue (using automatic generation). Hue ranges between [0,1].
                   * @param {Number} start A double representing the minimum hue value in a range. Min. is 0
                   * @param {Number} end A double representing the maximum hue value in a range. Max. is 1
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "setHueRange",
                  value: function setHueRange(start, end) {
                    this.HueRange[0] = start;
                    this.HueRange[1] = end;
                  }
                  /**
                   * Set the range in saturation (using automatic generation). Saturation ranges between [0,1].
                   * @param {Number} start A double representing the minimum Saturation value in a range. Min. is 0
                   * @param {Number} end A double representing the maximum Saturation value in a range. Max. is 1
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "setSaturationRange",
                  value: function setSaturationRange(start, end) {
                    this.SaturationRange[0] = start;
                    this.SaturationRange[1] = end;
                  }
                  /**
                   * Set the range in value (using automatic generation). Value ranges between [0,1].
                   * @param {Numeber } start A double representing the minimum value in a range. Min. is 0
                   * @param {Numeber} end A double representing the maximum value in a range. Max. is 1
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "setValueRange",
                  value: function setValueRange(start, end) {
                    this.ValueRange[0] = start;
                    this.ValueRange[1] = end;
                  }
                  /**
                   * (Not Used) Sets the range of scalars which will be mapped.
                   * @param {Number} start the minimum scalar value in the range
                   * @param {Number} end the maximum scalar value in the range
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "setRange",
                  value: function setRange(start, end) {
                    this.InputRange[0] = start;
                    this.InputRange[1] = end;
                  }
                  /**
                   * Set the range in alpha (using automatic generation). Alpha ranges from [0,1].
                   * @param {Number} start A double representing the minimum alpha value
                   * @param {Number} end A double representing the maximum alpha value
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "setAlphaRange",
                  value: function setAlphaRange(start, end) {
                    this.AlphaRange[0] = start;
                    this.AlphaRange[1] = end;
                  }
                  /**
                   * Map one value through the lookup table and return the color as an
                   * RGBA array of doubles between 0 and 1.
                   * @param {Number} scalar A double scalar value which will be mapped to a color in the LookupTable
                   * @returns {Number[]} An RGBA array of doubles between 0 and 1
                   * @memberof Colors
                   */
                }, {
                  key: "getColor",
                  value: function getColor(scalar) {
                    return this.mapValue(scalar);
                  }
                  /**
                   * Generate lookup table from hue, saturation, value, alpha min/max values. Table is built from linear ramp of each value.
                   * @param {Boolean} force true to force the build of the LookupTable. Otherwie, false. This is useful if a lookup table has been defined manually
                   * (using SetTableValue) and then an application decides to rebuild the lookup table using the implicit process.
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "build",
                  value: function build(force) {
                    if (this.Table.length > 1 && !force) {
                      return;
                    }
                    this.Table = [];
                    var maxIndex = this.NumberOfColors - 1;
                    var hinc, sinc, vinc, ainc;
                    if (maxIndex) {
                      hinc = (this.HueRange[1] - this.HueRange[0]) / maxIndex;
                      sinc = (this.SaturationRange[1] - this.SaturationRange[0]) / maxIndex;
                      vinc = (this.ValueRange[1] - this.ValueRange[0]) / maxIndex;
                      ainc = (this.AlphaRange[1] - this.AlphaRange[0]) / maxIndex;
                    } else {
                      hinc = sinc = vinc = ainc = 0;
                    }
                    for (var i = 0; i <= maxIndex; i++) {
                      var hue = this.HueRange[0] + i * hinc;
                      var sat = this.SaturationRange[0] + i * sinc;
                      var val = this.ValueRange[0] + i * vinc;
                      var alpha = this.AlphaRange[0] + i * ainc;
                      var rgb = HSVToRGB(hue, sat, val);
                      var c_rgba = [];
                      switch (this.Ramp) {
                        case "scurve":
                          c_rgba[0] = Math.floor(127.5 * (1 + Math.cos((1 - rgb[0]) * Math.PI)));
                          c_rgba[1] = Math.floor(127.5 * (1 + Math.cos((1 - rgb[1]) * Math.PI)));
                          c_rgba[2] = Math.floor(127.5 * (1 + Math.cos((1 - rgb[2]) * Math.PI)));
                          c_rgba[3] = Math.floor(alpha * 255);
                          break;
                        case "linear":
                          c_rgba[0] = Math.floor(rgb[0] * 255 + 0.5);
                          c_rgba[1] = Math.floor(rgb[1] * 255 + 0.5);
                          c_rgba[2] = Math.floor(rgb[2] * 255 + 0.5);
                          c_rgba[3] = Math.floor(alpha * 255 + 0.5);
                          break;
                        case "sqrt":
                          c_rgba[0] = Math.floor(Math.sqrt(rgb[0]) * 255 + 0.5);
                          c_rgba[1] = Math.floor(Math.sqrt(rgb[1]) * 255 + 0.5);
                          c_rgba[2] = Math.floor(Math.sqrt(rgb[2]) * 255 + 0.5);
                          c_rgba[3] = Math.floor(Math.sqrt(alpha) * 255 + 0.5);
                          break;
                        default:
                          throw new Error("Invalid Ramp value (".concat(this.Ramp, ")"));
                      }
                      this.Table.push(c_rgba);
                    }
                    this.buildSpecialColors();
                  }
                  /**
                   * Ensures the out-of-range colors (Below range and Above range) are set correctly.
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "buildSpecialColors",
                  value: function buildSpecialColors() {
                    var numberOfColors = this.NumberOfColors;
                    var belowRangeColorIndex = numberOfColors + BELOW_RANGE_COLOR_INDEX;
                    var aboveRangeColorIndex = numberOfColors + ABOVE_RANGE_COLOR_INDEX;
                    var nanColorIndex = numberOfColors + NAN_COLOR_INDEX;
                    if (this.UseBelowRangeColor || numberOfColors === 0) {
                      this.Table[belowRangeColorIndex] = this.BelowRangeColor;
                    } else {
                      this.Table[belowRangeColorIndex] = this.Table[0];
                    }
                    if (this.UseAboveRangeColor || numberOfColors === 0) {
                      this.Table[aboveRangeColorIndex] = this.AboveRangeColor;
                    } else {
                      this.Table[aboveRangeColorIndex] = this.Table[numberOfColors - 1];
                    }
                    this.Table[nanColorIndex] = this.NaNColor;
                  }
                  /**
                   * Similar to GetColor - Map one value through the lookup table and return the color as an
                   * RGBA array of doubles between 0 and 1.
                   * @param {Numeber} v A double scalar value which will be mapped to a color in the LookupTable
                   * @returns {Number[]} An RGBA array of doubles between 0 and 1
                   * @memberof Colors
                   */
                }, {
                  key: "mapValue",
                  value: function mapValue(v) {
                    var index = this.getIndex(v);
                    if (index < 0) {
                      return this.NaNColor;
                    } else if (index === 0) {
                      if (this.UseBelowRangeColor && v < this.TableRange[0]) {
                        return this.BelowRangeColor;
                      }
                    } else if (index === this.NumberOfColors - 1) {
                      if (this.UseAboveRangeColor && v > this.TableRange[1]) {
                        return this.AboveRangeColor;
                      }
                    }
                    return this.Table[index];
                  }
                  /**
                   * Return the table index associated with a particular value.
                   * @param {Number} v A double value which table index will be returned.
                   * @returns {Number} The index in the LookupTable
                   * @memberof Colors
                   */
                }, {
                  key: "getIndex",
                  value: function getIndex(v) {
                    var p = {};
                    p.Range = [];
                    p.MaxIndex = this.NumberOfColors - 1;
                    p.Shift = -this.TableRange[0];
                    if (this.TableRange[1] <= this.TableRange[0]) {
                      p.Scale = Number.MAX_VALUE;
                    } else {
                      p.Scale = p.MaxIndex / (this.TableRange[1] - this.TableRange[0]);
                    }
                    p.Range[0] = this.TableRange[0];
                    p.Range[1] = this.TableRange[1];
                    if (isNaN(v)) {
                      return -1;
                    }
                    var index = linearIndexLookupMain(v, p);
                    if (index === this.NumberOfColors + BELOW_RANGE_COLOR_INDEX) {
                      index = 0;
                    } else if (index === this.NumberOfColors + ABOVE_RANGE_COLOR_INDEX) {
                      index = this.NumberOfColors - 1;
                    }
                    return index;
                  }
                  /**
                   * Directly load color into lookup table. Use [0,1] double values for color component specification.
                   * Make sure that you've either used the Build() method or used SetNumberOfTableValues() prior to using this method.
                   * @param {Number} index The index in the LookupTable of where to insert the color value
                   * @param {Number[]} rgba An array of [0,1] double values for an RGBA color component
                   * @returns {void}
                   * @memberof Colors
                   */
                }, {
                  key: "setTableValue",
                  value: function setTableValue(index, rgba) {
                    if (arguments.length === 5) {
                      rgba = Array.prototype.slice.call(arguments, 1);
                    }
                    if (index < 0) {
                      throw new Error("Can't set the table value for negative index (".concat(index, ")"));
                    }
                    if (index >= this.NumberOfColors) {
                      new Error("Index ".concat(index, " is greater than the number of colors ").concat(this.NumberOfColors));
                    }
                    this.Table[index] = rgba;
                    if (index === 0 || index === this.NumberOfColors - 1) {
                      this.buildSpecialColors();
                    }
                  }
                }]);
                return LookupTable2;
              }();
              __webpack_exports__["default"] = LookupTable;
            }
          ),
          /***/
          "./disable.js": (
            /*!********************!*\
              !*** ./disable.js ***!
              \********************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              __webpack_exports__["default"] = function(element) {
                if (element === void 0) {
                  throw new Error("disable: element must not be undefined");
                }
                var enabledElements = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElements"])();
                for (var i = 0; i < enabledElements.length; i++) {
                  if (enabledElements[i].element === element) {
                    var eventData = {
                      element
                    };
                    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].ELEMENT_DISABLED, eventData);
                    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_2__["events"], _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].ELEMENT_DISABLED, eventData);
                    enabledElements[i].element.removeChild(enabledElements[i].canvas);
                    enabledElements[i].canvas = void 0;
                    enabledElements.splice(i, 1);
                    break;
                  }
                }
              };
            }
          ),
          /***/
          "./displayImage.js": (
            /*!*************************!*\
              !*** ./displayImage.js ***!
              \*************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/getDefaultViewport.js */
                "./internal/getDefaultViewport.js"
              );
              var _updateImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./updateImage.js */
                "./updateImage.js"
              );
              var _internal_now_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./internal/now.js */
                "./internal/now.js"
              );
              var _layers_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./layers.js */
                "./layers.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              __webpack_exports__["default"] = function(element, image, viewport) {
                if (element === void 0) {
                  throw new Error("displayImage: parameter element must not be undefined");
                }
                if (image === void 0) {
                  throw new Error("displayImage: parameter image must not be undefined");
                }
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                var oldImage = enabledElement.image;
                enabledElement.image = image;
                if (enabledElement.layers && enabledElement.layers.length) {
                  Object(_layers_js__WEBPACK_IMPORTED_MODULE_4__["setLayerImage"])(element, image);
                }
                if (enabledElement.viewport === void 0) {
                  enabledElement.viewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement.canvas, image);
                }
                if (viewport) {
                  for (var attrname in viewport) {
                    if (viewport[attrname] !== null) {
                      enabledElement.viewport[attrname] = viewport[attrname];
                    }
                  }
                }
                var frameRate;
                if (enabledElement.lastImageTimeStamp !== void 0) {
                  var timeSinceLastImage = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_3__["default"])() - enabledElement.lastImageTimeStamp;
                  frameRate = (1e3 / timeSinceLastImage).toFixed();
                }
                enabledElement.lastImageTimeStamp = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_3__["default"])();
                var newImageEventData = {
                  viewport: enabledElement.viewport,
                  element: enabledElement.element,
                  image: enabledElement.image,
                  oldImage,
                  enabledElement,
                  frameRate
                };
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement.element, _events_js__WEBPACK_IMPORTED_MODULE_6__["default"].NEW_IMAGE, newImageEventData);
                Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);
              };
            }
          ),
          /***/
          "./draw.js": (
            /*!*****************!*\
              !*** ./draw.js ***!
              \*****************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/drawImage.js */
                "./internal/drawImage.js"
              );
              __webpack_exports__["default"] = function(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                Object(_internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
              };
            }
          ),
          /***/
          "./drawInvalidated.js": (
            /*!****************************!*\
              !*** ./drawInvalidated.js ***!
              \****************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/drawImage.js */
                "./internal/drawImage.js"
              );
              __webpack_exports__["default"] = function() {
                var enabledElements = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElements"])();
                for (var i = 0; i < enabledElements.length; i++) {
                  var ee = enabledElements[i];
                  if (ee.invalid === true) {
                    Object(_internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(ee, true);
                  }
                }
              };
            }
          ),
          /***/
          "./enable.js": (
            /*!*******************!*\
              !*** ./enable.js ***!
              \*******************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _resize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./resize.js */
                "./resize.js"
              );
              var _internal_drawImageSync_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./internal/drawImageSync.js */
                "./internal/drawImageSync.js"
              );
              var _internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./internal/requestAnimationFrame.js */
                "./internal/requestAnimationFrame.js"
              );
              var _internal_tryEnableWebgl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./internal/tryEnableWebgl.js */
                "./internal/tryEnableWebgl.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              var _generateUUID_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ./generateUUID.js */
                "./generateUUID.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              var _internal_getCanvas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
                /*! ./internal/getCanvas.js */
                "./internal/getCanvas.js"
              );
              function hasImageOrLayers(enabledElement) {
                return enabledElement.image !== void 0 || enabledElement.layers.length > 0;
              }
              __webpack_exports__["default"] = function(element, options) {
                if (element === void 0) {
                  throw new Error("enable: parameter element cannot be undefined");
                }
                if (options && options.renderer && options.renderer.toLowerCase() === "webgl") {
                  Object(_internal_tryEnableWebgl_js__WEBPACK_IMPORTED_MODULE_4__["default"])(options);
                }
                var canvas = Object(_internal_getCanvas_js__WEBPACK_IMPORTED_MODULE_8__["default"])(element);
                var enabledElement = {
                  element,
                  canvas,
                  image: void 0,
                  // Will be set once image is loaded
                  invalid: false,
                  // True if image needs to be drawn, false if not
                  needsRedraw: true,
                  options: Object.assign({}, options),
                  layers: [],
                  data: {},
                  renderingTools: {},
                  uuid: Object(_generateUUID_js__WEBPACK_IMPORTED_MODULE_6__["default"])()
                };
                Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["addEnabledElement"])(enabledElement);
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_7__["events"], _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].ELEMENT_ENABLED, enabledElement);
                Object(_resize_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, true);
                function draw(timestamp) {
                  if (enabledElement.canvas === void 0) {
                    return;
                  }
                  var eventDetails = {
                    enabledElement,
                    timestamp
                  };
                  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement.element, _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].PRE_RENDER, eventDetails);
                  if (enabledElement.needsRedraw && hasImageOrLayers(enabledElement)) {
                    Object(_internal_drawImageSync_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement, enabledElement.invalid);
                  }
                  Object(_internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_3__["default"])(draw);
                }
                draw();
              };
            }
          ),
          /***/
          "./enabledElementData.js": (
            /*!*******************************!*\
              !*** ./enabledElementData.js ***!
              \*******************************/
            /*! exports provided: getElementData, removeElementData */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "getElementData", function() {
                return getElementData;
              });
              __webpack_require__.d(__webpack_exports__, "removeElementData", function() {
                return removeElementData;
              });
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              function getElementData(element, dataType) {
                var ee = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                if (ee.data.hasOwnProperty(dataType) === false) {
                  ee.data[dataType] = {};
                }
                return ee.data[dataType];
              }
              function removeElementData(element, dataType) {
                var ee = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                delete ee.data[dataType];
              }
            }
          ),
          /***/
          "./enabledElements.js": (
            /*!****************************!*\
              !*** ./enabledElements.js ***!
              \****************************/
            /*! exports provided: getEnabledElement, addEnabledElement, getEnabledElementsByImageId, getEnabledElements */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "getEnabledElement", function() {
                return getEnabledElement;
              });
              __webpack_require__.d(__webpack_exports__, "addEnabledElement", function() {
                return addEnabledElement;
              });
              __webpack_require__.d(__webpack_exports__, "getEnabledElementsByImageId", function() {
                return getEnabledElementsByImageId;
              });
              __webpack_require__.d(__webpack_exports__, "getEnabledElements", function() {
                return getEnabledElements;
              });
              var enabledElements = [];
              function getEnabledElement(element) {
                if (element === void 0) {
                  throw new Error("getEnabledElement: parameter element must not be undefined");
                }
                for (var i = 0; i < enabledElements.length; i++) {
                  if (enabledElements[i].element === element) {
                    return enabledElements[i];
                  }
                }
                throw new Error("element not enabled");
              }
              function addEnabledElement(enabledElement) {
                if (enabledElement === void 0) {
                  throw new Error("getEnabledElement: enabledElement element must not be undefined");
                }
                enabledElements.push(enabledElement);
              }
              function getEnabledElementsByImageId(imageId) {
                var ees = [];
                enabledElements.forEach(function(enabledElement) {
                  if (enabledElement.image && enabledElement.image.imageId === imageId) {
                    ees.push(enabledElement);
                  }
                });
                return ees;
              }
              function getEnabledElements() {
                return enabledElements;
              }
            }
          ),
          /***/
          "./events.js": (
            /*!*******************!*\
              !*** ./events.js ***!
              \*******************/
            /*! exports provided: default, events */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "events", function() {
                return events;
              });
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                  var descriptor = props[i];
                  descriptor.enumerable = descriptor.enumerable || false;
                  descriptor.configurable = true;
                  if ("value" in descriptor) descriptor.writable = true;
                  Object.defineProperty(target, descriptor.key, descriptor);
                }
              }
              function _createClass(Constructor, protoProps, staticProps) {
                if (protoProps) _defineProperties(Constructor.prototype, protoProps);
                if (staticProps) _defineProperties(Constructor, staticProps);
                return Constructor;
              }
              var EVENTS = {
                NEW_IMAGE: "cornerstonenewimage",
                INVALIDATED: "cornerstoneinvalidated",
                PRE_RENDER: "cornerstoneprerender",
                IMAGE_CACHE_MAXIMUM_SIZE_CHANGED: "cornerstoneimagecachemaximumsizechanged",
                IMAGE_CACHE_PROMISE_REMOVED: "cornerstoneimagecachepromiseremoved",
                IMAGE_CACHE_FULL: "cornerstoneimagecachefull",
                IMAGE_CACHE_CHANGED: "cornerstoneimagecachechanged",
                WEBGL_TEXTURE_REMOVED: "cornerstonewebgltextureremoved",
                WEBGL_TEXTURE_CACHE_FULL: "cornerstonewebgltexturecachefull",
                IMAGE_LOADED: "cornerstoneimageloaded",
                IMAGE_LOAD_PROGRESS: "cornerstoneimageloadprogress",
                IMAGE_LOAD_FAILED: "cornerstoneimageloadfailed",
                ELEMENT_RESIZED: "cornerstoneelementresized",
                IMAGE_RENDERED: "cornerstoneimagerendered",
                LAYER_ADDED: "cornerstonelayeradded",
                LAYER_REMOVED: "cornerstonelayerremoved",
                ACTIVE_LAYER_CHANGED: "cornerstoneactivelayerchanged",
                ELEMENT_DISABLED: "cornerstoneelementdisabled",
                ELEMENT_ENABLED: "cornerstoneelementenabled"
              };
              __webpack_exports__["default"] = EVENTS;
              var EventTarget = function() {
                function EventTarget2() {
                  _classCallCheck(this, EventTarget2);
                  this.listeners = {};
                  this.namespaces = {};
                }
                _createClass(EventTarget2, [{
                  key: "addEventNamespaceListener",
                  value: function addEventNamespaceListener(type, callback) {
                    if (type.indexOf(".") <= 0) {
                      return;
                    }
                    this.namespaces[type] = callback;
                    this.addEventListener(type.split(".")[0], callback);
                  }
                }, {
                  key: "removeEventNamespaceListener",
                  value: function removeEventNamespaceListener(type) {
                    if (type.indexOf(".") <= 0 || !this.namespaces[type]) {
                      return;
                    }
                    this.removeEventListener(type.split(".")[0], this.namespaces[type]);
                    delete this.namespaces[type];
                  }
                }, {
                  key: "addEventListener",
                  value: function addEventListener(type, callback) {
                    if (type.indexOf(".") > 0) {
                      this.addEventNamespaceListener(type, callback);
                      return;
                    }
                    if (!(type in this.listeners)) {
                      this.listeners[type] = [];
                    }
                    this.listeners[type].push(callback);
                  }
                }, {
                  key: "removeEventListener",
                  value: function removeEventListener(type, callback) {
                    if (type.indexOf(".") > 0) {
                      this.removeEventNamespaceListener(type);
                      return;
                    }
                    if (!(type in this.listeners)) {
                      return;
                    }
                    var stack = this.listeners[type];
                    for (var i = 0, l = stack.length; i < l; i++) {
                      if (stack[i] === callback) {
                        stack.splice(i, 1);
                        return;
                      }
                    }
                  }
                }, {
                  key: "dispatchEvent",
                  value: function dispatchEvent(event) {
                    if (!(event.type in this.listeners)) {
                      return true;
                    }
                    var stack = this.listeners[event.type].slice();
                    for (var i = 0, l = stack.length; i < l; i++) {
                      stack[i].call(this, event);
                    }
                    return !event.defaultPrevented;
                  }
                }]);
                return EventTarget2;
              }();
              var events = new EventTarget();
            }
          ),
          /***/
          "./falseColorMapping.js": (
            /*!******************************!*\
              !*** ./falseColorMapping.js ***!
              \******************************/
            /*! exports provided: convertImageToFalseColorImage, convertToFalseColorImage, restoreImage */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "convertImageToFalseColorImage", function() {
                return convertImageToFalseColorImage;
              });
              __webpack_require__.d(__webpack_exports__, "convertToFalseColorImage", function() {
                return convertToFalseColorImage;
              });
              __webpack_require__.d(__webpack_exports__, "restoreImage", function() {
                return restoreImage;
              });
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./pixelDataToFalseColorData.js */
                "./pixelDataToFalseColorData.js"
              );
              var _colors_colormap_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./colors/colormap.js */
                "./colors/colormap.js"
              );
              function getPixelValues(pixelData) {
                var minPixelValue = Number.MAX_VALUE;
                var maxPixelValue = Number.MIN_VALUE;
                var len = pixelData.length;
                var pixel;
                for (var i = 0; i < len; i++) {
                  pixel = pixelData[i];
                  minPixelValue = minPixelValue < pixel ? minPixelValue : pixel;
                  maxPixelValue = maxPixelValue > pixel ? maxPixelValue : pixel;
                }
                return {
                  minPixelValue,
                  maxPixelValue
                };
              }
              function getRestoreImageMethod(image) {
                if (image.restore) {
                  return image.restore;
                }
                var color = image.color;
                var rgba = image.rgba;
                var cachedLut = image.cachedLut;
                var slope = image.slope;
                var windowWidth = image.windowWidth;
                var windowCenter = image.windowCenter;
                var minPixelValue = image.minPixelValue;
                var maxPixelValue = image.maxPixelValue;
                return function() {
                  image.color = color;
                  image.rgba = rgba;
                  image.cachedLut = cachedLut;
                  image.slope = slope;
                  image.windowWidth = windowWidth;
                  image.windowCenter = windowCenter;
                  image.minPixelValue = minPixelValue;
                  image.maxPixelValue = maxPixelValue;
                  if (image.origPixelData) {
                    var pixelData = image.origPixelData;
                    image.getPixelData = function() {
                      return pixelData;
                    };
                  }
                  image.origPixelData = void 0;
                  image.colormapId = void 0;
                  image.falseColor = void 0;
                };
              }
              function ensuresColormap(colormap) {
                if (colormap && typeof colormap === "string") {
                  colormap = Object(_colors_colormap_js__WEBPACK_IMPORTED_MODULE_2__["getColormap"])(colormap);
                }
                return colormap;
              }
              function restoreImage(image) {
                if (image.restore && typeof image.restore === "function") {
                  image.restore();
                  return true;
                }
                return false;
              }
              function convertImageToFalseColorImage(image, colormap) {
                if (image.color && !image.falseColor) {
                  throw new Error("Color transforms are not implemented yet");
                }
                colormap = ensuresColormap(colormap);
                var colormapId = colormap.getId();
                if (image.colormapId === colormapId) {
                  return false;
                }
                restoreImage(image);
                if (colormapId) {
                  var minPixelValue = image.minPixelValue || 0;
                  var maxPixelValue = image.maxPixelValue || 255;
                  image.restore = getRestoreImageMethod(image);
                  var lookupTable = colormap.createLookupTable();
                  lookupTable.setTableRange(minPixelValue, maxPixelValue);
                  Object(_pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image, lookupTable);
                  var pixelValues = getPixelValues(image.getPixelData());
                  image.minPixelValue = pixelValues.minPixelValue;
                  image.maxPixelValue = pixelValues.maxPixelValue;
                  image.windowWidth = 255;
                  image.windowCenter = 128;
                  image.colormapId = colormapId;
                }
                return true;
              }
              function convertToFalseColorImage(element, colormap) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                return convertImageToFalseColorImage(enabledElement.image, colormap);
              }
            }
          ),
          /***/
          "./fitToWindow.js": (
            /*!************************!*\
              !*** ./fitToWindow.js ***!
              \************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _updateImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./updateImage.js */
                "./updateImage.js"
              );
              var _internal_getImageFitScale_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./internal/getImageFitScale.js */
                "./internal/getImageFitScale.js"
              );
              __webpack_exports__["default"] = function(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                var image = enabledElement.image;
                enabledElement.viewport.scale = Object(_internal_getImageFitScale_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement.canvas, image, enabledElement.viewport.rotation).scaleFactor;
                enabledElement.viewport.translation.x = 0;
                enabledElement.viewport.translation.y = 0;
                Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
              };
            }
          ),
          /***/
          "./generateUUID.js": (
            /*!*************************!*\
              !*** ./generateUUID.js ***!
              \*************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function() {
                var d = (/* @__PURE__ */ new Date()).getTime();
                if (typeof performance !== "undefined" && typeof performance.now === "function") {
                  d += performance.now();
                }
                return "x.x.x.x.x.x.xxxx.xxx.x.x.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".replace(/[xy]/g, function(c) {
                  var r = (d + Math.random() * 16) % 16 | 0;
                  d = Math.floor(d / 16);
                  return (c === "x" ? r : r & 3 | 8).toString(16);
                });
              };
            }
          ),
          /***/
          "./getDefaultViewportForImage.js": (
            /*!***************************************!*\
              !*** ./getDefaultViewportForImage.js ***!
              \***************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/getDefaultViewport.js */
                "./internal/getDefaultViewport.js"
              );
              __webpack_exports__["default"] = function(element, image) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                return Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement.canvas, image);
              };
            }
          ),
          /***/
          "./getImage.js": (
            /*!*********************!*\
              !*** ./getImage.js ***!
              \*********************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              __webpack_exports__["default"] = function(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                return enabledElement.image;
              };
            }
          ),
          /***/
          "./getPixels.js": (
            /*!**********************!*\
              !*** ./getPixels.js ***!
              \**********************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _getStoredPixels_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./getStoredPixels.js */
                "./getStoredPixels.js"
              );
              var _internal_getModalityLUT_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./internal/getModalityLUT.js */
                "./internal/getModalityLUT.js"
              );
              __webpack_exports__["default"] = function(element, x, y, width, height) {
                var storedPixels = Object(_getStoredPixels_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, x, y, width, height);
                var ee = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                var mlutfn = Object(_internal_getModalityLUT_js__WEBPACK_IMPORTED_MODULE_2__["default"])(ee.image.slope, ee.image.intercept, ee.viewport.modalityLUT);
                return storedPixels.map(mlutfn);
              };
            }
          ),
          /***/
          "./getStoredPixels.js": (
            /*!****************************!*\
              !*** ./getStoredPixels.js ***!
              \****************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              __webpack_exports__["default"] = function(element, x, y, width, height) {
                if (element === void 0) {
                  throw new Error("getStoredPixels: parameter element must not be undefined");
                }
                x = Math.round(x);
                y = Math.round(y);
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                var storedPixels = [];
                var index = 0;
                var pixelData = enabledElement.image.getPixelData();
                for (var row = 0; row < height; row++) {
                  for (var column = 0; column < width; column++) {
                    var spIndex = (row + y) * enabledElement.image.columns + (column + x);
                    storedPixels[index++] = pixelData[spIndex];
                  }
                }
                return storedPixels;
              };
            }
          ),
          /***/
          "./getViewport.js": (
            /*!************************!*\
              !*** ./getViewport.js ***!
              \************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              __webpack_exports__["default"] = function(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                var viewport = enabledElement.viewport;
                if (viewport === void 0) {
                  return;
                }
                return Object.assign({}, viewport);
              };
            }
          ),
          /***/
          "./imageCache.js": (
            /*!***********************!*\
              !*** ./imageCache.js ***!
              \***********************/
            /*! exports provided: cachedImages, setMaximumSizeBytes, putImageLoadObject, getImageLoadObject, removeImageLoadObject, getCacheInfo, purgeCache, changeImageIdCacheSize, default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "cachedImages", function() {
                return cachedImages;
              });
              __webpack_require__.d(__webpack_exports__, "setMaximumSizeBytes", function() {
                return setMaximumSizeBytes;
              });
              __webpack_require__.d(__webpack_exports__, "putImageLoadObject", function() {
                return putImageLoadObject;
              });
              __webpack_require__.d(__webpack_exports__, "getImageLoadObject", function() {
                return getImageLoadObject;
              });
              __webpack_require__.d(__webpack_exports__, "removeImageLoadObject", function() {
                return removeImageLoadObject;
              });
              __webpack_require__.d(__webpack_exports__, "getCacheInfo", function() {
                return getCacheInfo;
              });
              __webpack_require__.d(__webpack_exports__, "purgeCache", function() {
                return purgeCache;
              });
              __webpack_require__.d(__webpack_exports__, "changeImageIdCacheSize", function() {
                return changeImageIdCacheSize;
              });
              var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              var maximumSizeInBytes = 1024 * 1024 * 1024;
              var cacheSizeInBytes = 0;
              var imageCacheDict = {};
              var cachedImages = [];
              function setMaximumSizeBytes(numBytes) {
                if (numBytes === void 0) {
                  throw new Error("setMaximumSizeBytes: parameter numBytes must not be undefined");
                }
                if (numBytes.toFixed === void 0) {
                  throw new Error("setMaximumSizeBytes: parameter numBytes must be a number");
                }
                maximumSizeInBytes = numBytes;
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_MAXIMUM_SIZE_CHANGED);
                purgeCacheIfNecessary();
              }
              function purgeCacheIfNecessary() {
                if (cacheSizeInBytes <= maximumSizeInBytes) {
                  return;
                }
                function compare(a, b) {
                  if (a.timeStamp > b.timeStamp) {
                    return -1;
                  }
                  if (a.timeStamp < b.timeStamp) {
                    return 1;
                  }
                  return 0;
                }
                cachedImages.sort(compare);
                while (cacheSizeInBytes > maximumSizeInBytes) {
                  var lastCachedImage = cachedImages[cachedImages.length - 1];
                  var imageId = lastCachedImage.imageId;
                  removeImageLoadObject(imageId);
                  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_PROMISE_REMOVED, {
                    imageId
                  });
                }
                var cacheInfo = getCacheInfo();
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_FULL, cacheInfo);
              }
              function putImageLoadObject(imageId, imageLoadObject) {
                if (imageId === void 0) {
                  throw new Error("putImageLoadObject: imageId must not be undefined");
                }
                if (imageLoadObject.promise === void 0) {
                  throw new Error("putImageLoadObject: imageLoadObject.promise must not be undefined");
                }
                if (imageCacheDict.hasOwnProperty(imageId) === true) {
                  throw new Error("putImageLoadObject: imageId already in cache");
                }
                if (imageLoadObject.cancelFn && typeof imageLoadObject.cancelFn !== "function") {
                  throw new Error("putImageLoadObject: imageLoadObject.cancelFn must be a function");
                }
                var cachedImage = {
                  loaded: false,
                  imageId,
                  sharedCacheKey: void 0,
                  // The sharedCacheKey for this imageId.  undefined by default
                  imageLoadObject,
                  timeStamp: Date.now(),
                  sizeInBytes: 0
                };
                imageCacheDict[imageId] = cachedImage;
                cachedImages.push(cachedImage);
                imageLoadObject.promise.then(function(image) {
                  if (cachedImages.indexOf(cachedImage) === -1) {
                    return;
                  }
                  cachedImage.loaded = true;
                  cachedImage.image = image;
                  if (image.sizeInBytes === void 0) {
                    throw new Error("putImageLoadObject: image.sizeInBytes must not be undefined");
                  }
                  if (image.sizeInBytes.toFixed === void 0) {
                    throw new Error("putImageLoadObject: image.sizeInBytes is not a number");
                  }
                  cachedImage.sizeInBytes = image.sizeInBytes;
                  cacheSizeInBytes += cachedImage.sizeInBytes;
                  var eventDetails = {
                    action: "addImage",
                    image: cachedImage
                  };
                  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_CHANGED, eventDetails);
                  cachedImage.sharedCacheKey = image.sharedCacheKey;
                  purgeCacheIfNecessary();
                }, function() {
                  var cachedImage2 = imageCacheDict[imageId];
                  cachedImages.splice(cachedImages.indexOf(cachedImage2), 1);
                  delete imageCacheDict[imageId];
                });
              }
              function getImageLoadObject(imageId) {
                if (imageId === void 0) {
                  throw new Error("getImageLoadObject: imageId must not be undefined");
                }
                var cachedImage = imageCacheDict[imageId];
                if (cachedImage === void 0) {
                  return;
                }
                cachedImage.timeStamp = Date.now();
                return cachedImage.imageLoadObject;
              }
              function removeImageLoadObject(imageId) {
                if (imageId === void 0) {
                  throw new Error("removeImageLoadObject: imageId must not be undefined");
                }
                var cachedImage = imageCacheDict[imageId];
                if (cachedImage === void 0) {
                  throw new Error("removeImageLoadObject: imageId was not present in imageCache");
                }
                cachedImages.splice(cachedImages.indexOf(cachedImage), 1);
                cacheSizeInBytes -= cachedImage.sizeInBytes;
                var eventDetails = {
                  action: "deleteImage",
                  image: cachedImage
                };
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_CHANGED, eventDetails);
                decache(cachedImage.imageLoadObject);
                delete imageCacheDict[imageId];
              }
              function getCacheInfo() {
                return {
                  maximumSizeInBytes,
                  cacheSizeInBytes,
                  numberOfImagesCached: cachedImages.length
                };
              }
              function decache(imageLoadObject) {
                imageLoadObject.promise.then(function() {
                  if (imageLoadObject.decache) {
                    imageLoadObject.decache();
                  }
                }, function() {
                  if (imageLoadObject.decache) {
                    imageLoadObject.decache();
                  }
                });
              }
              function purgeCache() {
                while (cachedImages.length > 0) {
                  var removedCachedImage = cachedImages[0];
                  removeImageLoadObject(removedCachedImage.imageId);
                }
              }
              function changeImageIdCacheSize(imageId, newCacheSize) {
                var cacheEntry = imageCacheDict[imageId];
                if (cacheEntry) {
                  cacheEntry.imageLoadObject.promise.then(function(image) {
                    var cacheSizeDifference = newCacheSize - image.sizeInBytes;
                    image.sizeInBytes = newCacheSize;
                    cacheEntry.sizeInBytes = newCacheSize;
                    cacheSizeInBytes += cacheSizeDifference;
                    var eventDetails = {
                      action: "changeImageSize",
                      image
                    };
                    Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].IMAGE_CACHE_CHANGED, eventDetails);
                  });
                }
              }
              __webpack_exports__["default"] = {
                imageCache: imageCacheDict,
                cachedImages,
                setMaximumSizeBytes,
                putImageLoadObject,
                getImageLoadObject,
                removeImageLoadObject,
                getCacheInfo,
                purgeCache,
                changeImageIdCacheSize
              };
            }
          ),
          /***/
          "./imageLoader.js": (
            /*!************************!*\
              !*** ./imageLoader.js ***!
              \************************/
            /*! exports provided: loadImage, loadAndCacheImage, registerImageLoader, registerUnknownImageLoader */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "loadImage", function() {
                return loadImage;
              });
              __webpack_require__.d(__webpack_exports__, "loadAndCacheImage", function() {
                return loadAndCacheImage;
              });
              __webpack_require__.d(__webpack_exports__, "registerImageLoader", function() {
                return registerImageLoader;
              });
              __webpack_require__.d(__webpack_exports__, "registerUnknownImageLoader", function() {
                return registerUnknownImageLoader;
              });
              var _imageCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./imageCache.js */
                "./imageCache.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              var imageLoaders = {};
              var unknownImageLoader;
              function loadImageFromImageLoader(imageId, options) {
                var colonIndex = imageId.indexOf(":");
                var scheme = imageId.substring(0, colonIndex);
                var loader = imageLoaders[scheme];
                if (loader === void 0 || loader === null) {
                  if (unknownImageLoader !== void 0) {
                    return unknownImageLoader(imageId);
                  }
                  throw new Error("loadImageFromImageLoader: no image loader for imageId");
                }
                var imageLoadObject = loader(imageId, options);
                imageLoadObject.promise.then(function(image) {
                  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_1__["events"], _events_js__WEBPACK_IMPORTED_MODULE_1__["default"].IMAGE_LOADED, {
                    image
                  });
                }, function(error) {
                  var errorObject = {
                    imageId,
                    error
                  };
                  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_1__["events"], _events_js__WEBPACK_IMPORTED_MODULE_1__["default"].IMAGE_LOAD_FAILED, errorObject);
                });
                return imageLoadObject;
              }
              function loadImage(imageId, options) {
                if (imageId === void 0) {
                  throw new Error("loadImage: parameter imageId must not be undefined");
                }
                var imageLoadObject = Object(_imageCache_js__WEBPACK_IMPORTED_MODULE_0__["getImageLoadObject"])(imageId);
                if (imageLoadObject !== void 0) {
                  return imageLoadObject.promise;
                }
                return loadImageFromImageLoader(imageId, options).promise;
              }
              function loadAndCacheImage(imageId, options) {
                if (imageId === void 0) {
                  throw new Error("loadAndCacheImage: parameter imageId must not be undefined");
                }
                var imageLoadObject = Object(_imageCache_js__WEBPACK_IMPORTED_MODULE_0__["getImageLoadObject"])(imageId);
                if (imageLoadObject !== void 0) {
                  return imageLoadObject.promise;
                }
                imageLoadObject = loadImageFromImageLoader(imageId, options);
                Object(_imageCache_js__WEBPACK_IMPORTED_MODULE_0__["putImageLoadObject"])(imageId, imageLoadObject);
                return imageLoadObject.promise;
              }
              function registerImageLoader(scheme, imageLoader) {
                imageLoaders[scheme] = imageLoader;
              }
              function registerUnknownImageLoader(imageLoader) {
                var oldImageLoader = unknownImageLoader;
                unknownImageLoader = imageLoader;
                return oldImageLoader;
              }
            }
          ),
          /***/
          "./index.js": (
            /*!******************!*\
              !*** ./index.js ***!
              \******************/
            /*! exports provided: drawImage, generateLut, getDefaultViewport, setDefaultViewport, requestAnimationFrame, storedPixelDataToCanvasImageData, storedColorPixelDataToCanvasImageData, storedPixelDataToCanvasImageDataColorLUT, storedPixelDataToCanvasImageDataPseudocolorLUT, internal, renderLabelMapImage, renderPseudoColorImage, renderColorImage, renderGrayscaleImage, renderWebImage, renderToCanvas, canvasToPixel, disable, displayImage, draw, drawInvalidated, enable, getElementData, removeElementData, getEnabledElement, addEnabledElement, getEnabledElementsByImageId, getEnabledElements, addLayer, removeLayer, getLayer, getLayers, getVisibleLayers, setActiveLayer, getActiveLayer, purgeLayers, setLayerImage, fitToWindow, getDefaultViewportForImage, getDisplayedArea, getImage, getPixels, getStoredPixels, getViewport, loadImage, loadAndCacheImage, registerImageLoader, registerUnknownImageLoader, invalidate, invalidateImageId, pageToPixel, pixelToCanvas, reset, resize, setToPixelCoordinateSystem, setViewport, updateImage, pixelDataToFalseColorData, rendering, imageCache, metaData, webGL, colors, convertImageToFalseColorImage, convertToFalseColorImage, restoreImage, EVENTS, events, triggerEvent, imageLoadPoolManager, imageRetrievalPoolManager, RequestPoolManager, default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              __webpack_require__.d(__webpack_exports__, "EVENTS", function() {
                return _events_js__WEBPACK_IMPORTED_MODULE_0__["default"];
              });
              __webpack_require__.d(__webpack_exports__, "events", function() {
                return _events_js__WEBPACK_IMPORTED_MODULE_0__["events"];
              });
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              __webpack_require__.d(__webpack_exports__, "getEnabledElement", function() {
                return _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"];
              });
              __webpack_require__.d(__webpack_exports__, "addEnabledElement", function() {
                return _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["addEnabledElement"];
              });
              __webpack_require__.d(__webpack_exports__, "getEnabledElementsByImageId", function() {
                return _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElementsByImageId"];
              });
              __webpack_require__.d(__webpack_exports__, "getEnabledElements", function() {
                return _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElements"];
              });
              var _layers_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./layers.js */
                "./layers.js"
              );
              __webpack_require__.d(__webpack_exports__, "addLayer", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["addLayer"];
              });
              __webpack_require__.d(__webpack_exports__, "removeLayer", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["removeLayer"];
              });
              __webpack_require__.d(__webpack_exports__, "getLayer", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["getLayer"];
              });
              __webpack_require__.d(__webpack_exports__, "getLayers", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["getLayers"];
              });
              __webpack_require__.d(__webpack_exports__, "getVisibleLayers", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["getVisibleLayers"];
              });
              __webpack_require__.d(__webpack_exports__, "setActiveLayer", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["setActiveLayer"];
              });
              __webpack_require__.d(__webpack_exports__, "getActiveLayer", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["getActiveLayer"];
              });
              __webpack_require__.d(__webpack_exports__, "purgeLayers", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["purgeLayers"];
              });
              __webpack_require__.d(__webpack_exports__, "setLayerImage", function() {
                return _layers_js__WEBPACK_IMPORTED_MODULE_2__["setLayerImage"];
              });
              var _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./falseColorMapping.js */
                "./falseColorMapping.js"
              );
              __webpack_require__.d(__webpack_exports__, "convertImageToFalseColorImage", function() {
                return _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["convertImageToFalseColorImage"];
              });
              __webpack_require__.d(__webpack_exports__, "convertToFalseColorImage", function() {
                return _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["convertToFalseColorImage"];
              });
              __webpack_require__.d(__webpack_exports__, "restoreImage", function() {
                return _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["restoreImage"];
              });
              var _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./enabledElementData.js */
                "./enabledElementData.js"
              );
              __webpack_require__.d(__webpack_exports__, "getElementData", function() {
                return _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__["getElementData"];
              });
              __webpack_require__.d(__webpack_exports__, "removeElementData", function() {
                return _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__["removeElementData"];
              });
              var _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./imageLoader.js */
                "./imageLoader.js"
              );
              __webpack_require__.d(__webpack_exports__, "loadImage", function() {
                return _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["loadImage"];
              });
              __webpack_require__.d(__webpack_exports__, "loadAndCacheImage", function() {
                return _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["loadAndCacheImage"];
              });
              __webpack_require__.d(__webpack_exports__, "registerImageLoader", function() {
                return _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["registerImageLoader"];
              });
              __webpack_require__.d(__webpack_exports__, "registerUnknownImageLoader", function() {
                return _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["registerUnknownImageLoader"];
              });
              var _requestPool_imageLoadPoolManager_ts__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ./requestPool/imageLoadPoolManager.ts */
                "./requestPool/imageLoadPoolManager.ts"
              );
              __webpack_require__.d(__webpack_exports__, "imageLoadPoolManager", function() {
                return _requestPool_imageLoadPoolManager_ts__WEBPACK_IMPORTED_MODULE_6__["default"];
              });
              var _requestPool_imageRetrievalPoolManager_ts__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
                /*! ./requestPool/imageRetrievalPoolManager.ts */
                "./requestPool/imageRetrievalPoolManager.ts"
              );
              __webpack_require__.d(__webpack_exports__, "imageRetrievalPoolManager", function() {
                return _requestPool_imageRetrievalPoolManager_ts__WEBPACK_IMPORTED_MODULE_7__["default"];
              });
              var _requestPool_RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
                /*! ./requestPool/RequestPoolManager.ts */
                "./requestPool/RequestPoolManager.ts"
              );
              __webpack_require__.d(__webpack_exports__, "RequestPoolManager", function() {
                return _requestPool_RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_8__["RequestPoolManager"];
              });
              var _canvasToPixel_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
                /*! ./canvasToPixel.js */
                "./canvasToPixel.js"
              );
              __webpack_require__.d(__webpack_exports__, "canvasToPixel", function() {
                return _canvasToPixel_js__WEBPACK_IMPORTED_MODULE_9__["default"];
              });
              var _colors_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
                /*! ./colors/index.js */
                "./colors/index.js"
              );
              __webpack_require__.d(__webpack_exports__, "colors", function() {
                return _colors_index_js__WEBPACK_IMPORTED_MODULE_10__["default"];
              });
              var _disable_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
                /*! ./disable.js */
                "./disable.js"
              );
              __webpack_require__.d(__webpack_exports__, "disable", function() {
                return _disable_js__WEBPACK_IMPORTED_MODULE_11__["default"];
              });
              var _displayImage_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
                /*! ./displayImage.js */
                "./displayImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "displayImage", function() {
                return _displayImage_js__WEBPACK_IMPORTED_MODULE_12__["default"];
              });
              var _draw_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(
                /*! ./draw.js */
                "./draw.js"
              );
              __webpack_require__.d(__webpack_exports__, "draw", function() {
                return _draw_js__WEBPACK_IMPORTED_MODULE_13__["default"];
              });
              var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(
                /*! ./internal/drawImage.js */
                "./internal/drawImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "drawImage", function() {
                return _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_14__["default"];
              });
              var _drawInvalidated_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(
                /*! ./drawInvalidated.js */
                "./drawInvalidated.js"
              );
              __webpack_require__.d(__webpack_exports__, "drawInvalidated", function() {
                return _drawInvalidated_js__WEBPACK_IMPORTED_MODULE_15__["default"];
              });
              var _enable_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(
                /*! ./enable.js */
                "./enable.js"
              );
              __webpack_require__.d(__webpack_exports__, "enable", function() {
                return _enable_js__WEBPACK_IMPORTED_MODULE_16__["default"];
              });
              var _fitToWindow_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(
                /*! ./fitToWindow.js */
                "./fitToWindow.js"
              );
              __webpack_require__.d(__webpack_exports__, "fitToWindow", function() {
                return _fitToWindow_js__WEBPACK_IMPORTED_MODULE_17__["default"];
              });
              var _internal_generateLut_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(
                /*! ./internal/generateLut.js */
                "./internal/generateLut.js"
              );
              __webpack_require__.d(__webpack_exports__, "generateLut", function() {
                return _internal_generateLut_js__WEBPACK_IMPORTED_MODULE_18__["default"];
              });
              var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(
                /*! ./internal/getDefaultViewport.js */
                "./internal/getDefaultViewport.js"
              );
              __webpack_require__.d(__webpack_exports__, "getDefaultViewport", function() {
                return _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_19__["default"];
              });
              var _getDefaultViewportForImage_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(
                /*! ./getDefaultViewportForImage.js */
                "./getDefaultViewportForImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "getDefaultViewportForImage", function() {
                return _getDefaultViewportForImage_js__WEBPACK_IMPORTED_MODULE_20__["default"];
              });
              var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(
                /*! ./internal/getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              __webpack_require__.d(__webpack_exports__, "getDisplayedArea", function() {
                return _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_21__["default"];
              });
              var _getImage_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(
                /*! ./getImage.js */
                "./getImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "getImage", function() {
                return _getImage_js__WEBPACK_IMPORTED_MODULE_22__["default"];
              });
              var _getPixels_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(
                /*! ./getPixels.js */
                "./getPixels.js"
              );
              __webpack_require__.d(__webpack_exports__, "getPixels", function() {
                return _getPixels_js__WEBPACK_IMPORTED_MODULE_23__["default"];
              });
              var _getStoredPixels_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(
                /*! ./getStoredPixels.js */
                "./getStoredPixels.js"
              );
              __webpack_require__.d(__webpack_exports__, "getStoredPixels", function() {
                return _getStoredPixels_js__WEBPACK_IMPORTED_MODULE_24__["default"];
              });
              var _getViewport_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(
                /*! ./getViewport.js */
                "./getViewport.js"
              );
              __webpack_require__.d(__webpack_exports__, "getViewport", function() {
                return _getViewport_js__WEBPACK_IMPORTED_MODULE_25__["default"];
              });
              var _imageCache_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(
                /*! ./imageCache.js */
                "./imageCache.js"
              );
              __webpack_require__.d(__webpack_exports__, "imageCache", function() {
                return _imageCache_js__WEBPACK_IMPORTED_MODULE_26__["default"];
              });
              var _internal_index_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(
                /*! ./internal/index.js */
                "./internal/index.js"
              );
              __webpack_require__.d(__webpack_exports__, "internal", function() {
                return _internal_index_js__WEBPACK_IMPORTED_MODULE_27__["default"];
              });
              var _invalidate_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(
                /*! ./invalidate.js */
                "./invalidate.js"
              );
              __webpack_require__.d(__webpack_exports__, "invalidate", function() {
                return _invalidate_js__WEBPACK_IMPORTED_MODULE_28__["default"];
              });
              var _invalidateImageId_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(
                /*! ./invalidateImageId.js */
                "./invalidateImageId.js"
              );
              __webpack_require__.d(__webpack_exports__, "invalidateImageId", function() {
                return _invalidateImageId_js__WEBPACK_IMPORTED_MODULE_29__["default"];
              });
              var _metaData_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(
                /*! ./metaData.js */
                "./metaData.js"
              );
              __webpack_require__.d(__webpack_exports__, "metaData", function() {
                return _metaData_js__WEBPACK_IMPORTED_MODULE_30__["default"];
              });
              var _pageToPixel_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(
                /*! ./pageToPixel.js */
                "./pageToPixel.js"
              );
              __webpack_require__.d(__webpack_exports__, "pageToPixel", function() {
                return _pageToPixel_js__WEBPACK_IMPORTED_MODULE_31__["default"];
              });
              var _pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(
                /*! ./pixelDataToFalseColorData.js */
                "./pixelDataToFalseColorData.js"
              );
              __webpack_require__.d(__webpack_exports__, "pixelDataToFalseColorData", function() {
                return _pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_32__["default"];
              });
              var _pixelToCanvas_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(
                /*! ./pixelToCanvas.js */
                "./pixelToCanvas.js"
              );
              __webpack_require__.d(__webpack_exports__, "pixelToCanvas", function() {
                return _pixelToCanvas_js__WEBPACK_IMPORTED_MODULE_33__["default"];
              });
              var _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(
                /*! ./rendering/renderColorImage.js */
                "./rendering/renderColorImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "renderColorImage", function() {
                return _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_34__["renderColorImage"];
              });
              var _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(
                /*! ./rendering/renderGrayscaleImage.js */
                "./rendering/renderGrayscaleImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "renderGrayscaleImage", function() {
                return _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_35__["renderGrayscaleImage"];
              });
              var _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(
                /*! ./rendering/renderLabelMapImage.js */
                "./rendering/renderLabelMapImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "renderLabelMapImage", function() {
                return _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_36__["renderLabelMapImage"];
              });
              var _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(
                /*! ./rendering/renderPseudoColorImage.js */
                "./rendering/renderPseudoColorImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "renderPseudoColorImage", function() {
                return _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_37__["renderPseudoColorImage"];
              });
              var _rendering_renderToCanvas_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(
                /*! ./rendering/renderToCanvas.js */
                "./rendering/renderToCanvas.js"
              );
              __webpack_require__.d(__webpack_exports__, "renderToCanvas", function() {
                return _rendering_renderToCanvas_js__WEBPACK_IMPORTED_MODULE_38__["default"];
              });
              var _rendering_renderWebImage_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(
                /*! ./rendering/renderWebImage.js */
                "./rendering/renderWebImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "renderWebImage", function() {
                return _rendering_renderWebImage_js__WEBPACK_IMPORTED_MODULE_39__["renderWebImage"];
              });
              var _rendering_index_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(
                /*! ./rendering/index.js */
                "./rendering/index.js"
              );
              __webpack_require__.d(__webpack_exports__, "rendering", function() {
                return _rendering_index_js__WEBPACK_IMPORTED_MODULE_40__["default"];
              });
              var _internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(
                /*! ./internal/requestAnimationFrame.js */
                "./internal/requestAnimationFrame.js"
              );
              __webpack_require__.d(__webpack_exports__, "requestAnimationFrame", function() {
                return _internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_41__["default"];
              });
              var _reset_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(
                /*! ./reset.js */
                "./reset.js"
              );
              __webpack_require__.d(__webpack_exports__, "reset", function() {
                return _reset_js__WEBPACK_IMPORTED_MODULE_42__["default"];
              });
              var _resize_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(
                /*! ./resize.js */
                "./resize.js"
              );
              __webpack_require__.d(__webpack_exports__, "resize", function() {
                return _resize_js__WEBPACK_IMPORTED_MODULE_43__["default"];
              });
              var _internal_setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(
                /*! ./internal/setDefaultViewport.js */
                "./internal/setDefaultViewport.js"
              );
              __webpack_require__.d(__webpack_exports__, "setDefaultViewport", function() {
                return _internal_setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_44__["default"];
              });
              var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(
                /*! ./setToPixelCoordinateSystem.js */
                "./setToPixelCoordinateSystem.js"
              );
              __webpack_require__.d(__webpack_exports__, "setToPixelCoordinateSystem", function() {
                return _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_45__["default"];
              });
              var _setViewport_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(
                /*! ./setViewport.js */
                "./setViewport.js"
              );
              __webpack_require__.d(__webpack_exports__, "setViewport", function() {
                return _setViewport_js__WEBPACK_IMPORTED_MODULE_46__["default"];
              });
              var _internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(
                /*! ./internal/storedColorPixelDataToCanvasImageData.js */
                "./internal/storedColorPixelDataToCanvasImageData.js"
              );
              __webpack_require__.d(__webpack_exports__, "storedColorPixelDataToCanvasImageData", function() {
                return _internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_47__["default"];
              });
              var _internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(
                /*! ./internal/storedPixelDataToCanvasImageData.js */
                "./internal/storedPixelDataToCanvasImageData.js"
              );
              __webpack_require__.d(__webpack_exports__, "storedPixelDataToCanvasImageData", function() {
                return _internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_48__["default"];
              });
              var _internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(
                /*! ./internal/storedPixelDataToCanvasImageDataColorLUT.js */
                "./internal/storedPixelDataToCanvasImageDataColorLUT.js"
              );
              __webpack_require__.d(__webpack_exports__, "storedPixelDataToCanvasImageDataColorLUT", function() {
                return _internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_49__["default"];
              });
              var _internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(
                /*! ./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js */
                "./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js"
              );
              __webpack_require__.d(__webpack_exports__, "storedPixelDataToCanvasImageDataPseudocolorLUT", function() {
                return _internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_50__["default"];
              });
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              __webpack_require__.d(__webpack_exports__, "triggerEvent", function() {
                return _triggerEvent_js__WEBPACK_IMPORTED_MODULE_51__["default"];
              });
              var _updateImage_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(
                /*! ./updateImage.js */
                "./updateImage.js"
              );
              __webpack_require__.d(__webpack_exports__, "updateImage", function() {
                return _updateImage_js__WEBPACK_IMPORTED_MODULE_52__["default"];
              });
              var _webgl_index_js__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(
                /*! ./webgl/index.js */
                "./webgl/index.js"
              );
              __webpack_require__.d(__webpack_exports__, "webGL", function() {
                return _webgl_index_js__WEBPACK_IMPORTED_MODULE_53__["default"];
              });
              var cornerstone = {
                drawImage: _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_14__["default"],
                generateLut: _internal_generateLut_js__WEBPACK_IMPORTED_MODULE_18__["default"],
                getDefaultViewport: _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_19__["default"],
                requestAnimationFrame: _internal_requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_41__["default"],
                storedPixelDataToCanvasImageData: _internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_48__["default"],
                storedColorPixelDataToCanvasImageData: _internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_47__["default"],
                storedPixelDataToCanvasImageDataColorLUT: _internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_49__["default"],
                storedPixelDataToCanvasImageDataPseudocolorLUT: _internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_50__["default"],
                internal: _internal_index_js__WEBPACK_IMPORTED_MODULE_27__["default"],
                renderLabelMapImage: _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_36__["renderLabelMapImage"],
                renderPseudoColorImage: _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_37__["renderPseudoColorImage"],
                renderColorImage: _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_34__["renderColorImage"],
                renderGrayscaleImage: _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_35__["renderGrayscaleImage"],
                renderWebImage: _rendering_renderWebImage_js__WEBPACK_IMPORTED_MODULE_39__["renderWebImage"],
                renderToCanvas: _rendering_renderToCanvas_js__WEBPACK_IMPORTED_MODULE_38__["default"],
                canvasToPixel: _canvasToPixel_js__WEBPACK_IMPORTED_MODULE_9__["default"],
                disable: _disable_js__WEBPACK_IMPORTED_MODULE_11__["default"],
                displayImage: _displayImage_js__WEBPACK_IMPORTED_MODULE_12__["default"],
                draw: _draw_js__WEBPACK_IMPORTED_MODULE_13__["default"],
                drawInvalidated: _drawInvalidated_js__WEBPACK_IMPORTED_MODULE_15__["default"],
                enable: _enable_js__WEBPACK_IMPORTED_MODULE_16__["default"],
                getElementData: _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__["getElementData"],
                removeElementData: _enabledElementData_js__WEBPACK_IMPORTED_MODULE_4__["removeElementData"],
                getEnabledElement: _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"],
                addEnabledElement: _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["addEnabledElement"],
                getEnabledElementsByImageId: _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElementsByImageId"],
                getEnabledElements: _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElements"],
                addLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["addLayer"],
                removeLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["removeLayer"],
                getLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["getLayer"],
                getLayers: _layers_js__WEBPACK_IMPORTED_MODULE_2__["getLayers"],
                getVisibleLayers: _layers_js__WEBPACK_IMPORTED_MODULE_2__["getVisibleLayers"],
                setActiveLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["setActiveLayer"],
                getActiveLayer: _layers_js__WEBPACK_IMPORTED_MODULE_2__["getActiveLayer"],
                purgeLayers: _layers_js__WEBPACK_IMPORTED_MODULE_2__["purgeLayers"],
                setLayerImage: _layers_js__WEBPACK_IMPORTED_MODULE_2__["setLayerImage"],
                fitToWindow: _fitToWindow_js__WEBPACK_IMPORTED_MODULE_17__["default"],
                getDefaultViewportForImage: _getDefaultViewportForImage_js__WEBPACK_IMPORTED_MODULE_20__["default"],
                getDisplayedArea: _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_21__["default"],
                setDefaultViewport: _internal_setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_44__["default"],
                getImage: _getImage_js__WEBPACK_IMPORTED_MODULE_22__["default"],
                getPixels: _getPixels_js__WEBPACK_IMPORTED_MODULE_23__["default"],
                getStoredPixels: _getStoredPixels_js__WEBPACK_IMPORTED_MODULE_24__["default"],
                getViewport: _getViewport_js__WEBPACK_IMPORTED_MODULE_25__["default"],
                loadImage: _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["loadImage"],
                loadAndCacheImage: _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["loadAndCacheImage"],
                registerImageLoader: _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["registerImageLoader"],
                registerUnknownImageLoader: _imageLoader_js__WEBPACK_IMPORTED_MODULE_5__["registerUnknownImageLoader"],
                invalidate: _invalidate_js__WEBPACK_IMPORTED_MODULE_28__["default"],
                invalidateImageId: _invalidateImageId_js__WEBPACK_IMPORTED_MODULE_29__["default"],
                pageToPixel: _pageToPixel_js__WEBPACK_IMPORTED_MODULE_31__["default"],
                pixelToCanvas: _pixelToCanvas_js__WEBPACK_IMPORTED_MODULE_33__["default"],
                reset: _reset_js__WEBPACK_IMPORTED_MODULE_42__["default"],
                resize: _resize_js__WEBPACK_IMPORTED_MODULE_43__["default"],
                setToPixelCoordinateSystem: _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_45__["default"],
                setViewport: _setViewport_js__WEBPACK_IMPORTED_MODULE_46__["default"],
                updateImage: _updateImage_js__WEBPACK_IMPORTED_MODULE_52__["default"],
                pixelDataToFalseColorData: _pixelDataToFalseColorData_js__WEBPACK_IMPORTED_MODULE_32__["default"],
                rendering: _rendering_index_js__WEBPACK_IMPORTED_MODULE_40__["default"],
                imageCache: _imageCache_js__WEBPACK_IMPORTED_MODULE_26__["default"],
                metaData: _metaData_js__WEBPACK_IMPORTED_MODULE_30__["default"],
                webGL: _webgl_index_js__WEBPACK_IMPORTED_MODULE_53__["default"],
                colors: _colors_index_js__WEBPACK_IMPORTED_MODULE_10__["default"],
                convertImageToFalseColorImage: _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["convertImageToFalseColorImage"],
                convertToFalseColorImage: _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["convertToFalseColorImage"],
                restoreImage: _falseColorMapping_js__WEBPACK_IMPORTED_MODULE_3__["restoreImage"],
                EVENTS: _events_js__WEBPACK_IMPORTED_MODULE_0__["default"],
                events: _events_js__WEBPACK_IMPORTED_MODULE_0__["events"],
                triggerEvent: _triggerEvent_js__WEBPACK_IMPORTED_MODULE_51__["default"],
                imageLoadPoolManager: _requestPool_imageLoadPoolManager_ts__WEBPACK_IMPORTED_MODULE_6__["default"],
                imageRetrievalPoolManager: _requestPool_imageRetrievalPoolManager_ts__WEBPACK_IMPORTED_MODULE_7__["default"],
                RequestPoolManager: _requestPool_RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_8__["RequestPoolManager"]
              };
              __webpack_exports__["default"] = cornerstone;
            }
          ),
          /***/
          "./internal/calculateTransform.js": (
            /*!****************************************!*\
              !*** ./internal/calculateTransform.js ***!
              \****************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./transform.js */
                "./internal/transform.js"
              );
              var _getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              __webpack_exports__["default"] = function(enabledElement, scale) {
                var transform = new _transform_js__WEBPACK_IMPORTED_MODULE_0__["Transform"]();
                transform.translate(enabledElement.canvas.width / 2, enabledElement.canvas.height / 2);
                var angle = enabledElement.viewport.rotation;
                if (angle !== 0) {
                  transform.rotate(angle * Math.PI / 180);
                }
                var widthScale = enabledElement.viewport.scale;
                var heightScale = enabledElement.viewport.scale;
                var imageDisplayedArea = Object(_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement.image, enabledElement.viewport);
                var offsetX = imageDisplayedArea.tlhc.x - 1;
                var offsetY = imageDisplayedArea.tlhc.y - 1;
                var width = imageDisplayedArea.brhc.x - offsetX;
                var height = imageDisplayedArea.brhc.y - offsetY;
                if (imageDisplayedArea.presentationSizeMode === "NONE") {
                  if (enabledElement.image.rowPixelSpacing < enabledElement.image.columnPixelSpacing) {
                    widthScale *= enabledElement.image.columnPixelSpacing / enabledElement.image.rowPixelSpacing;
                  } else if (enabledElement.image.columnPixelSpacing < enabledElement.image.rowPixelSpacing) {
                    heightScale *= enabledElement.image.rowPixelSpacing / enabledElement.image.columnPixelSpacing;
                  }
                } else {
                  widthScale = imageDisplayedArea.columnPixelSpacing;
                  heightScale = imageDisplayedArea.rowPixelSpacing;
                  if (imageDisplayedArea.presentationSizeMode === "SCALE TO FIT") {
                    var verticalScale = enabledElement.canvas.height / (height * heightScale);
                    var horizontalScale = enabledElement.canvas.width / (width * widthScale);
                    widthScale = heightScale = Math.min(horizontalScale, verticalScale);
                    if (imageDisplayedArea.rowPixelSpacing < imageDisplayedArea.columnPixelSpacing) {
                      widthScale *= imageDisplayedArea.columnPixelSpacing / imageDisplayedArea.rowPixelSpacing;
                    } else if (imageDisplayedArea.columnPixelSpacing < imageDisplayedArea.rowPixelSpacing) {
                      heightScale *= imageDisplayedArea.rowPixelSpacing / imageDisplayedArea.columnPixelSpacing;
                    }
                  }
                }
                transform.scale(widthScale, heightScale);
                if (angle !== 0) {
                  transform.rotate(-angle * Math.PI / 180);
                }
                transform.translate(enabledElement.viewport.translation.x, enabledElement.viewport.translation.y);
                if (angle !== 0) {
                  transform.rotate(angle * Math.PI / 180);
                }
                if (scale !== void 0) {
                  transform.scale(scale, scale);
                }
                if (enabledElement.viewport.hflip) {
                  transform.scale(-1, 1);
                }
                if (enabledElement.viewport.vflip) {
                  transform.scale(1, -1);
                }
                transform.translate(-width / 2, -height / 2);
                transform.translate(-offsetX, -offsetY);
                return transform;
              };
            }
          ),
          /***/
          "./internal/computeAutoVoi.js": (
            /*!************************************!*\
              !*** ./internal/computeAutoVoi.js ***!
              \************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "default", function() {
                return computeAutoVoi;
              });
              function computeAutoVoi(viewport, image) {
                if (hasVoi(viewport)) {
                  return;
                }
                var maxVoi = image.maxPixelValue * image.slope + image.intercept;
                var minVoi = image.minPixelValue * image.slope + image.intercept;
                var ww = maxVoi - minVoi;
                var wc = (maxVoi + minVoi) / 2;
                if (viewport.voi === void 0) {
                  viewport.voi = {
                    windowWidth: ww,
                    windowCenter: wc
                  };
                } else {
                  viewport.voi.windowWidth = ww;
                  viewport.voi.windowCenter = wc;
                }
              }
              function hasVoi(viewport) {
                var hasLut = viewport.voiLUT && viewport.voiLUT.lut && viewport.voiLUT.lut.length > 0;
                return hasLut || viewport.voi.windowWidth !== void 0 && viewport.voi.windowCenter !== void 0;
              }
            }
          ),
          /***/
          "./internal/createViewport.js": (
            /*!************************************!*\
              !*** ./internal/createViewport.js ***!
              \************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./setDefaultViewport.js */
                "./internal/setDefaultViewport.js"
              );
              __webpack_exports__["default"] = function() {
                var initialDefaultViewport = {
                  scale: 1,
                  translation: {
                    x: 0,
                    y: 0
                  },
                  voi: {
                    windowWidth: void 0,
                    windowCenter: void 0
                  },
                  invert: false,
                  pixelReplication: false,
                  rotation: 0,
                  hflip: false,
                  vflip: false,
                  modalityLUT: void 0,
                  voiLUT: void 0,
                  colormap: void 0,
                  labelmap: false,
                  displayedArea: void 0
                };
                return Object.assign({}, initialDefaultViewport, _setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__["state"].viewport);
              };
            }
          ),
          /***/
          "./internal/drawCompositeImage.js": (
            /*!****************************************!*\
              !*** ./internal/drawCompositeImage.js ***!
              \****************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _layers_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../layers.js */
                "./layers.js"
              );
              var _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ../rendering/renderGrayscaleImage.js */
                "./rendering/renderGrayscaleImage.js"
              );
              var _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../rendering/renderColorImage.js */
                "./rendering/renderColorImage.js"
              );
              var _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ../rendering/renderPseudoColorImage.js */
                "./rendering/renderPseudoColorImage.js"
              );
              var _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ../rendering/renderLabelMapImage.js */
                "./rendering/renderLabelMapImage.js"
              );
              var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ../setToPixelCoordinateSystem.js */
                "./setToPixelCoordinateSystem.js"
              );
              var _getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ./getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              function getViewportRatio(baseLayer, targetLayer) {
                if (!baseLayer.syncProps) {
                  updateLayerSyncProps(baseLayer);
                }
                if (!targetLayer.syncProps) {
                  updateLayerSyncProps(targetLayer);
                }
                return targetLayer.syncProps.originalScale / baseLayer.syncProps.originalScale;
              }
              function updateLayerSyncProps(layer) {
                var syncProps = layer.syncProps || {};
                syncProps.originalScale = layer.viewport.scale;
                layer.syncProps = syncProps;
              }
              function syncViewports(layers, activeLayer) {
                layers.forEach(function(layer) {
                  if (layer === activeLayer || !layer.viewport || !activeLayer.viewport) {
                    return;
                  }
                  if (!layer.syncProps) {
                    updateLayerSyncProps(layer);
                  }
                  var viewportRatio = getViewportRatio(activeLayer, layer);
                  layer.viewport.scale = activeLayer.viewport.scale * viewportRatio;
                  layer.viewport.rotation = activeLayer.viewport.rotation;
                  layer.viewport.translation = {
                    x: activeLayer.viewport.translation.x / viewportRatio,
                    y: activeLayer.viewport.translation.y / viewportRatio
                  };
                  layer.viewport.hflip = activeLayer.viewport.hflip;
                  layer.viewport.vflip = activeLayer.viewport.vflip;
                });
              }
              function renderLayers(context, layers, invalidated) {
                layers.forEach(function(layer, index) {
                  if (!layer.image) {
                    return;
                  }
                  context.save();
                  layer.canvas = context.canvas;
                  Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_5__["default"])(layer, context);
                  var colormap = layer.viewport.colormap || layer.options.colormap;
                  var labelmap = layer.viewport.labelmap;
                  var isInvalid = layer.invalid || invalidated;
                  if (colormap && colormap !== "" && labelmap === true) {
                    Object(_rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_4__["addLabelMapLayer"])(layer, isInvalid);
                  } else if (colormap && colormap !== "") {
                    Object(_rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_3__["addPseudoColorLayer"])(layer, isInvalid);
                  } else if (layer.image.color === true) {
                    Object(_rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_2__["addColorLayer"])(layer, isInvalid);
                  } else {
                    var useAlphaChannel = index === 0;
                    Object(_rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_1__["addGrayscaleLayer"])(layer, isInvalid, useAlphaChannel);
                  }
                  if (layer.options && layer.options.opacity) {
                    context.globalAlpha = layer.options.opacity;
                  } else {
                    context.globalAlpha = 1;
                  }
                  if (layer.options && layer.options.fillStyle) {
                    context.fillStyle = layer.options.fillStyle;
                  }
                  context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
                  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                  var layerDisplayedArea = Object(_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_6__["default"])(layer.image, layer.viewport);
                  var sx = layerDisplayedArea.tlhc.x - 1;
                  var sy = layerDisplayedArea.tlhc.y - 1;
                  var width = layerDisplayedArea.brhc.x - sx;
                  var height = layerDisplayedArea.brhc.y - sy;
                  context.drawImage(layer.canvas, sx, sy, width, height, sx, sy, width, height);
                  context.restore();
                  layer.invalid = false;
                });
              }
              __webpack_exports__["default"] = function(enabledElement, invalidated) {
                var element = enabledElement.element;
                var allLayers = Object(_layers_js__WEBPACK_IMPORTED_MODULE_0__["getLayers"])(element);
                var activeLayer = Object(_layers_js__WEBPACK_IMPORTED_MODULE_0__["getActiveLayer"])(element);
                var visibleLayers = Object(_layers_js__WEBPACK_IMPORTED_MODULE_0__["getVisibleLayers"])(element);
                var resynced = !enabledElement.lastSyncViewportsState && enabledElement.syncViewports;
                enabledElement.lastSyncViewportsState = enabledElement.syncViewports;
                if (resynced) {
                  allLayers.forEach(function(layer) {
                    if (layer.viewport) {
                      updateLayerSyncProps(layer);
                    }
                  });
                }
                if (enabledElement.syncViewports === true) {
                  syncViewports(visibleLayers, activeLayer);
                }
                var context = enabledElement.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.setTransform(1, 0, 0, 1, 0, 0);
                context.fillStyle = "black";
                context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height);
                renderLayers(context, visibleLayers, invalidated);
              };
            }
          ),
          /***/
          "./internal/drawImage.js": (
            /*!*******************************!*\
              !*** ./internal/drawImage.js ***!
              \*******************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function(enabledElement) {
                var invalidated = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                enabledElement.needsRedraw = true;
                if (invalidated) {
                  enabledElement.invalid = true;
                }
              };
            }
          ),
          /***/
          "./internal/drawImageSync.js": (
            /*!***********************************!*\
              !*** ./internal/drawImageSync.js ***!
              \***********************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./now.js */
                "./internal/now.js"
              );
              var _drawCompositeImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./drawCompositeImage.js */
                "./internal/drawCompositeImage.js"
              );
              var _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../rendering/renderColorImage.js */
                "./rendering/renderColorImage.js"
              );
              var _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ../rendering/renderGrayscaleImage.js */
                "./rendering/renderGrayscaleImage.js"
              );
              var _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ../rendering/renderPseudoColorImage.js */
                "./rendering/renderPseudoColorImage.js"
              );
              var _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ../rendering/renderLabelMapImage.js */
                "./rendering/renderLabelMapImage.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ../triggerEvent.js */
                "./triggerEvent.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
                /*! ../events.js */
                "./events.js"
              );
              __webpack_exports__["default"] = function(enabledElement, invalidated) {
                var image = enabledElement.image;
                var element = enabledElement.element;
                var layers = enabledElement.layers || [];
                if (!enabledElement.canvas || !enabledElement.image) {
                  return;
                }
                var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                image.stats = {
                  lastGetPixelDataTime: -1,
                  lastStoredPixelDataToCanvasImageDataTime: -1,
                  lastPutImageDataTime: -1,
                  lastRenderTime: -1,
                  lastLutGenerateTime: -1
                };
                if (layers && layers.length) {
                  Object(_drawCompositeImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement, invalidated);
                } else if (image) {
                  var render = image.render;
                  if (!render) {
                    if (enabledElement.viewport.colormap && enabledElement.viewport.colormap !== "" && enabledElement.image.labelmap === true) {
                      render = _rendering_renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_5__["renderLabelMapImage"];
                    } else if (enabledElement.viewport.colormap && enabledElement.viewport.colormap !== "") {
                      render = _rendering_renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_4__["renderPseudoColorImage"];
                    } else if (image.color) {
                      render = _rendering_renderColorImage_js__WEBPACK_IMPORTED_MODULE_2__["renderColorImage"];
                    } else {
                      render = _rendering_renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_3__["renderGrayscaleImage"];
                    }
                  }
                  render(enabledElement, invalidated);
                }
                var renderTimeInMs = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
                var eventData = {
                  viewport: enabledElement.viewport,
                  element,
                  image,
                  enabledElement,
                  canvasContext: enabledElement.canvas.getContext("2d", {
                    desynchronized: true
                  }),
                  renderTimeInMs
                };
                image.stats.lastRenderTime = renderTimeInMs;
                enabledElement.invalid = false;
                enabledElement.needsRedraw = false;
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_6__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_7__["default"].IMAGE_RENDERED, eventData);
              };
            }
          ),
          /***/
          "./internal/generateColorLut.js": (
            /*!**************************************!*\
              !*** ./internal/generateColorLut.js ***!
              \**************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _getVOILut_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./getVOILut.js */
                "./internal/getVOILut.js"
              );
              __webpack_exports__["default"] = function(image, windowWidth, windowCenter, invert, voiLUT) {
                var maxPixelValue = image.maxPixelValue;
                var minPixelValue = image.minPixelValue;
                var offset = Math.min(minPixelValue, 0);
                if (image.cachedLut === void 0) {
                  var length = maxPixelValue - offset + 1;
                  image.cachedLut = {};
                  image.cachedLut.lutArray = new Uint8ClampedArray(length);
                }
                var lut = image.cachedLut.lutArray;
                var vlutfn = Object(_getVOILut_js__WEBPACK_IMPORTED_MODULE_0__["default"])(windowWidth, windowCenter, voiLUT);
                if (invert === true) {
                  for (var storedValue = minPixelValue; storedValue <= maxPixelValue; storedValue++) {
                    lut[storedValue + -offset] = 255 - vlutfn(storedValue);
                  }
                } else {
                  for (var _storedValue = minPixelValue; _storedValue <= maxPixelValue; _storedValue++) {
                    lut[_storedValue + -offset] = vlutfn(_storedValue);
                  }
                }
                return lut;
              };
            }
          ),
          /***/
          "./internal/generateLut.js": (
            /*!*********************************!*\
              !*** ./internal/generateLut.js ***!
              \*********************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _getModalityLUT_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./getModalityLUT.js */
                "./internal/getModalityLUT.js"
              );
              var _getVOILut_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./getVOILut.js */
                "./internal/getVOILut.js"
              );
              __webpack_exports__["default"] = function(image, windowWidth, windowCenter, invert, modalityLUT, voiLUT) {
                var maxPixelValue = image.maxPixelValue;
                var minPixelValue = image.minPixelValue;
                var offset = Math.min(minPixelValue, 0);
                if (image.cachedLut === void 0) {
                  var length = maxPixelValue - offset + 1;
                  image.cachedLut = {};
                  image.cachedLut.lutArray = new Uint8ClampedArray(length);
                }
                var lut = image.cachedLut.lutArray;
                var slopeOrInterceptAreFloat = Boolean(image.slope % 1) || Boolean(image.intercept % 1);
                var mlutfn = Object(_getModalityLUT_js__WEBPACK_IMPORTED_MODULE_0__["default"])(image.slope, image.intercept, modalityLUT);
                var vlutfn = Object(_getVOILut_js__WEBPACK_IMPORTED_MODULE_1__["default"])(windowWidth, windowCenter, voiLUT, slopeOrInterceptAreFloat);
                if (invert === true) {
                  for (var storedValue = minPixelValue; storedValue <= maxPixelValue; storedValue++) {
                    lut[storedValue + -offset] = 255 - vlutfn(mlutfn(storedValue));
                  }
                } else {
                  for (var _storedValue = minPixelValue; _storedValue <= maxPixelValue; _storedValue++) {
                    lut[_storedValue + -offset] = vlutfn(mlutfn(_storedValue));
                  }
                }
                return lut;
              };
            }
          ),
          /***/
          "./internal/getCanvas.js": (
            /*!*******************************!*\
              !*** ./internal/getCanvas.js ***!
              \*******************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "default", function() {
                return getCanvas;
              });
              var CANVAS_CSS_CLASS = "cornerstone-canvas";
              function createCanvas(element) {
                var canvas = document.createElement("canvas");
                canvas.style.display = "block";
                canvas.classList.add(CANVAS_CSS_CLASS);
                element.appendChild(canvas);
                return canvas;
              }
              function getCanvas(element) {
                var selector = "canvas.".concat(CANVAS_CSS_CLASS);
                return element.querySelector(selector) || createCanvas(element);
              }
            }
          ),
          /***/
          "./internal/getDefaultViewport.js": (
            /*!****************************************!*\
              !*** ./internal/getDefaultViewport.js ***!
              \****************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _createViewport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./createViewport.js */
                "./internal/createViewport.js"
              );
              var _getImageFitScale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./getImageFitScale.js */
                "./internal/getImageFitScale.js"
              );
              __webpack_exports__["default"] = function(canvas, image) {
                if (canvas === void 0) {
                  throw new Error("getDefaultViewport: parameter canvas must not be undefined");
                }
                if (image === void 0) {
                  return Object(_createViewport_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                }
                var scale = Object(_getImageFitScale_js__WEBPACK_IMPORTED_MODULE_1__["default"])(canvas, image, 0).scaleFactor;
                return {
                  scale,
                  translation: {
                    x: 0,
                    y: 0
                  },
                  voi: {
                    windowWidth: image.windowWidth,
                    windowCenter: image.windowCenter
                  },
                  invert: image.invert,
                  pixelReplication: false,
                  rotation: 0,
                  hflip: false,
                  vflip: false,
                  modalityLUT: image.modalityLUT,
                  voiLUT: image.voiLUT,
                  colormap: image.colormap,
                  labelmap: Boolean(image.labelmap),
                  displayedArea: void 0
                };
              };
            }
          ),
          /***/
          "./internal/getDisplayedArea.js": (
            /*!**************************************!*\
              !*** ./internal/getDisplayedArea.js ***!
              \**************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function(image) {
                var viewport = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                if (viewport && viewport.displayedArea) {
                  return viewport.displayedArea;
                }
                if (image === void 0) {
                  throw new Error("getDisplayedArea: parameter image must not be undefined");
                }
                return {
                  tlhc: {
                    x: 1,
                    y: 1
                  },
                  brhc: {
                    x: image.columns,
                    y: image.rows
                  },
                  rowPixelSpacing: image.rowPixelSpacing === void 0 ? 1 : image.rowPixelSpacing,
                  columnPixelSpacing: image.columnPixelSpacing === void 0 ? 1 : image.columnPixelSpacing,
                  presentationSizeMode: "NONE"
                };
              };
            }
          ),
          /***/
          "./internal/getFillStyle.js": (
            /*!**********************************!*\
              !*** ./internal/getFillStyle.js ***!
              \**********************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function(enabledElement) {
                var _ref = enabledElement.viewport || {}, invert = _ref.invert;
                var _ref2 = enabledElement.options || {}, fillStyle = _ref2.fillStyle;
                if (["black", "white"].indexOf(fillStyle) !== -1) {
                  return invert ? "white" : "black";
                }
                return "black";
              };
            }
          ),
          /***/
          "./internal/getImageFitScale.js": (
            /*!**************************************!*\
              !*** ./internal/getImageFitScale.js ***!
              \**************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./validator.js */
                "./internal/validator.js"
              );
              var _getImageSize_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./getImageSize.js */
                "./internal/getImageSize.js"
              );
              __webpack_exports__["default"] = function(windowSize, image) {
                var rotation = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
                Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(windowSize, "getImageScale: parameter windowSize must not be undefined");
                Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(image, "getImageScale: parameter image must not be undefined");
                var imageSize = Object(_getImageSize_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image, rotation);
                var rowPixelSpacing = image.rowPixelSpacing || 1;
                var columnPixelSpacing = image.columnPixelSpacing || 1;
                var verticalRatio = 1;
                var horizontalRatio = 1;
                if (rowPixelSpacing < columnPixelSpacing) {
                  horizontalRatio = columnPixelSpacing / rowPixelSpacing;
                } else {
                  verticalRatio = rowPixelSpacing / columnPixelSpacing;
                }
                var verticalScale = windowSize.height / imageSize.height / verticalRatio;
                var horizontalScale = windowSize.width / imageSize.width / horizontalRatio;
                return {
                  verticalScale,
                  horizontalScale,
                  scaleFactor: Math.min(horizontalScale, verticalScale)
                };
              };
            }
          ),
          /***/
          "./internal/getImageSize.js": (
            /*!**********************************!*\
              !*** ./internal/getImageSize.js ***!
              \**********************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _validator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./validator.js */
                "./internal/validator.js"
              );
              function isRotated(rotation) {
                return !(rotation === null || rotation === void 0 || rotation === 0 || rotation === 180);
              }
              __webpack_exports__["default"] = function(image) {
                var rotation = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(image, "getImageSize: parameter image must not be undefined");
                Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(image.width, "getImageSize: parameter image must have width");
                Object(_validator_js__WEBPACK_IMPORTED_MODULE_0__["validateParameterUndefinedOrNull"])(image.height, "getImageSize: parameter image must have height");
                if (isRotated(rotation)) {
                  return {
                    height: image.width,
                    width: image.height
                  };
                }
                return {
                  width: image.width,
                  height: image.height
                };
              };
            }
          ),
          /***/
          "./internal/getModalityLUT.js": (
            /*!************************************!*\
              !*** ./internal/getModalityLUT.js ***!
              \************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              function generateLinearModalityLUT(slope, intercept) {
                return function(storedPixelValue) {
                  return storedPixelValue * slope + intercept;
                };
              }
              function generateNonLinearModalityLUT(modalityLUT) {
                var minValue = modalityLUT.lut[0];
                var maxValue = modalityLUT.lut[modalityLUT.lut.length - 1];
                var maxValueMapped = modalityLUT.firstValueMapped + modalityLUT.lut.length;
                return function(storedPixelValue) {
                  if (storedPixelValue < modalityLUT.firstValueMapped) {
                    return minValue;
                  } else if (storedPixelValue >= maxValueMapped) {
                    return maxValue;
                  }
                  return modalityLUT.lut[storedPixelValue];
                };
              }
              __webpack_exports__["default"] = function(slope, intercept, modalityLUT) {
                if (modalityLUT) {
                  return generateNonLinearModalityLUT(modalityLUT);
                }
                return generateLinearModalityLUT(slope, intercept);
              };
            }
          ),
          /***/
          "./internal/getTransform.js": (
            /*!**********************************!*\
              !*** ./internal/getTransform.js ***!
              \**********************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _calculateTransform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./calculateTransform.js */
                "./internal/calculateTransform.js"
              );
              __webpack_exports__["default"] = function(enabledElement) {
                return Object(_calculateTransform_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement);
              };
            }
          ),
          /***/
          "./internal/getVOILut.js": (
            /*!*******************************!*\
              !*** ./internal/getVOILut.js ***!
              \*******************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              function _toConsumableArray(arr) {
                return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
              }
              function _nonIterableSpread() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
              }
              function _unsupportedIterableToArray(o, minLen) {
                if (!o) return;
                if (typeof o === "string") return _arrayLikeToArray(o, minLen);
                var n = Object.prototype.toString.call(o).slice(8, -1);
                if (n === "Object" && o.constructor) n = o.constructor.name;
                if (n === "Map" || n === "Set") return Array.from(o);
                if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
              }
              function _iterableToArray(iter) {
                if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter);
              }
              function _arrayWithoutHoles(arr) {
                if (Array.isArray(arr)) return _arrayLikeToArray(arr);
              }
              function _arrayLikeToArray(arr, len) {
                if (len == null || len > arr.length) len = arr.length;
                for (var i = 0, arr2 = new Array(len); i < len; i++) {
                  arr2[i] = arr[i];
                }
                return arr2;
              }
              function generateLinearVOILUT(windowWidth, windowCenter) {
                return function(modalityLutValue) {
                  return ((modalityLutValue - windowCenter) / windowWidth + 0.5) * 255;
                };
              }
              function generateNonLinearVOILUT(voiLUT, roundModalityLUTValues) {
                var bitsPerEntry = Math.max.apply(Math, _toConsumableArray(voiLUT.lut)).toString(2).length;
                var shift = bitsPerEntry - 8;
                var minValue = voiLUT.lut[0] >> shift;
                var maxValue = voiLUT.lut[voiLUT.lut.length - 1] >> shift;
                var maxValueMapped = voiLUT.firstValueMapped + voiLUT.lut.length - 1;
                return function(modalityLutValue) {
                  if (modalityLutValue < voiLUT.firstValueMapped) {
                    return minValue;
                  } else if (modalityLutValue >= maxValueMapped) {
                    return maxValue;
                  }
                  if (roundModalityLUTValues) {
                    return voiLUT.lut[Math.round(modalityLutValue) - voiLUT.firstValueMapped] >> shift;
                  }
                  return voiLUT.lut[modalityLutValue - voiLUT.firstValueMapped] >> shift;
                };
              }
              __webpack_exports__["default"] = function(windowWidth, windowCenter, voiLUT, roundModalityLUTValues) {
                if (voiLUT) {
                  return generateNonLinearVOILUT(voiLUT, roundModalityLUTValues);
                }
                return generateLinearVOILUT(windowWidth, windowCenter);
              };
            }
          ),
          /***/
          "./internal/guid.js": (
            /*!**************************!*\
              !*** ./internal/guid.js ***!
              \**************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              function s4() {
                return Math.floor((1 + Math.random()) * 65536).toString(16).substring(1);
              }
              __webpack_exports__["default"] = function() {
                return "".concat(s4() + s4(), "-").concat(s4(), "-").concat(s4(), "-").concat(s4(), "-").concat(s4()).concat(s4()).concat(s4());
              };
            }
          ),
          /***/
          "./internal/index.js": (
            /*!***************************!*\
              !*** ./internal/index.js ***!
              \***************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _transform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./transform.js */
                "./internal/transform.js"
              );
              var _calculateTransform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./calculateTransform.js */
                "./internal/calculateTransform.js"
              );
              var _drawImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./drawImage.js */
                "./internal/drawImage.js"
              );
              var _generateLut_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./generateLut.js */
                "./internal/generateLut.js"
              );
              var _getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./getDefaultViewport.js */
                "./internal/getDefaultViewport.js"
              );
              var _getTransform_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./getTransform.js */
                "./internal/getTransform.js"
              );
              var _requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ./requestAnimationFrame.js */
                "./internal/requestAnimationFrame.js"
              );
              var _setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
                /*! ./setDefaultViewport.js */
                "./internal/setDefaultViewport.js"
              );
              var _storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
                /*! ./storedColorPixelDataToCanvasImageData.js */
                "./internal/storedColorPixelDataToCanvasImageData.js"
              );
              var _storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
                /*! ./storedPixelDataToCanvasImageData.js */
                "./internal/storedPixelDataToCanvasImageData.js"
              );
              var _storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
                /*! ./storedPixelDataToCanvasImageDataColorLUT.js */
                "./internal/storedPixelDataToCanvasImageDataColorLUT.js"
              );
              var _storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(
                /*! ./storedPixelDataToCanvasImageDataPseudocolorLUT.js */
                "./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js"
              );
              var _storedPixelDataToCanvasImageDataRGBA_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(
                /*! ./storedPixelDataToCanvasImageDataRGBA.js */
                "./internal/storedPixelDataToCanvasImageDataRGBA.js"
              );
              __webpack_exports__["default"] = {
                drawImage: _drawImage_js__WEBPACK_IMPORTED_MODULE_2__["default"],
                generateLut: _generateLut_js__WEBPACK_IMPORTED_MODULE_3__["default"],
                getDefaultViewport: _getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_4__["default"],
                requestAnimationFrame: _requestAnimationFrame_js__WEBPACK_IMPORTED_MODULE_6__["default"],
                setDefaultViewport: _setDefaultViewport_js__WEBPACK_IMPORTED_MODULE_7__["default"],
                storedPixelDataToCanvasImageData: _storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_9__["default"],
                storedPixelDataToCanvasImageDataRGBA: _storedPixelDataToCanvasImageDataRGBA_js__WEBPACK_IMPORTED_MODULE_12__["default"],
                storedPixelDataToCanvasImageDataColorLUT: _storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_10__["default"],
                storedPixelDataToCanvasImageDataPseudocolorLUT: _storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_11__["default"],
                storedColorPixelDataToCanvasImageData: _storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_8__["default"],
                getTransform: _getTransform_js__WEBPACK_IMPORTED_MODULE_5__["default"],
                calculateTransform: _calculateTransform_js__WEBPACK_IMPORTED_MODULE_1__["default"],
                Transform: _transform_js__WEBPACK_IMPORTED_MODULE_0__["Transform"]
              };
            }
          ),
          /***/
          "./internal/now.js": (
            /*!*************************!*\
              !*** ./internal/now.js ***!
              \*************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function() {
                if (window.performance) {
                  return performance.now();
                }
                return Date.now();
              };
            }
          ),
          /***/
          "./internal/requestAnimationFrame.js": (
            /*!*******************************************!*\
              !*** ./internal/requestAnimationFrame.js ***!
              \*******************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              function requestFrame(callback) {
                window.setTimeout(callback, 1e3 / 60);
              }
              __webpack_exports__["default"] = function(callback) {
                return window.requestAnimationFrame(callback) || window.webkitRequestAnimationFrame(callback) || window.mozRequestAnimationFrame(callback) || window.oRequestAnimationFrame(callback) || window.msRequestAnimationFrame(callback) || requestFrame(callback);
              };
            }
          ),
          /***/
          "./internal/setDefaultViewport.js": (
            /*!****************************************!*\
              !*** ./internal/setDefaultViewport.js ***!
              \****************************************/
            /*! exports provided: default, state */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "state", function() {
                return state;
              });
              var state = {
                viewport: {}
              };
              __webpack_exports__["default"] = function(viewport) {
                state.viewport = viewport || {};
              };
            }
          ),
          /***/
          "./internal/storedColorPixelDataToCanvasImageData.js": (
            /*!***********************************************************!*\
              !*** ./internal/storedColorPixelDataToCanvasImageData.js ***!
              \***********************************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./now.js */
                "./internal/now.js"
              );
              __webpack_exports__["default"] = function(image, lut, canvasImageDataData) {
                var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                var pixelData = image.getPixelData();
                image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
                var minPixelValue = image.minPixelValue;
                var canvasImageDataIndex = 0;
                var storedPixelDataIndex = 0;
                var numPixels = pixelData.length;
                start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                if (minPixelValue < 0) {
                  while (storedPixelDataIndex < numPixels) {
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex] + -minPixelValue];
                    storedPixelDataIndex += 2;
                    canvasImageDataIndex += 2;
                  }
                } else {
                  while (storedPixelDataIndex < numPixels) {
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex]];
                    storedPixelDataIndex += 2;
                    canvasImageDataIndex += 2;
                  }
                }
                image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
              };
            }
          ),
          /***/
          "./internal/storedPixelDataToCanvasImageData.js": (
            /*!******************************************************!*\
              !*** ./internal/storedPixelDataToCanvasImageData.js ***!
              \******************************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./now.js */
                "./internal/now.js"
              );
              __webpack_exports__["default"] = function(image, lut, canvasImageDataData) {
                var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                var pixelData = image.getPixelData();
                image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
                var numPixels = pixelData.length;
                var minPixelValue = image.minPixelValue;
                var canvasImageDataIndex = 3;
                var storedPixelDataIndex = 0;
                start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                if (pixelData instanceof Int16Array) {
                  if (minPixelValue < 0) {
                    while (storedPixelDataIndex < numPixels) {
                      canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                      canvasImageDataIndex += 4;
                    }
                  } else {
                    while (storedPixelDataIndex < numPixels) {
                      canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++]];
                      canvasImageDataIndex += 4;
                    }
                  }
                } else if (pixelData instanceof Uint16Array) {
                  while (storedPixelDataIndex < numPixels) {
                    canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataIndex += 4;
                  }
                } else if (minPixelValue < 0) {
                  while (storedPixelDataIndex < numPixels) {
                    canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    canvasImageDataIndex += 4;
                  }
                } else {
                  while (storedPixelDataIndex < numPixels) {
                    canvasImageDataData[canvasImageDataIndex] = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataIndex += 4;
                  }
                }
                image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
              };
            }
          ),
          /***/
          "./internal/storedPixelDataToCanvasImageDataColorLUT.js": (
            /*!**************************************************************!*\
              !*** ./internal/storedPixelDataToCanvasImageDataColorLUT.js ***!
              \**************************************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _colors_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../colors/index.js */
                "./colors/index.js"
              );
              var _now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./now.js */
                "./internal/now.js"
              );
              function storedPixelDataToCanvasImageDataColorLUT(image, colorLut, canvasImageDataData) {
                var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
                var pixelData = image.getPixelData();
                image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
                var numPixels = pixelData.length;
                var minPixelValue = image.minPixelValue;
                var canvasImageDataIndex = 0;
                var storedPixelDataIndex = 0;
                var rgba;
                var clut;
                start = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
                if (colorLut instanceof _colors_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].LookupTable) {
                  clut = colorLut.Table;
                } else {
                  clut = colorLut;
                }
                if (minPixelValue < 0) {
                  while (storedPixelDataIndex < numPixels) {
                    rgba = clut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[0];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[1];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[2];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[3];
                  }
                } else {
                  while (storedPixelDataIndex < numPixels) {
                    rgba = clut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[0];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[1];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[2];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[3];
                  }
                }
                image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
              }
              __webpack_exports__["default"] = storedPixelDataToCanvasImageDataColorLUT;
            }
          ),
          /***/
          "./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js": (
            /*!********************************************************************!*\
              !*** ./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js ***!
              \********************************************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _colors_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../colors/index.js */
                "./colors/index.js"
              );
              var _now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./now.js */
                "./internal/now.js"
              );
              function storedPixelDataToCanvasImageDataPseudocolorLUT(image, grayscaleLut, colorLut, canvasImageDataData) {
                var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
                var pixelData = image.getPixelData();
                image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
                var numPixels = pixelData.length;
                var minPixelValue = image.minPixelValue;
                var canvasImageDataIndex = 0;
                var storedPixelDataIndex = 0;
                var grayscale;
                var rgba;
                var clut;
                start = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
                if (colorLut instanceof _colors_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].LookupTable) {
                  clut = colorLut.Table;
                } else {
                  clut = colorLut;
                }
                if (minPixelValue < 0) {
                  while (storedPixelDataIndex < numPixels) {
                    grayscale = grayscaleLut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    rgba = clut[grayscale];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[0];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[1];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[2];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[3];
                  }
                } else {
                  while (storedPixelDataIndex < numPixels) {
                    grayscale = grayscaleLut[pixelData[storedPixelDataIndex++]];
                    rgba = clut[grayscale];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[0];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[1];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[2];
                    canvasImageDataData[canvasImageDataIndex++] = rgba[3];
                  }
                }
                image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
              }
              __webpack_exports__["default"] = storedPixelDataToCanvasImageDataPseudocolorLUT;
            }
          ),
          /***/
          "./internal/storedPixelDataToCanvasImageDataRGBA.js": (
            /*!**********************************************************!*\
              !*** ./internal/storedPixelDataToCanvasImageDataRGBA.js ***!
              \**********************************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./now.js */
                "./internal/now.js"
              );
              __webpack_exports__["default"] = function(image, lut, canvasImageDataData) {
                var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                var pixelData = image.getPixelData();
                image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
                var numPixels = pixelData.length;
                var minPixelValue = image.minPixelValue;
                var canvasImageDataIndex = 0;
                var storedPixelDataIndex = 0;
                var pixelValue;
                start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                if (pixelData instanceof Int16Array) {
                  if (minPixelValue < 0) {
                    while (storedPixelDataIndex < numPixels) {
                      pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                      canvasImageDataData[canvasImageDataIndex++] = 255;
                    }
                  } else {
                    while (storedPixelDataIndex < numPixels) {
                      pixelValue = lut[pixelData[storedPixelDataIndex++]];
                      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                      canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                      canvasImageDataData[canvasImageDataIndex++] = 255;
                    }
                  }
                } else if (pixelData instanceof Uint16Array) {
                  while (storedPixelDataIndex < numPixels) {
                    pixelValue = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = 255;
                  }
                } else if (minPixelValue < 0) {
                  while (storedPixelDataIndex < numPixels) {
                    pixelValue = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = 255;
                  }
                } else {
                  while (storedPixelDataIndex < numPixels) {
                    pixelValue = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = pixelValue;
                    canvasImageDataData[canvasImageDataIndex++] = 255;
                  }
                }
                image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
              };
            }
          ),
          /***/
          "./internal/storedRGBAPixelDataToCanvasImageData.js": (
            /*!**********************************************************!*\
              !*** ./internal/storedRGBAPixelDataToCanvasImageData.js ***!
              \**********************************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./now.js */
                "./internal/now.js"
              );
              __webpack_exports__["default"] = function(image, lut, canvasImageDataData) {
                var start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                var pixelData = image.getPixelData();
                image.stats.lastGetPixelDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
                var minPixelValue = image.minPixelValue;
                var canvasImageDataIndex = 0;
                var storedPixelDataIndex = 0;
                var numPixels = pixelData.length;
                start = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                if (minPixelValue < 0) {
                  while (storedPixelDataIndex < numPixels) {
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++] + -minPixelValue];
                    canvasImageDataData[canvasImageDataIndex++] = pixelData[storedPixelDataIndex++];
                  }
                } else {
                  while (storedPixelDataIndex < numPixels) {
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataData[canvasImageDataIndex++] = lut[pixelData[storedPixelDataIndex++]];
                    canvasImageDataData[canvasImageDataIndex++] = pixelData[storedPixelDataIndex++];
                  }
                }
                image.stats.lastStoredPixelDataToCanvasImageDataTime = Object(_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
              };
            }
          ),
          /***/
          "./internal/transform.js": (
            /*!*******************************!*\
              !*** ./internal/transform.js ***!
              \*******************************/
            /*! exports provided: Transform */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "Transform", function() {
                return Transform;
              });
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                  var descriptor = props[i];
                  descriptor.enumerable = descriptor.enumerable || false;
                  descriptor.configurable = true;
                  if ("value" in descriptor) descriptor.writable = true;
                  Object.defineProperty(target, descriptor.key, descriptor);
                }
              }
              function _createClass(Constructor, protoProps, staticProps) {
                if (protoProps) _defineProperties(Constructor.prototype, protoProps);
                if (staticProps) _defineProperties(Constructor, staticProps);
                return Constructor;
              }
              var Transform = function() {
                function Transform2() {
                  _classCallCheck(this, Transform2);
                  this.reset();
                }
                _createClass(Transform2, [{
                  key: "reset",
                  value: function reset() {
                    this.m = [1, 0, 0, 1, 0, 0];
                  }
                }, {
                  key: "clone",
                  value: function clone() {
                    var transform = new Transform2();
                    transform.m[0] = this.m[0];
                    transform.m[1] = this.m[1];
                    transform.m[2] = this.m[2];
                    transform.m[3] = this.m[3];
                    transform.m[4] = this.m[4];
                    transform.m[5] = this.m[5];
                    return transform;
                  }
                }, {
                  key: "multiply",
                  value: function multiply(matrix) {
                    var m11 = this.m[0] * matrix.m[0] + this.m[2] * matrix.m[1];
                    var m12 = this.m[1] * matrix.m[0] + this.m[3] * matrix.m[1];
                    var m21 = this.m[0] * matrix.m[2] + this.m[2] * matrix.m[3];
                    var m22 = this.m[1] * matrix.m[2] + this.m[3] * matrix.m[3];
                    var dx = this.m[0] * matrix.m[4] + this.m[2] * matrix.m[5] + this.m[4];
                    var dy = this.m[1] * matrix.m[4] + this.m[3] * matrix.m[5] + this.m[5];
                    this.m[0] = m11;
                    this.m[1] = m12;
                    this.m[2] = m21;
                    this.m[3] = m22;
                    this.m[4] = dx;
                    this.m[5] = dy;
                  }
                }, {
                  key: "invert",
                  value: function invert() {
                    var d = 1 / (this.m[0] * this.m[3] - this.m[1] * this.m[2]);
                    var m0 = this.m[3] * d;
                    var m1 = -this.m[1] * d;
                    var m2 = -this.m[2] * d;
                    var m3 = this.m[0] * d;
                    var m4 = d * (this.m[2] * this.m[5] - this.m[3] * this.m[4]);
                    var m5 = d * (this.m[1] * this.m[4] - this.m[0] * this.m[5]);
                    this.m[0] = m0;
                    this.m[1] = m1;
                    this.m[2] = m2;
                    this.m[3] = m3;
                    this.m[4] = m4;
                    this.m[5] = m5;
                  }
                }, {
                  key: "rotate",
                  value: function rotate(rad) {
                    var c = Math.cos(rad);
                    var s = Math.sin(rad);
                    var m11 = this.m[0] * c + this.m[2] * s;
                    var m12 = this.m[1] * c + this.m[3] * s;
                    var m21 = this.m[0] * -s + this.m[2] * c;
                    var m22 = this.m[1] * -s + this.m[3] * c;
                    this.m[0] = m11;
                    this.m[1] = m12;
                    this.m[2] = m21;
                    this.m[3] = m22;
                  }
                }, {
                  key: "translate",
                  value: function translate(x, y) {
                    this.m[4] += this.m[0] * x + this.m[2] * y;
                    this.m[5] += this.m[1] * x + this.m[3] * y;
                  }
                }, {
                  key: "scale",
                  value: function scale(sx, sy) {
                    this.m[0] *= sx;
                    this.m[1] *= sx;
                    this.m[2] *= sy;
                    this.m[3] *= sy;
                  }
                }, {
                  key: "transformPoint",
                  value: function transformPoint(px, py) {
                    var x = px;
                    var y = py;
                    px = x * this.m[0] + y * this.m[2] + this.m[4];
                    py = x * this.m[1] + y * this.m[3] + this.m[5];
                    return {
                      x: px,
                      y: py
                    };
                  }
                }]);
                return Transform2;
              }();
            }
          ),
          /***/
          "./internal/tryEnableWebgl.js": (
            /*!************************************!*\
              !*** ./internal/tryEnableWebgl.js ***!
              \************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _webgl_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../webgl/index.js */
                "./webgl/index.js"
              );
              __webpack_exports__["default"] = function(options) {
                if (_webgl_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].renderer.isWebGLAvailable()) {
                  _webgl_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].renderer.initRenderer();
                  options.renderer = "webgl";
                  options.desynchronized = true;
                  options.preserveDrawingBuffer = true;
                  return true;
                }
                console.error("WebGL not available, falling back to Canvas renderer");
                delete options.renderer;
                delete options.preserveDrawingBuffer;
                return false;
              };
            }
          ),
          /***/
          "./internal/validator.js": (
            /*!*******************************!*\
              !*** ./internal/validator.js ***!
              \*******************************/
            /*! exports provided: validateParameterUndefined, validateParameterUndefinedOrNull */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "validateParameterUndefined", function() {
                return validateParameterUndefined;
              });
              __webpack_require__.d(__webpack_exports__, "validateParameterUndefinedOrNull", function() {
                return validateParameterUndefinedOrNull;
              });
              function validateParameterUndefined(checkParam, errorMsg) {
                if (checkParam === void 0) {
                  throw new Error(errorMsg);
                }
              }
              function validateParameterUndefinedOrNull(checkParam, errorMsg) {
                if (checkParam === void 0 || checkParam === null) {
                  throw new Error(errorMsg);
                }
              }
            }
          ),
          /***/
          "./invalidate.js": (
            /*!***********************!*\
              !*** ./invalidate.js ***!
              \***********************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              __webpack_exports__["default"] = function(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                enabledElement.invalid = true;
                enabledElement.needsRedraw = true;
                var eventData = {
                  element
                };
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_2__["default"].INVALIDATED, eventData);
              };
            }
          ),
          /***/
          "./invalidateImageId.js": (
            /*!******************************!*\
              !*** ./invalidateImageId.js ***!
              \******************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/drawImage.js */
                "./internal/drawImage.js"
              );
              __webpack_exports__["default"] = function(imageId) {
                var enabledElements = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElementsByImageId"])(imageId);
                enabledElements.forEach(function(enabledElement) {
                  Object(_internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement, true);
                });
              };
            }
          ),
          /***/
          "./layers.js": (
            /*!*******************!*\
              !*** ./layers.js ***!
              \*******************/
            /*! exports provided: rescaleImage, addLayer, removeLayer, getLayer, getLayers, getVisibleLayers, setActiveLayer, setLayerImage, getActiveLayer, purgeLayers */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "rescaleImage", function() {
                return rescaleImage;
              });
              __webpack_require__.d(__webpack_exports__, "addLayer", function() {
                return addLayer;
              });
              __webpack_require__.d(__webpack_exports__, "removeLayer", function() {
                return removeLayer;
              });
              __webpack_require__.d(__webpack_exports__, "getLayer", function() {
                return getLayer;
              });
              __webpack_require__.d(__webpack_exports__, "getLayers", function() {
                return getLayers;
              });
              __webpack_require__.d(__webpack_exports__, "getVisibleLayers", function() {
                return getVisibleLayers;
              });
              __webpack_require__.d(__webpack_exports__, "setActiveLayer", function() {
                return setActiveLayer;
              });
              __webpack_require__.d(__webpack_exports__, "setLayerImage", function() {
                return setLayerImage;
              });
              __webpack_require__.d(__webpack_exports__, "getActiveLayer", function() {
                return getActiveLayer;
              });
              __webpack_require__.d(__webpack_exports__, "purgeLayers", function() {
                return purgeLayers;
              });
              var _internal_guid_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./internal/guid.js */
                "./internal/guid.js"
              );
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./internal/getDefaultViewport.js */
                "./internal/getDefaultViewport.js"
              );
              var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./internal/getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              var _updateImage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./updateImage.js */
                "./updateImage.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              function triggerEventForLayer(eventName, enabledElement, layerId) {
                var element = enabledElement.element;
                var eventData = {
                  viewport: enabledElement.viewport,
                  element: enabledElement.element,
                  image: enabledElement.image,
                  enabledElement,
                  layerId
                };
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_5__["default"])(element, eventName, eventData);
              }
              function rescaleImage(baseLayer, targetLayer) {
                if (baseLayer.layerId === targetLayer.layerId) {
                  throw new Error("rescaleImage: both arguments represent the same layer");
                }
                var baseImage = baseLayer.image;
                var targetImage = targetLayer.image;
                if (!baseImage.imageId || !targetImage.imageId) {
                  return;
                }
                var targetDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_3__["default"])(targetImage, targetLayer.viewport);
                var baseDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_3__["default"])(baseImage, baseLayer.viewport);
                var colRelative = targetDisplayedArea.columnPixelSpacing * targetImage.width / (baseDisplayedArea.columnPixelSpacing * baseImage.width);
                var viewportRatio = targetLayer.viewport.scale / baseLayer.viewport.scale * colRelative;
                targetLayer.viewport.scale = baseLayer.viewport.scale * viewportRatio;
              }
              function addLayer(element, image, options) {
                var layerId = Object(_internal_guid_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                var layers = enabledElement.layers;
                var viewport;
                if (image) {
                  viewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement.canvas, image);
                  if (options && options.viewport) {
                    viewport = Object.assign(viewport, options.viewport);
                  }
                }
                if (enabledElement.syncViewports !== false) {
                  enabledElement.syncViewports = true;
                }
                var newLayer = {
                  image,
                  layerId,
                  viewport,
                  options: options || {},
                  renderingTools: {}
                };
                if (layers.length && image) {
                  rescaleImage(layers[0], newLayer);
                }
                layers.push(newLayer);
                triggerEventForLayer(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].LAYER_ADDED, enabledElement, layerId);
                if (layers.length === 1 && image) {
                  setActiveLayer(element, layerId);
                }
                return layerId;
              }
              function removeLayer(element, layerId) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                var layers = enabledElement.layers;
                var index = enabledElement.layers.findIndex(function(layer) {
                  return layer.layerId === layerId;
                });
                if (index !== -1) {
                  layers.splice(index, 1);
                  if (layerId === enabledElement.activeLayerId && layers.length) {
                    setActiveLayer(element, layers[0].layerId);
                  }
                  triggerEventForLayer(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].LAYER_REMOVED, enabledElement, layerId);
                }
              }
              function getLayer(element, layerId) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                return enabledElement.layers.find(function(layer) {
                  return layer.layerId === layerId;
                });
              }
              function getLayers(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                return enabledElement.layers;
              }
              function getVisibleLayers(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                return enabledElement.layers.filter(function(layer) {
                  return layer.options && layer.options.visible !== false && layer.options.opacity !== 0;
                });
              }
              function setActiveLayer(element, layerId) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                if (enabledElement.activeLayerId === layerId) {
                  return;
                }
                var index = enabledElement.layers.findIndex(function(layer2) {
                  return layer2.layerId === layerId;
                });
                if (index === -1) {
                  throw new Error("setActiveLayer: layer not found in layers array");
                }
                var layer = enabledElement.layers[index];
                if (!layer.image) {
                  throw new Error("setActiveLayer: layer with undefined image cannot be set as active.");
                }
                enabledElement.activeLayerId = layerId;
                enabledElement.image = layer.image;
                enabledElement.viewport = layer.viewport;
                Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_4__["default"])(element);
                triggerEventForLayer(_events_js__WEBPACK_IMPORTED_MODULE_6__["default"].ACTIVE_LAYER_CHANGED, enabledElement, layerId);
              }
              function setLayerImage(element, image, layerId) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                var baseLayer = enabledElement.layers[0];
                var layer;
                if (layerId) {
                  layer = getLayer(element, layerId);
                } else {
                  layer = getActiveLayer(element);
                }
                if (!layer) {
                  throw new Error("setLayerImage: Layer not found");
                }
                layer.image = image;
                if (!image) {
                  layer.viewport = void 0;
                  return;
                }
                if (!layer.viewport) {
                  var defaultViewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement.canvas, image);
                  if (layer.options && layer.options.viewport) {
                    layer.viewport = Object.assign(defaultViewport, layer.options.viewport);
                  }
                  if (baseLayer.layerId !== layerId) {
                    rescaleImage(baseLayer, layer);
                  }
                }
              }
              function getActiveLayer(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                return enabledElement.layers.find(function(layer) {
                  return layer.layerId === enabledElement.activeLayerId;
                });
              }
              function purgeLayers(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                enabledElement.layers = [];
                delete enabledElement.activeLayerId;
                delete enabledElement.lastSyncViewportsState;
              }
            }
          ),
          /***/
          "./metaData.js": (
            /*!*********************!*\
              !*** ./metaData.js ***!
              \*********************/
            /*! exports provided: addProvider, removeProvider, default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "addProvider", function() {
                return addProvider;
              });
              __webpack_require__.d(__webpack_exports__, "removeProvider", function() {
                return removeProvider;
              });
              var providers = [];
              function addProvider(provider) {
                var priority = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                var i;
                for (i = 0; i < providers.length; i++) {
                  if (providers[i].priority <= priority) {
                    break;
                  }
                }
                providers.splice(i, 0, {
                  priority,
                  provider
                });
              }
              function removeProvider(provider) {
                for (var i = 0; i < providers.length; i++) {
                  if (providers[i].provider === provider) {
                    providers.splice(i, 1);
                    break;
                  }
                }
              }
              function getMetaData(type, imageId) {
                for (var i = 0; i < providers.length; i++) {
                  var result = providers[i].provider(type, imageId);
                  if (result !== void 0) {
                    return result;
                  }
                }
              }
              __webpack_exports__["default"] = {
                addProvider,
                removeProvider,
                get: getMetaData
              };
            }
          ),
          /***/
          "./pageToPixel.js": (
            /*!************************!*\
              !*** ./pageToPixel.js ***!
              \************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/getTransform.js */
                "./internal/getTransform.js"
              );
              __webpack_exports__["default"] = function(element, pageX, pageY) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                if (enabledElement.image === void 0) {
                  throw new Error("image has not been loaded yet");
                }
                var rect = element.getBoundingClientRect();
                var clientX = pageX - rect.left - window.pageXOffset;
                var clientY = pageY - rect.top - window.pageYOffset;
                var pt = {
                  x: clientX,
                  y: clientY
                };
                var transform = Object(_internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
                transform.invert();
                return transform.transformPoint(pt.x, pt.y);
              };
            }
          ),
          /***/
          "./pixelDataToFalseColorData.js": (
            /*!**************************************!*\
              !*** ./pixelDataToFalseColorData.js ***!
              \**************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "default", function() {
                return pixelDataToFalseColorData;
              });
              var _colors_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./colors/index.js */
                "./colors/index.js"
              );
              function pixelDataToFalseColorData(image, lookupTable) {
                if (image.color && !image.falseColor) {
                  throw new Error("Color transforms are not implemented yet");
                }
                var minPixelValue = image.minPixelValue;
                var canvasImageDataIndex = 0;
                var storedPixelDataIndex = 0;
                var numPixels = image.width * image.height;
                var origPixelData = image.origPixelData || image.getPixelData();
                var storedColorPixelData = new Uint8Array(numPixels * 4);
                var sp;
                var mapped;
                image.color = true;
                image.falseColor = true;
                image.origPixelData = origPixelData;
                if (lookupTable instanceof _colors_index_js__WEBPACK_IMPORTED_MODULE_0__["default"].LookupTable) {
                  lookupTable.build();
                  while (storedPixelDataIndex < numPixels) {
                    sp = origPixelData[storedPixelDataIndex++];
                    mapped = lookupTable.mapValue(sp);
                    storedColorPixelData[canvasImageDataIndex++] = mapped[0];
                    storedColorPixelData[canvasImageDataIndex++] = mapped[1];
                    storedColorPixelData[canvasImageDataIndex++] = mapped[2];
                    storedColorPixelData[canvasImageDataIndex++] = mapped[3];
                  }
                } else if (minPixelValue < 0) {
                  while (storedPixelDataIndex < numPixels) {
                    sp = origPixelData[storedPixelDataIndex++];
                    storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp + -minPixelValue][0];
                    storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp + -minPixelValue][1];
                    storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp + -minPixelValue][2];
                    storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp + -minPixelValue][3];
                  }
                } else {
                  while (storedPixelDataIndex < numPixels) {
                    sp = origPixelData[storedPixelDataIndex++];
                    storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp][0];
                    storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp][1];
                    storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp][2];
                    storedColorPixelData[canvasImageDataIndex++] = lookupTable[sp][3];
                  }
                }
                image.rgba = true;
                image.cachedLut = void 0;
                image.render = void 0;
                image.slope = 1;
                image.intercept = 0;
                image.minPixelValue = 0;
                image.maxPixelValue = 255;
                image.windowWidth = 255;
                image.windowCenter = 128;
                image.getPixelData = function() {
                  return storedColorPixelData;
                };
              }
            }
          ),
          /***/
          "./pixelToCanvas.js": (
            /*!**************************!*\
              !*** ./pixelToCanvas.js ***!
              \**************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/getTransform.js */
                "./internal/getTransform.js"
              );
              __webpack_exports__["default"] = function(element, pt) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                var transform = Object(_internal_getTransform_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
                return transform.transformPoint(pt.x, pt.y);
              };
            }
          ),
          /***/
          "./rendering/doesImageNeedToBeRendered.js": (
            /*!************************************************!*\
              !*** ./rendering/doesImageNeedToBeRendered.js ***!
              \************************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function(enabledElement, image) {
                var lastRenderedImageId = enabledElement.renderingTools.lastRenderedImageId;
                var lastRenderedViewport = enabledElement.renderingTools.lastRenderedViewport;
                return image.imageId !== lastRenderedImageId || !lastRenderedViewport || lastRenderedViewport.windowCenter !== enabledElement.viewport.voi.windowCenter || lastRenderedViewport.windowWidth !== enabledElement.viewport.voi.windowWidth || lastRenderedViewport.invert !== enabledElement.viewport.invert || lastRenderedViewport.rotation !== enabledElement.viewport.rotation || lastRenderedViewport.hflip !== enabledElement.viewport.hflip || lastRenderedViewport.vflip !== enabledElement.viewport.vflip || lastRenderedViewport.modalityLUT !== enabledElement.viewport.modalityLUT || lastRenderedViewport.voiLUT !== enabledElement.viewport.voiLUT || lastRenderedViewport.colormap !== enabledElement.viewport.colormap;
              };
            }
          ),
          /***/
          "./rendering/getLut.js": (
            /*!*****************************!*\
              !*** ./rendering/getLut.js ***!
              \*****************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _internal_computeAutoVoi_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../internal/computeAutoVoi.js */
                "./internal/computeAutoVoi.js"
              );
              var _lutMatches_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./lutMatches.js */
                "./rendering/lutMatches.js"
              );
              var _internal_generateLut_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../internal/generateLut.js */
                "./internal/generateLut.js"
              );
              __webpack_exports__["default"] = function(image, viewport, invalidated) {
                if (image.cachedLut !== void 0 && image.cachedLut.windowCenter === viewport.voi.windowCenter && image.cachedLut.windowWidth === viewport.voi.windowWidth && Object(_lutMatches_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image.cachedLut.modalityLUT, viewport.modalityLUT) && Object(_lutMatches_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image.cachedLut.voiLUT, viewport.voiLUT) && image.cachedLut.invert === viewport.invert && invalidated !== true) {
                  return image.cachedLut.lutArray;
                }
                Object(_internal_computeAutoVoi_js__WEBPACK_IMPORTED_MODULE_0__["default"])(viewport, image);
                Object(_internal_generateLut_js__WEBPACK_IMPORTED_MODULE_2__["default"])(image, viewport.voi.windowWidth, viewport.voi.windowCenter, viewport.invert, viewport.modalityLUT, viewport.voiLUT);
                image.cachedLut.windowWidth = viewport.voi.windowWidth;
                image.cachedLut.windowCenter = viewport.voi.windowCenter;
                image.cachedLut.invert = viewport.invert;
                image.cachedLut.voiLUT = viewport.voiLUT;
                image.cachedLut.modalityLUT = viewport.modalityLUT;
                return image.cachedLut.lutArray;
              };
            }
          ),
          /***/
          "./rendering/index.js": (
            /*!****************************!*\
              !*** ./rendering/index.js ***!
              \****************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _renderColorImage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./renderColorImage.js */
                "./rendering/renderColorImage.js"
              );
              var _renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./renderGrayscaleImage.js */
                "./rendering/renderGrayscaleImage.js"
              );
              var _renderWebImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./renderWebImage.js */
                "./rendering/renderWebImage.js"
              );
              var _renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./renderPseudoColorImage.js */
                "./rendering/renderPseudoColorImage.js"
              );
              var _renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./renderLabelMapImage.js */
                "./rendering/renderLabelMapImage.js"
              );
              var _renderToCanvas_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./renderToCanvas.js */
                "./rendering/renderToCanvas.js"
              );
              __webpack_exports__["default"] = {
                colorImage: _renderColorImage_js__WEBPACK_IMPORTED_MODULE_0__["renderColorImage"],
                grayscaleImage: _renderGrayscaleImage_js__WEBPACK_IMPORTED_MODULE_1__["renderGrayscaleImage"],
                webImage: _renderWebImage_js__WEBPACK_IMPORTED_MODULE_2__["renderWebImage"],
                pseudoColorImage: _renderPseudoColorImage_js__WEBPACK_IMPORTED_MODULE_3__["renderPseudoColorImage"],
                labelMapImage: _renderLabelMapImage_js__WEBPACK_IMPORTED_MODULE_4__["renderLabelMapImage"],
                toCanvas: _renderToCanvas_js__WEBPACK_IMPORTED_MODULE_5__["default"]
              };
            }
          ),
          /***/
          "./rendering/initializeRenderCanvas.js": (
            /*!*********************************************!*\
              !*** ./rendering/initializeRenderCanvas.js ***!
              \*********************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function(enabledElement, image) {
                var renderCanvas = enabledElement.renderingTools.renderCanvas;
                renderCanvas.width = image.width;
                renderCanvas.height = image.height;
                var canvasContext = renderCanvas.getContext("2d", {
                  desynchronized: true
                });
                canvasContext.fillStyle = "white";
                canvasContext.fillRect(0, 0, renderCanvas.width, renderCanvas.height);
                var renderCanvasData = canvasContext.getImageData(0, 0, image.width, image.height);
                enabledElement.renderingTools.renderCanvasContext = canvasContext;
                enabledElement.renderingTools.renderCanvasData = renderCanvasData;
              };
            }
          ),
          /***/
          "./rendering/lutMatches.js": (
            /*!*********************************!*\
              !*** ./rendering/lutMatches.js ***!
              \*********************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function(a, b) {
                if (!a && !b) {
                  return true;
                }
                if (!a || !b) {
                  return false;
                }
                return a.id === b.id;
              };
            }
          ),
          /***/
          "./rendering/renderColorImage.js": (
            /*!***************************************!*\
              !*** ./rendering/renderColorImage.js ***!
              \***************************************/
            /*! exports provided: renderColorImage, addColorLayer */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "renderColorImage", function() {
                return renderColorImage;
              });
              __webpack_require__.d(__webpack_exports__, "addColorLayer", function() {
                return addColorLayer;
              });
              var _internal_now_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../internal/now.js */
                "./internal/now.js"
              );
              var _internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ../internal/getFillStyle.js */
                "./internal/getFillStyle.js"
              );
              var _internal_generateColorLut_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../internal/generateColorLut.js */
                "./internal/generateColorLut.js"
              );
              var _internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ../internal/storedColorPixelDataToCanvasImageData.js */
                "./internal/storedColorPixelDataToCanvasImageData.js"
              );
              var _internal_storedRGBAPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ../internal/storedRGBAPixelDataToCanvasImageData.js */
                "./internal/storedRGBAPixelDataToCanvasImageData.js"
              );
              var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ../setToPixelCoordinateSystem.js */
                "./setToPixelCoordinateSystem.js"
              );
              var _webgl_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ../webgl/index.js */
                "./webgl/index.js"
              );
              var _doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
                /*! ./doesImageNeedToBeRendered.js */
                "./rendering/doesImageNeedToBeRendered.js"
              );
              var _initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
                /*! ./initializeRenderCanvas.js */
                "./rendering/initializeRenderCanvas.js"
              );
              var _saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
                /*! ./saveLastRendered.js */
                "./rendering/saveLastRendered.js"
              );
              var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
                /*! ../internal/getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              function getLut(image, viewport) {
                if (image.cachedLut !== void 0 && image.cachedLut.windowCenter === viewport.voi.windowCenter && image.cachedLut.windowWidth === viewport.voi.windowWidth && image.cachedLut.invert === viewport.invert) {
                  return image.cachedLut.lutArray;
                }
                Object(_internal_generateColorLut_js__WEBPACK_IMPORTED_MODULE_2__["default"])(image, viewport.voi.windowWidth, viewport.voi.windowCenter, viewport.invert);
                image.cachedLut.windowWidth = viewport.voi.windowWidth;
                image.cachedLut.windowCenter = viewport.voi.windowCenter;
                image.cachedLut.invert = viewport.invert;
                return image.cachedLut.lutArray;
              }
              function getRenderCanvas(enabledElement, image, invalidated) {
                var canvasWasColor = enabledElement.renderingTools.lastRenderedIsColor === true;
                if (!enabledElement.renderingTools.renderCanvas || !canvasWasColor) {
                  enabledElement.renderingTools.renderCanvas = document.createElement("canvas");
                }
                var renderCanvas = enabledElement.renderingTools.renderCanvas;
                if (enabledElement.viewport.voi.windowWidth === 255 && enabledElement.viewport.voi.windowCenter === 128 && enabledElement.viewport.invert === false && image.getCanvas && image.getCanvas()) {
                  return image.getCanvas();
                }
                if (Object(_doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_7__["default"])(enabledElement, image) === false && invalidated !== true) {
                  return renderCanvas;
                }
                if (renderCanvas.width !== image.width || renderCanvas.height !== image.height) {
                  Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__["default"])(enabledElement, image);
                }
                var start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                var colorLut = getLut(image, enabledElement.viewport);
                image.stats = image.stats || {};
                image.stats.lastLutGenerateTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
                var renderCanvasData = enabledElement.renderingTools.renderCanvasData;
                var renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;
                if (image.rgba) {
                  Object(_internal_storedRGBAPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_4__["default"])(image, colorLut, renderCanvasData.data);
                } else {
                  Object(_internal_storedColorPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_3__["default"])(image, colorLut, renderCanvasData.data);
                }
                start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])();
                renderCanvasContext.putImageData(renderCanvasData, 0, 0);
                image.stats.lastPutImageDataTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_0__["default"])() - start;
                return renderCanvas;
              }
              function renderColorImage(enabledElement, invalidated) {
                if (enabledElement === void 0) {
                  throw new Error("renderColorImage: enabledElement parameter must not be undefined");
                }
                var image = enabledElement.image;
                if (image === void 0) {
                  throw new Error("renderColorImage: image must be loaded before it can be drawn");
                }
                var context = enabledElement.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.setTransform(1, 0, 0, 1, 0, 0);
                context.fillStyle = Object(_internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement);
                context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height);
                context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
                context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement, context);
                var renderCanvas;
                if (enabledElement.options && enabledElement.options.renderer && enabledElement.options.renderer.toLowerCase() === "webgl") {
                  renderCanvas = _webgl_index_js__WEBPACK_IMPORTED_MODULE_6__["default"].renderer.render(enabledElement);
                } else {
                  renderCanvas = getRenderCanvas(enabledElement, image, invalidated);
                }
                var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_10__["default"])(enabledElement.image, enabledElement.viewport);
                var sx = imageDisplayedArea.tlhc.x - 1;
                var sy = imageDisplayedArea.tlhc.y - 1;
                var width = imageDisplayedArea.brhc.x - sx;
                var height = imageDisplayedArea.brhc.y - sy;
                context.drawImage(renderCanvas, sx, sy, width, height, sx, sy, width, height);
                enabledElement.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__["default"])(enabledElement);
              }
              function addColorLayer(layer, invalidated) {
                if (layer === void 0) {
                  throw new Error("addColorLayer: layer parameter must not be undefined");
                }
                var image = layer.image;
                if (image === void 0) {
                  throw new Error("addColorLayer: image must be loaded before it can be drawn");
                }
                image.rgba = true;
                layer.canvas = getRenderCanvas(layer, image, invalidated);
                var context = layer.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
                context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                layer.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__["default"])(layer);
              }
            }
          ),
          /***/
          "./rendering/renderGrayscaleImage.js": (
            /*!*******************************************!*\
              !*** ./rendering/renderGrayscaleImage.js ***!
              \*******************************************/
            /*! exports provided: renderGrayscaleImage, addGrayscaleLayer */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "renderGrayscaleImage", function() {
                return renderGrayscaleImage;
              });
              __webpack_require__.d(__webpack_exports__, "addGrayscaleLayer", function() {
                return addGrayscaleLayer;
              });
              var _internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../internal/getFillStyle.js */
                "./internal/getFillStyle.js"
              );
              var _internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ../internal/storedPixelDataToCanvasImageData.js */
                "./internal/storedPixelDataToCanvasImageData.js"
              );
              var _internal_storedPixelDataToCanvasImageDataRGBA_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../internal/storedPixelDataToCanvasImageDataRGBA.js */
                "./internal/storedPixelDataToCanvasImageDataRGBA.js"
              );
              var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ../setToPixelCoordinateSystem.js */
                "./setToPixelCoordinateSystem.js"
              );
              var _internal_now_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ../internal/now.js */
                "./internal/now.js"
              );
              var _webgl_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ../webgl/index.js */
                "./webgl/index.js"
              );
              var _getLut_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ./getLut.js */
                "./rendering/getLut.js"
              );
              var _doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
                /*! ./doesImageNeedToBeRendered.js */
                "./rendering/doesImageNeedToBeRendered.js"
              );
              var _initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
                /*! ./initializeRenderCanvas.js */
                "./rendering/initializeRenderCanvas.js"
              );
              var _saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
                /*! ./saveLastRendered.js */
                "./rendering/saveLastRendered.js"
              );
              var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(
                /*! ../internal/getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              function getRenderCanvas(enabledElement, image, invalidated) {
                var useAlphaChannel = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : true;
                var canvasWasColor = enabledElement.renderingTools.lastRenderedIsColor === true;
                if (!enabledElement.renderingTools.renderCanvas || canvasWasColor) {
                  enabledElement.renderingTools.renderCanvas = document.createElement("canvas");
                  Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__["default"])(enabledElement, image);
                }
                var renderCanvas = enabledElement.renderingTools.renderCanvas;
                if (Object(_doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_7__["default"])(enabledElement, image) === false && invalidated !== true) {
                  return renderCanvas;
                }
                if (renderCanvas.width !== image.width || renderCanvas.height !== image.height) {
                  Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_8__["default"])(enabledElement, image);
                }
                var start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_4__["default"])();
                var lut = Object(_getLut_js__WEBPACK_IMPORTED_MODULE_6__["default"])(image, enabledElement.viewport, invalidated);
                image.stats = image.stats || {};
                image.stats.lastLutGenerateTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_4__["default"])() - start;
                var renderCanvasData = enabledElement.renderingTools.renderCanvasData;
                var renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;
                if (useAlphaChannel) {
                  Object(_internal_storedPixelDataToCanvasImageData_js__WEBPACK_IMPORTED_MODULE_1__["default"])(image, lut, renderCanvasData.data);
                } else {
                  Object(_internal_storedPixelDataToCanvasImageDataRGBA_js__WEBPACK_IMPORTED_MODULE_2__["default"])(image, lut, renderCanvasData.data);
                }
                start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_4__["default"])();
                renderCanvasContext.putImageData(renderCanvasData, 0, 0);
                image.stats.lastPutImageDataTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_4__["default"])() - start;
                return renderCanvas;
              }
              function renderGrayscaleImage(enabledElement, invalidated) {
                if (enabledElement === void 0) {
                  throw new Error("drawImage: enabledElement parameter must not be undefined");
                }
                var image = enabledElement.image;
                if (image === void 0) {
                  throw new Error("drawImage: image must be loaded before it can be drawn");
                }
                var context = enabledElement.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.setTransform(1, 0, 0, 1, 0, 0);
                context.fillStyle = Object(_internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement);
                context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height);
                context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
                context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_3__["default"])(enabledElement, context);
                var renderCanvas;
                if (enabledElement.options && enabledElement.options.renderer && enabledElement.options.renderer.toLowerCase() === "webgl") {
                  renderCanvas = _webgl_index_js__WEBPACK_IMPORTED_MODULE_5__["default"].renderer.render(enabledElement);
                } else {
                  renderCanvas = getRenderCanvas(enabledElement, image, invalidated);
                }
                var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_10__["default"])(enabledElement.image, enabledElement.viewport);
                var sx = imageDisplayedArea.tlhc.x - 1;
                var sy = imageDisplayedArea.tlhc.y - 1;
                var width = imageDisplayedArea.brhc.x - sx;
                var height = imageDisplayedArea.brhc.y - sy;
                context.drawImage(renderCanvas, sx, sy, width, height, sx, sy, width, height);
                enabledElement.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__["default"])(enabledElement);
              }
              function addGrayscaleLayer(layer, invalidated) {
                var useAlphaChannel = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
                if (layer === void 0) {
                  throw new Error("addGrayscaleLayer: layer parameter must not be undefined");
                }
                var image = layer.image;
                if (image === void 0) {
                  throw new Error("addGrayscaleLayer: image must be loaded before it can be drawn");
                }
                layer.canvas = getRenderCanvas(layer, image, invalidated, useAlphaChannel);
                var context = layer.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
                context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                layer.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_9__["default"])(layer);
              }
            }
          ),
          /***/
          "./rendering/renderLabelMapImage.js": (
            /*!******************************************!*\
              !*** ./rendering/renderLabelMapImage.js ***!
              \******************************************/
            /*! exports provided: renderLabelMapImage, addLabelMapLayer */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "renderLabelMapImage", function() {
                return renderLabelMapImage;
              });
              __webpack_require__.d(__webpack_exports__, "addLabelMapLayer", function() {
                return addLabelMapLayer;
              });
              var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../setToPixelCoordinateSystem.js */
                "./setToPixelCoordinateSystem.js"
              );
              var _internal_now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ../internal/now.js */
                "./internal/now.js"
              );
              var _internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../internal/getFillStyle.js */
                "./internal/getFillStyle.js"
              );
              var _initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./initializeRenderCanvas.js */
                "./rendering/initializeRenderCanvas.js"
              );
              var _saveLastRendered_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./saveLastRendered.js */
                "./rendering/saveLastRendered.js"
              );
              var _doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./doesImageNeedToBeRendered.js */
                "./rendering/doesImageNeedToBeRendered.js"
              );
              var _internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ../internal/storedPixelDataToCanvasImageDataColorLUT.js */
                "./internal/storedPixelDataToCanvasImageDataColorLUT.js"
              );
              var _colors_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
                /*! ../colors/index.js */
                "./colors/index.js"
              );
              var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
                /*! ../internal/getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              function getRenderCanvas(enabledElement, image, invalidated) {
                if (!enabledElement.renderingTools.renderCanvas) {
                  enabledElement.renderingTools.renderCanvas = document.createElement("canvas");
                }
                var renderCanvas = enabledElement.renderingTools.renderCanvas;
                var colormap = enabledElement.viewport.colormap || enabledElement.options.colormap;
                if (enabledElement.options.colormap) {
                  console.warn("enabledElement.options.colormap is deprecated. Use enabledElement.viewport.colormap instead");
                }
                if (colormap && typeof colormap === "string") {
                  colormap = _colors_index_js__WEBPACK_IMPORTED_MODULE_7__["default"].getColormap(colormap);
                }
                if (!colormap) {
                  throw new Error("renderLabelMapImage: colormap not found.");
                }
                var colormapId = colormap.getId();
                if (Object(_doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement, image) === false && invalidated !== true && enabledElement.renderingTools.colormapId === colormapId) {
                  return renderCanvas;
                }
                if (renderCanvas.width !== image.width || renderCanvas.height !== image.height) {
                  Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_3__["default"])(enabledElement, image);
                }
                var start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
                if (!enabledElement.renderingTools.colorLut || invalidated || enabledElement.renderingTools.colormapId !== colormapId) {
                  enabledElement.renderingTools.colorLut = colormap.createLookupTable();
                  enabledElement.renderingTools.colormapId = colormapId;
                }
                image.stats = image.stats || {};
                image.stats.lastLutGenerateTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
                var colorLut = enabledElement.renderingTools.colorLut;
                var renderCanvasData = enabledElement.renderingTools.renderCanvasData;
                var renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;
                Object(_internal_storedPixelDataToCanvasImageDataColorLUT_js__WEBPACK_IMPORTED_MODULE_6__["default"])(image, colorLut, renderCanvasData.data);
                start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
                renderCanvasContext.putImageData(renderCanvasData, 0, 0);
                image.stats.lastPutImageDataTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
                return renderCanvas;
              }
              function renderLabelMapImage(enabledElement, invalidated) {
                if (enabledElement === void 0) {
                  throw new Error("renderLabelMapImage: enabledElement parameter must not be undefined");
                }
                var image = enabledElement.image;
                if (image === void 0) {
                  throw new Error("renderLabelMapImage: image must be loaded before it can be drawn");
                }
                var context = enabledElement.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.setTransform(1, 0, 0, 1, 0, 0);
                context.fillStyle = Object(_internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement);
                context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height);
                context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
                context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement, context);
                var renderCanvas = getRenderCanvas(enabledElement, image, invalidated);
                var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_8__["default"])(enabledElement.image, enabledElement.viewport);
                var sx = imageDisplayedArea.tlhc.x - 1;
                var sy = imageDisplayedArea.tlhc.y - 1;
                var width = imageDisplayedArea.brhc.x - sx;
                var height = imageDisplayedArea.brhc.y - sy;
                context.drawImage(renderCanvas, sx, sy, width, height, sx, sy, width, height);
                enabledElement.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_4__["default"])(enabledElement);
              }
              function addLabelMapLayer(layer, invalidated) {
                if (layer === void 0) {
                  throw new Error("addLabelMapLayer: layer parameter must not be undefined");
                }
                var image = layer.image;
                if (image === void 0) {
                  throw new Error("addLabelMapLayer: image must be loaded before it can be drawn");
                }
                layer.canvas = getRenderCanvas(layer, image, invalidated);
                var context = layer.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
                context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                layer.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_4__["default"])(layer);
              }
            }
          ),
          /***/
          "./rendering/renderPseudoColorImage.js": (
            /*!*********************************************!*\
              !*** ./rendering/renderPseudoColorImage.js ***!
              \*********************************************/
            /*! exports provided: renderPseudoColorImage, addPseudoColorLayer */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "renderPseudoColorImage", function() {
                return renderPseudoColorImage;
              });
              __webpack_require__.d(__webpack_exports__, "addPseudoColorLayer", function() {
                return addPseudoColorLayer;
              });
              var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../setToPixelCoordinateSystem.js */
                "./setToPixelCoordinateSystem.js"
              );
              var _internal_now_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ../internal/now.js */
                "./internal/now.js"
              );
              var _internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../internal/getFillStyle.js */
                "./internal/getFillStyle.js"
              );
              var _initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./initializeRenderCanvas.js */
                "./rendering/initializeRenderCanvas.js"
              );
              var _getLut_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./getLut.js */
                "./rendering/getLut.js"
              );
              var _saveLastRendered_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./saveLastRendered.js */
                "./rendering/saveLastRendered.js"
              );
              var _doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(
                /*! ./doesImageNeedToBeRendered.js */
                "./rendering/doesImageNeedToBeRendered.js"
              );
              var _internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(
                /*! ../internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js */
                "./internal/storedPixelDataToCanvasImageDataPseudocolorLUT.js"
              );
              var _colors_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(
                /*! ../colors/index.js */
                "./colors/index.js"
              );
              var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(
                /*! ../internal/getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              function getRenderCanvas(enabledElement, image, invalidated) {
                if (!enabledElement.renderingTools.renderCanvas) {
                  enabledElement.renderingTools.renderCanvas = document.createElement("canvas");
                }
                var renderCanvas = enabledElement.renderingTools.renderCanvas;
                var colormap = enabledElement.viewport.colormap || enabledElement.options.colormap;
                if (enabledElement.options && enabledElement.options.colormap) {
                  console.warn("enabledElement.options.colormap is deprecated. Use enabledElement.viewport.colormap instead");
                }
                if (colormap && typeof colormap === "string") {
                  colormap = _colors_index_js__WEBPACK_IMPORTED_MODULE_8__["default"].getColormap(colormap);
                }
                if (!colormap) {
                  throw new Error("renderPseudoColorImage: colormap not found.");
                }
                var colormapId = colormap.getId();
                if (Object(_doesImageNeedToBeRendered_js__WEBPACK_IMPORTED_MODULE_6__["default"])(enabledElement, image) === false && invalidated !== true && enabledElement.renderingTools.colormapId === colormapId) {
                  return renderCanvas;
                }
                if (renderCanvas.width !== image.width || renderCanvas.height !== image.height) {
                  Object(_initializeRenderCanvas_js__WEBPACK_IMPORTED_MODULE_3__["default"])(enabledElement, image);
                }
                var start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
                if (!enabledElement.renderingTools.colorLut || invalidated || enabledElement.renderingTools.colormapId !== colormapId) {
                  colormap.setNumberOfColors(256);
                  enabledElement.renderingTools.colorLut = colormap.createLookupTable();
                  enabledElement.renderingTools.colormapId = colormapId;
                }
                var lut = Object(_getLut_js__WEBPACK_IMPORTED_MODULE_4__["default"])(image, enabledElement.viewport, invalidated);
                image.stats = image.stats || {};
                image.stats.lastLutGenerateTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
                var colorLut = enabledElement.renderingTools.colorLut;
                var renderCanvasData = enabledElement.renderingTools.renderCanvasData;
                var renderCanvasContext = enabledElement.renderingTools.renderCanvasContext;
                Object(_internal_storedPixelDataToCanvasImageDataPseudocolorLUT_js__WEBPACK_IMPORTED_MODULE_7__["default"])(image, lut, colorLut, renderCanvasData.data);
                start = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])();
                renderCanvasContext.putImageData(renderCanvasData, 0, 0);
                image.stats.lastPutImageDataTime = Object(_internal_now_js__WEBPACK_IMPORTED_MODULE_1__["default"])() - start;
                return renderCanvas;
              }
              function renderPseudoColorImage(enabledElement, invalidated) {
                if (enabledElement === void 0) {
                  throw new Error("drawImage: enabledElement parameter must not be undefined");
                }
                var image = enabledElement.image;
                if (image === void 0) {
                  throw new Error("drawImage: image must be loaded before it can be drawn");
                }
                var context = enabledElement.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.setTransform(1, 0, 0, 1, 0, 0);
                context.fillStyle = Object(_internal_getFillStyle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement);
                context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height);
                context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
                context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement, context);
                var renderCanvas = getRenderCanvas(enabledElement, image, invalidated);
                var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_9__["default"])(enabledElement.image, enabledElement.viewport);
                var sx = imageDisplayedArea.tlhc.x - 1;
                var sy = imageDisplayedArea.tlhc.y - 1;
                var width = imageDisplayedArea.brhc.x - sx;
                var height = imageDisplayedArea.brhc.y - sy;
                context.drawImage(renderCanvas, sx, sy, width, height, sx, sy, width, height);
                enabledElement.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_5__["default"])(enabledElement);
              }
              function addPseudoColorLayer(layer, invalidated) {
                if (layer === void 0) {
                  throw new Error("addPseudoColorLayer: layer parameter must not be undefined");
                }
                var image = layer.image;
                if (image === void 0) {
                  throw new Error("addPseudoColorLayer: image must be loaded before it can be drawn");
                }
                layer.canvas = getRenderCanvas(layer, image, invalidated);
                var context = layer.canvas.getContext("2d", {
                  desynchronized: true
                });
                context.imageSmoothingEnabled = !layer.viewport.pixelReplication;
                context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                layer.renderingTools = Object(_saveLastRendered_js__WEBPACK_IMPORTED_MODULE_5__["default"])(layer);
              }
            }
          ),
          /***/
          "./rendering/renderToCanvas.js": (
            /*!*************************************!*\
              !*** ./rendering/renderToCanvas.js ***!
              \*************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../triggerEvent.js */
                "./triggerEvent.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ../events.js */
                "./events.js"
              );
              var _internal_drawImageSync_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../internal/drawImageSync.js */
                "./internal/drawImageSync.js"
              );
              var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ../internal/getDefaultViewport.js */
                "./internal/getDefaultViewport.js"
              );
              var _internal_tryEnableWebgl_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ../internal/tryEnableWebgl.js */
                "./internal/tryEnableWebgl.js"
              );
              function createEnabledElementStub(canvas, image, options, viewport) {
                return {
                  element: canvas,
                  canvas,
                  image,
                  invalid: true,
                  // True if image needs to be drawn, false if not
                  needsRedraw: true,
                  options,
                  layers: [],
                  data: {},
                  renderingTools: {},
                  viewport
                };
              }
              __webpack_exports__["default"] = function(canvas, image) {
                var viewport = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
                var options = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
                if (canvas === void 0) {
                  throw new Error("renderToCanvas: parameter canvas cannot be undefined");
                }
                if (options && options.renderer && options.renderer.toLowerCase() === "webgl") {
                  Object(_internal_tryEnableWebgl_js__WEBPACK_IMPORTED_MODULE_4__["default"])(options);
                }
                var defaultViewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_3__["default"])(canvas, image);
                if (viewport) {
                  Object.assign(defaultViewport, viewport);
                }
                var enabledElementStub = createEnabledElementStub(canvas, image, options, defaultViewport);
                var eventDetails = {
                  enabledElement: enabledElementStub,
                  timestamp: Date.now()
                };
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElementStub.element, _events_js__WEBPACK_IMPORTED_MODULE_1__["default"].PRE_RENDER, eventDetails);
                Object(_internal_drawImageSync_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElementStub, enabledElementStub.invalid);
              };
            }
          ),
          /***/
          "./rendering/renderWebImage.js": (
            /*!*************************************!*\
              !*** ./rendering/renderWebImage.js ***!
              \*************************************/
            /*! exports provided: renderWebImage */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "renderWebImage", function() {
                return renderWebImage;
              });
              var _setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../setToPixelCoordinateSystem.js */
                "./setToPixelCoordinateSystem.js"
              );
              var _renderColorImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./renderColorImage.js */
                "./rendering/renderColorImage.js"
              );
              var _internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ../internal/getDisplayedArea.js */
                "./internal/getDisplayedArea.js"
              );
              function renderWebImage(enabledElement, invalidated) {
                if (enabledElement === void 0) {
                  throw new Error("renderWebImage: enabledElement parameter must not be undefined");
                }
                var image = enabledElement.image;
                if (image === void 0) {
                  throw new Error("renderWebImage: image must be loaded before it can be drawn");
                }
                if (enabledElement.viewport.voi.windowWidth === enabledElement.image.windowWidth && enabledElement.viewport.voi.windowCenter === enabledElement.image.windowCenter && enabledElement.viewport.invert === false) {
                  var context = enabledElement.canvas.getContext("2d", {
                    desynchronized: true
                  });
                  context.setTransform(1, 0, 0, 1, 0, 0);
                  context.fillStyle = "black";
                  context.fillRect(0, 0, enabledElement.canvas.width, enabledElement.canvas.height);
                  context.imageSmoothingEnabled = !enabledElement.viewport.pixelReplication;
                  context.mozImageSmoothingEnabled = context.imageSmoothingEnabled;
                  Object(_setToPixelCoordinateSystem_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement, context);
                  var imageDisplayedArea = Object(_internal_getDisplayedArea_js__WEBPACK_IMPORTED_MODULE_2__["default"])(enabledElement.image, enabledElement.viewport);
                  var sx = imageDisplayedArea.tlhc.x - 1;
                  var sy = imageDisplayedArea.tlhc.y - 1;
                  var width = imageDisplayedArea.brhc.x - sx;
                  var height = imageDisplayedArea.brhc.y - sy;
                  context.drawImage(image.getImage(), sx, sy, width, height, sx, sy, width, height);
                } else {
                  Object(_renderColorImage_js__WEBPACK_IMPORTED_MODULE_1__["renderColorImage"])(enabledElement, invalidated);
                }
              }
            }
          ),
          /***/
          "./rendering/saveLastRendered.js": (
            /*!***************************************!*\
              !*** ./rendering/saveLastRendered.js ***!
              \***************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_exports__["default"] = function(enabledElement) {
                var imageId = enabledElement.image.imageId;
                var viewport = enabledElement.viewport;
                var isColor = enabledElement.image.color;
                enabledElement.renderingTools.lastRenderedImageId = imageId;
                enabledElement.renderingTools.lastRenderedIsColor = isColor;
                enabledElement.renderingTools.lastRenderedViewport = {
                  windowCenter: viewport.voi.windowCenter,
                  windowWidth: viewport.voi.windowWidth,
                  invert: viewport.invert,
                  rotation: viewport.rotation,
                  hflip: viewport.hflip,
                  vflip: viewport.vflip,
                  modalityLUT: viewport.modalityLUT,
                  voiLUT: viewport.voiLUT,
                  colormap: viewport.colormap
                };
                return enabledElement.renderingTools;
              };
            }
          ),
          /***/
          "./requestPool/RequestPoolManager.ts": (
            /*!*******************************************!*\
              !*** ./requestPool/RequestPoolManager.ts ***!
              \*******************************************/
            /*! exports provided: RequestPoolManager */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "RequestPoolManager", function() {
                return RequestPoolManager;
              });
              function _createForOfIteratorHelper(o, allowArrayLike) {
                var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"];
                if (!it) {
                  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
                    if (it) o = it;
                    var i = 0;
                    var F = function F2() {
                    };
                    return { s: F, n: function n() {
                      if (i >= o.length) return { done: true };
                      return { done: false, value: o[i++] };
                    }, e: function e(_e) {
                      throw _e;
                    }, f: F };
                  }
                  throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
                }
                var normalCompletion = true, didErr = false, err;
                return { s: function s() {
                  it = it.call(o);
                }, n: function n() {
                  var step = it.next();
                  normalCompletion = step.done;
                  return step;
                }, e: function e(_e2) {
                  didErr = true;
                  err = _e2;
                }, f: function f() {
                  try {
                    if (!normalCompletion && it["return"] != null) it["return"]();
                  } finally {
                    if (didErr) throw err;
                  }
                } };
              }
              function _unsupportedIterableToArray(o, minLen) {
                if (!o) return;
                if (typeof o === "string") return _arrayLikeToArray(o, minLen);
                var n = Object.prototype.toString.call(o).slice(8, -1);
                if (n === "Object" && o.constructor) n = o.constructor.name;
                if (n === "Map" || n === "Set") return Array.from(o);
                if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
              }
              function _arrayLikeToArray(arr, len) {
                if (len == null || len > arr.length) len = arr.length;
                for (var i = 0, arr2 = new Array(len); i < len; i++) {
                  arr2[i] = arr[i];
                }
                return arr2;
              }
              function _classCallCheck(instance, Constructor) {
                if (!(instance instanceof Constructor)) {
                  throw new TypeError("Cannot call a class as a function");
                }
              }
              function _defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                  var descriptor = props[i];
                  descriptor.enumerable = descriptor.enumerable || false;
                  descriptor.configurable = true;
                  if ("value" in descriptor) descriptor.writable = true;
                  Object.defineProperty(target, descriptor.key, descriptor);
                }
              }
              function _createClass(Constructor, protoProps, staticProps) {
                if (protoProps) _defineProperties(Constructor.prototype, protoProps);
                if (staticProps) _defineProperties(Constructor, staticProps);
                return Constructor;
              }
              function _defineProperty(obj, key, value) {
                if (key in obj) {
                  Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
                } else {
                  obj[key] = value;
                }
                return obj;
              }
              var RequestPoolManager = function() {
                function RequestPoolManager2() {
                  _classCallCheck(this, RequestPoolManager2);
                  _defineProperty(this, "requestPool", void 0);
                  _defineProperty(this, "awake", void 0);
                  _defineProperty(this, "numRequests", void 0);
                  _defineProperty(this, "maxNumRequests", void 0);
                  _defineProperty(this, "grabDelay", void 0);
                  _defineProperty(this, "timeoutHandle", void 0);
                  this.requestPool = {
                    interaction: {
                      0: []
                    },
                    thumbnail: {
                      0: []
                    },
                    prefetch: {
                      0: []
                    }
                  };
                  this.awake = false;
                  this.grabDelay = 5;
                  this.numRequests = {
                    interaction: 0,
                    thumbnail: 0,
                    prefetch: 0
                  };
                  this.maxNumRequests = {
                    interaction: 6,
                    thumbnail: 6,
                    prefetch: 5
                  };
                }
                _createClass(RequestPoolManager2, [{
                  key: "destroy",
                  value: function destroy() {
                    if (this.timeoutHandle) {
                      window.clearTimeout(this.timeoutHandle);
                    }
                  }
                  /**
                   * Adds the requests to the pool of requests.
                   *
                   * @param requestFn - A function that returns a promise which resolves in the image
                   * @param type - Priority category, it can be either of interaction, prefetch,
                   * or thumbnail.
                   * @param additionalDetails - Additional details that requests can contain.
                   * For instance the volumeUID for the volume requests
                   * @param priority - Priority number for each category of requests. Its default
                   * value is priority 0. The lower the priority number, the higher the priority number
                   *
                   * @returns void
                   *
                   */
                }, {
                  key: "addRequest",
                  value: function addRequest(requestFn, type, additionalDetails) {
                    var priority = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : 0;
                    var addToBeginning = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : false;
                    var requestDetails = {
                      requestFn,
                      type,
                      additionalDetails
                    };
                    if (this.requestPool[type][priority] === void 0) {
                      this.requestPool[type][priority] = [];
                    }
                    if (addToBeginning) {
                      this.requestPool[type][priority].unshift(requestDetails);
                    } else {
                      this.requestPool[type][priority].push(requestDetails);
                    }
                    if (!this.awake) {
                      this.awake = true;
                      this.startGrabbing();
                    }
                  }
                  /**
                   * Filter the requestPoolManager's pool of request based on the result of
                   * provided filter function. The provided filter function needs to return false or true
                   *
                   * @param filterFunction The filter function for filtering of the requests to keep
                   * @category requestPool
                   */
                }, {
                  key: "filterRequests",
                  value: function filterRequests(filterFunction) {
                    var _this = this;
                    Object.keys(this.requestPool).forEach(function(type) {
                      var requestType = _this.requestPool[type];
                      Object.keys(requestType).forEach(function(priority) {
                        requestType[priority] = requestType[priority].filter(function(requestDetails) {
                          return filterFunction(requestDetails);
                        });
                      });
                    });
                  }
                  /**
                   * Clears the requests specific to the provided type. For instance, the
                   * pool of requests of type 'interaction' can be cleared via this function.
                   *
                   *
                   * @param type category of the request (either interaction, prefetch or thumbnail)
                   * @category requestPool
                   */
                }, {
                  key: "clearRequestStack",
                  value: function clearRequestStack(type) {
                    if (!this.requestPool[type]) {
                      throw new Error("No category for the type ".concat(type, " found"));
                    }
                    this.requestPool[type] = {
                      0: []
                    };
                  }
                }, {
                  key: "sendRequest",
                  value: function sendRequest(_ref) {
                    var _this2 = this;
                    var requestFn = _ref.requestFn, type = _ref.type;
                    this.numRequests[type]++;
                    this.awake = true;
                    requestFn()["finally"](function() {
                      _this2.numRequests[type]--;
                      _this2.startAgain();
                    });
                  }
                }, {
                  key: "startGrabbing",
                  value: function startGrabbing() {
                    var maxRequests = this.maxNumRequests.interaction + this.maxNumRequests.thumbnail + this.maxNumRequests.prefetch;
                    var currentRequests = this.numRequests.interaction + this.numRequests.thumbnail + this.numRequests.prefetch;
                    var requestsToSend = maxRequests - currentRequests;
                    for (var i = 0; i < requestsToSend; i++) {
                      var _requestDetails = this.getNextRequest();
                      if (_requestDetails === false) {
                        break;
                      } else if (_requestDetails) {
                        this.sendRequest(_requestDetails);
                      }
                    }
                  }
                }, {
                  key: "startAgain",
                  value: function startAgain() {
                    var _this3 = this;
                    if (!this.awake) {
                      return;
                    }
                    if (this.grabDelay) {
                      this.timeoutHandle = window.setTimeout(function() {
                        _this3.startGrabbing();
                      }, this.grabDelay);
                    } else {
                      this.startGrabbing();
                    }
                  }
                }, {
                  key: "getSortedPriorityGroups",
                  value: function getSortedPriorityGroups(type) {
                    var _this4 = this;
                    var priorities = Object.keys(this.requestPool[type]).map(Number).filter(function(priority) {
                      return _this4.requestPool[type][priority].length;
                    }).sort();
                    return priorities;
                  }
                }, {
                  key: "getNextRequest",
                  value: function getNextRequest() {
                    var interactionPriorities = this.getSortedPriorityGroups("interaction");
                    var _iterator = _createForOfIteratorHelper(interactionPriorities), _step;
                    try {
                      for (_iterator.s(); !(_step = _iterator.n()).done; ) {
                        var priority = _step.value;
                        if (this.requestPool.interaction[priority].length && this.numRequests.interaction < this.maxNumRequests.interaction) {
                          return this.requestPool.interaction[priority].shift();
                        }
                      }
                    } catch (err) {
                      _iterator.e(err);
                    } finally {
                      _iterator.f();
                    }
                    var thumbnailPriorities = this.getSortedPriorityGroups("thumbnail");
                    var _iterator2 = _createForOfIteratorHelper(thumbnailPriorities), _step2;
                    try {
                      for (_iterator2.s(); !(_step2 = _iterator2.n()).done; ) {
                        var _priority = _step2.value;
                        if (this.requestPool.thumbnail[_priority].length && this.numRequests.thumbnail < this.maxNumRequests.thumbnail) {
                          return this.requestPool.thumbnail[_priority].shift();
                        }
                      }
                    } catch (err) {
                      _iterator2.e(err);
                    } finally {
                      _iterator2.f();
                    }
                    var prefetchPriorities = this.getSortedPriorityGroups("prefetch");
                    var _iterator3 = _createForOfIteratorHelper(prefetchPriorities), _step3;
                    try {
                      for (_iterator3.s(); !(_step3 = _iterator3.n()).done; ) {
                        var _priority2 = _step3.value;
                        if (this.requestPool.prefetch[_priority2].length && this.numRequests.prefetch < this.maxNumRequests.prefetch) {
                          return this.requestPool.prefetch[_priority2].shift();
                        }
                      }
                    } catch (err) {
                      _iterator3.e(err);
                    } finally {
                      _iterator3.f();
                    }
                    if (!interactionPriorities.length && !thumbnailPriorities.length && !prefetchPriorities.length) {
                      this.awake = false;
                    }
                    return false;
                  }
                  /**
                   * Returns the request pool containing different categories, their priority and
                   * the added request details.
                   *
                   * @returns
                   * @category requestPool
                   */
                }, {
                  key: "getRequestPool",
                  value: function getRequestPool() {
                    return this.requestPool;
                  }
                }]);
                return RequestPoolManager2;
              }();
            }
          ),
          /***/
          "./requestPool/imageLoadPoolManager.ts": (
            /*!*********************************************!*\
              !*** ./requestPool/imageLoadPoolManager.ts ***!
              \*********************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./RequestPoolManager.ts */
                "./requestPool/RequestPoolManager.ts"
              );
              var imageLoadPoolManager = new _RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_0__["RequestPoolManager"]();
              imageLoadPoolManager.maxNumRequests = {
                interaction: 1e3,
                thumbnail: 1e3,
                prefetch: 1e3
              };
              imageLoadPoolManager.grabDelay = 0;
              __webpack_exports__["default"] = imageLoadPoolManager;
            }
          ),
          /***/
          "./requestPool/imageRetrievalPoolManager.ts": (
            /*!**************************************************!*\
              !*** ./requestPool/imageRetrievalPoolManager.ts ***!
              \**************************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./RequestPoolManager.ts */
                "./requestPool/RequestPoolManager.ts"
              );
              var imageRetrievalPoolManager = new _RequestPoolManager_ts__WEBPACK_IMPORTED_MODULE_0__["RequestPoolManager"]();
              imageRetrievalPoolManager.maxNumRequests = {
                interaction: 20,
                thumbnail: 20,
                prefetch: 20
              };
              imageRetrievalPoolManager.grabDelay = 0;
              __webpack_exports__["default"] = imageRetrievalPoolManager;
            }
          ),
          /***/
          "./reset.js": (
            /*!******************!*\
              !*** ./reset.js ***!
              \******************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./internal/getDefaultViewport.js */
                "./internal/getDefaultViewport.js"
              );
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _updateImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./updateImage.js */
                "./updateImage.js"
              );
              __webpack_exports__["default"] = function(element) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                enabledElement.viewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement.canvas, enabledElement.image);
                Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);
              };
            }
          ),
          /***/
          "./resize.js": (
            /*!*******************!*\
              !*** ./resize.js ***!
              \*******************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _fitToWindow_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./fitToWindow.js */
                "./fitToWindow.js"
              );
              var _updateImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./updateImage.js */
                "./updateImage.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./triggerEvent.js */
                "./triggerEvent.js"
              );
              var _internal_getImageSize_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./internal/getImageSize.js */
                "./internal/getImageSize.js"
              );
              var _events_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(
                /*! ./events.js */
                "./events.js"
              );
              function setCanvasSize(element, canvas) {
                if (canvas.width !== element.clientWidth) {
                  canvas.width = element.clientWidth;
                  canvas.style.width = "".concat(element.clientWidth, "px");
                }
                if (canvas.height !== element.clientHeight) {
                  canvas.height = element.clientHeight;
                  canvas.style.height = "".concat(element.clientHeight, "px");
                }
              }
              function wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight) {
                var scale = enabledElement.viewport.scale;
                var imageSize = Object(_internal_getImageSize_js__WEBPACK_IMPORTED_MODULE_4__["default"])(enabledElement.image, enabledElement.viewport.rotation);
                var imageWidth = Math.round(imageSize.width * scale);
                var imageHeight = Math.round(imageSize.height * scale);
                var x = enabledElement.viewport.translation.x;
                var y = enabledElement.viewport.translation.y;
                return imageWidth === oldCanvasWidth && imageHeight <= oldCanvasHeight || imageWidth <= oldCanvasWidth && imageHeight === oldCanvasHeight && x === 0 && y === 0;
              }
              function relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight) {
                var scale = enabledElement.viewport.scale;
                var canvasWidth = enabledElement.canvas.width;
                var canvasHeight = enabledElement.canvas.height;
                var relWidthChange = canvasWidth / oldCanvasWidth;
                var relHeightChange = canvasHeight / oldCanvasHeight;
                var relChange = Math.sqrt(relWidthChange * relHeightChange);
                enabledElement.viewport.scale = relChange * scale;
              }
              __webpack_exports__["default"] = function(element, forceFitToWindow) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                var oldCanvasWidth = enabledElement.canvas.width;
                var oldCanvasHeight = enabledElement.canvas.height;
                setCanvasSize(element, enabledElement.canvas);
                var eventData = {
                  element
                };
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_3__["default"])(element, _events_js__WEBPACK_IMPORTED_MODULE_5__["default"].ELEMENT_RESIZED, eventData);
                if (enabledElement.image === void 0) {
                  return;
                }
                if (forceFitToWindow || wasFitToWindow(enabledElement, oldCanvasWidth, oldCanvasHeight)) {
                  Object(_fitToWindow_js__WEBPACK_IMPORTED_MODULE_1__["default"])(element);
                } else {
                  relativeRescale(enabledElement, oldCanvasWidth, oldCanvasHeight);
                  Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);
                }
              };
            }
          ),
          /***/
          "./setToPixelCoordinateSystem.js": (
            /*!***************************************!*\
              !*** ./setToPixelCoordinateSystem.js ***!
              \***************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _internal_calculateTransform_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./internal/calculateTransform.js */
                "./internal/calculateTransform.js"
              );
              __webpack_exports__["default"] = function(enabledElement, context, scale) {
                if (enabledElement === void 0) {
                  throw new Error("setToPixelCoordinateSystem: parameter enabledElement must not be undefined");
                }
                if (context === void 0) {
                  throw new Error("setToPixelCoordinateSystem: parameter context must not be undefined");
                }
                var transform = Object(_internal_calculateTransform_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement, scale);
                context.setTransform(transform.m[0], transform.m[1], transform.m[2], transform.m[3], transform.m[4], transform.m[5]);
              };
            }
          ),
          /***/
          "./setViewport.js": (
            /*!************************!*\
              !*** ./setViewport.js ***!
              \************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./internal/getDefaultViewport.js */
                "./internal/getDefaultViewport.js"
              );
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _updateImage_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./updateImage.js */
                "./updateImage.js"
              );
              var MIN_WINDOW_WIDTH = 1e-6;
              var MIN_VIEWPORT_SCALE = 1e-4;
              __webpack_exports__["default"] = function(element, viewport) {
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_1__["getEnabledElement"])(element);
                if (enabledElement.viewport === void 0) {
                  enabledElement.viewport = Object(_internal_getDefaultViewport_js__WEBPACK_IMPORTED_MODULE_0__["default"])(enabledElement.canvas);
                }
                if (viewport) {
                  for (var attrname in viewport) {
                    if (viewport[attrname] !== null) {
                      enabledElement.viewport[attrname] = viewport[attrname];
                    }
                  }
                }
                if (enabledElement.viewport.voi.windowWidth) {
                  enabledElement.viewport.voi.windowWidth = Math.max(enabledElement.viewport.voi.windowWidth, MIN_WINDOW_WIDTH);
                }
                if (enabledElement.viewport.scale) {
                  enabledElement.viewport.scale = Math.max(enabledElement.viewport.scale, MIN_VIEWPORT_SCALE);
                }
                enabledElement.viewport.rotation %= 360;
                if (enabledElement.viewport.rotation < 0) {
                  enabledElement.viewport.rotation += 360;
                }
                if (enabledElement.image) {
                  Object(_updateImage_js__WEBPACK_IMPORTED_MODULE_2__["default"])(element);
                }
              };
            }
          ),
          /***/
          "./triggerEvent.js": (
            /*!*************************!*\
              !*** ./triggerEvent.js ***!
              \*************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "default", function() {
                return triggerEvent;
              });
              function triggerEvent(el, type) {
                var detail = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
                var event;
                if (typeof window.CustomEvent === "function") {
                  event = new CustomEvent(type, {
                    detail,
                    cancelable: true
                  });
                } else {
                  event = document.createEvent("CustomEvent");
                  event.initCustomEvent(type, true, true, detail);
                }
                return el.dispatchEvent(event);
              }
            }
          ),
          /***/
          "./updateImage.js": (
            /*!************************!*\
              !*** ./updateImage.js ***!
              \************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _enabledElements_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./enabledElements.js */
                "./enabledElements.js"
              );
              var _internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./internal/drawImage.js */
                "./internal/drawImage.js"
              );
              __webpack_exports__["default"] = function(element) {
                var invalidated = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                var enabledElement = Object(_enabledElements_js__WEBPACK_IMPORTED_MODULE_0__["getEnabledElement"])(element);
                Object(_internal_drawImage_js__WEBPACK_IMPORTED_MODULE_1__["default"])(enabledElement, invalidated);
              };
            }
          ),
          /***/
          "./webgl/createProgramFromString.js": (
            /*!******************************************!*\
              !*** ./webgl/createProgramFromString.js ***!
              \******************************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              function compileShader(gl, shaderSource, shaderType) {
                var shader = gl.createShader(shaderType);
                gl.shaderSource(shader, shaderSource);
                gl.compileShader(shader);
                var success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);
                if (!success && !gl.isContextLost()) {
                  var infoLog = gl.getShaderInfoLog(shader);
                  console.error("Could not compile shader:\n".concat(infoLog));
                }
                return shader;
              }
              function createProgram(gl, vertexShader, fragmentShader) {
                var program = gl.createProgram();
                gl.attachShader(program, vertexShader);
                gl.attachShader(program, fragmentShader);
                gl.linkProgram(program);
                var success = gl.getProgramParameter(program, gl.LINK_STATUS);
                if (!success && !gl.isContextLost()) {
                  var infoLog = gl.getProgramInfoLog(program);
                  console.error("WebGL program filed to link:\n".concat(infoLog));
                }
                return program;
              }
              __webpack_exports__["default"] = function(gl, vertexShaderSrc, fragShaderSrc) {
                var vertexShader = compileShader(gl, vertexShaderSrc, gl.VERTEX_SHADER);
                var fragShader = compileShader(gl, fragShaderSrc, gl.FRAGMENT_SHADER);
                return createProgram(gl, vertexShader, fragShader);
              };
            }
          ),
          /***/
          "./webgl/index.js": (
            /*!************************!*\
              !*** ./webgl/index.js ***!
              \************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _renderer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./renderer.js */
                "./webgl/renderer.js"
              );
              var _createProgramFromString_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./createProgramFromString.js */
                "./webgl/createProgramFromString.js"
              );
              var _textureCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./textureCache.js */
                "./webgl/textureCache.js"
              );
              var mod = {
                createProgramFromString: _createProgramFromString_js__WEBPACK_IMPORTED_MODULE_1__["default"],
                renderer: {
                  render: _renderer_js__WEBPACK_IMPORTED_MODULE_0__["render"],
                  initRenderer: _renderer_js__WEBPACK_IMPORTED_MODULE_0__["initRenderer"],
                  getRenderCanvas: _renderer_js__WEBPACK_IMPORTED_MODULE_0__["getRenderCanvas"],
                  isWebGLAvailable: _renderer_js__WEBPACK_IMPORTED_MODULE_0__["isWebGLAvailable"]
                },
                textureCache: _textureCache_js__WEBPACK_IMPORTED_MODULE_2__["default"]
              };
              Object.defineProperty(mod, "isWebGLInitialized", {
                enumerable: true,
                configurable: false,
                get: function get() {
                  return _renderer_js__WEBPACK_IMPORTED_MODULE_0__["isWebGLInitialized"];
                }
              });
              __webpack_exports__["default"] = mod;
            }
          ),
          /***/
          "./webgl/renderer.js": (
            /*!***************************!*\
              !*** ./webgl/renderer.js ***!
              \***************************/
            /*! exports provided: isWebGLInitialized, getRenderCanvas, initRenderer, render, isWebGLAvailable */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "isWebGLInitialized", function() {
                return isWebGLInitialized;
              });
              __webpack_require__.d(__webpack_exports__, "getRenderCanvas", function() {
                return getRenderCanvas;
              });
              __webpack_require__.d(__webpack_exports__, "initRenderer", function() {
                return initRenderer;
              });
              __webpack_require__.d(__webpack_exports__, "render", function() {
                return render;
              });
              __webpack_require__.d(__webpack_exports__, "isWebGLAvailable", function() {
                return isWebGLAvailable;
              });
              var _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./shaders/index.js */
                "./webgl/shaders/index.js"
              );
              var _vertexShader_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./vertexShader.js */
                "./webgl/vertexShader.js"
              );
              var _textureCache_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./textureCache.js */
                "./webgl/textureCache.js"
              );
              var _createProgramFromString_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./createProgramFromString.js */
                "./webgl/createProgramFromString.js"
              );
              var renderCanvas = document.createElement("canvas");
              var gl;
              var texCoordBuffer;
              var positionBuffer;
              var isWebGLInitialized = false;
              function getRenderCanvas() {
                return renderCanvas;
              }
              function initShaders() {
                for (var id in _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"]) {
                  var shader = _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"][id];
                  shader.attributes = {};
                  shader.uniforms = {};
                  shader.vert = _vertexShader_js__WEBPACK_IMPORTED_MODULE_1__["vertexShader"];
                  shader.program = Object(_createProgramFromString_js__WEBPACK_IMPORTED_MODULE_3__["default"])(gl, shader.vert, shader.frag);
                  shader.attributes.texCoordLocation = gl.getAttribLocation(shader.program, "a_texCoord");
                  gl.enableVertexAttribArray(shader.attributes.texCoordLocation);
                  shader.attributes.positionLocation = gl.getAttribLocation(shader.program, "a_position");
                  gl.enableVertexAttribArray(shader.attributes.positionLocation);
                  shader.uniforms.resolutionLocation = gl.getUniformLocation(shader.program, "u_resolution");
                }
              }
              function initRenderer() {
                if (isWebGLInitialized === true) {
                  return;
                }
                if (initWebGL(renderCanvas)) {
                  initBuffers();
                  initShaders();
                  isWebGLInitialized = true;
                }
              }
              function updateRectangle(gl2, width, height) {
                gl2.bufferData(gl2.ARRAY_BUFFER, new Float32Array([width, height, 0, height, width, 0, 0, 0]), gl2.STATIC_DRAW);
              }
              function handleLostContext(event) {
                event.preventDefault();
                console.warn("WebGL Context Lost!");
              }
              function handleRestoredContext(event) {
                event.preventDefault();
                isWebGLInitialized = false;
                _textureCache_js__WEBPACK_IMPORTED_MODULE_2__["default"].purgeCache();
                initRenderer();
              }
              function initWebGL(canvas) {
                gl = null;
                try {
                  var options = {
                    desynchronized: true,
                    preserveDrawingBuffer: true
                    // Preserve buffer so we can copy to display canvas element
                  };
                  gl = canvas.getContext("webgl", options) || canvas.getContext("experimental-webgl", options);
                  canvas.removeEventListener("webglcontextlost", handleLostContext, false);
                  canvas.addEventListener("webglcontextlost", handleLostContext, false);
                  canvas.removeEventListener("webglcontextrestored", handleRestoredContext, false);
                  canvas.addEventListener("webglcontextrestored", handleRestoredContext, false);
                } catch (error) {
                  throw new Error("Error creating WebGL context");
                }
                if (!gl) {
                  console.error("Unable to initialize WebGL. Your browser may not support it.");
                  gl = null;
                }
                return gl;
              }
              function getImageDataType(image) {
                if (image.color) {
                  return "rgb";
                }
                var pixelData = image.getPixelData();
                if (pixelData instanceof Int16Array) {
                  return "int16";
                }
                if (pixelData instanceof Uint16Array) {
                  return "uint16";
                }
                if (pixelData instanceof Int8Array) {
                  return "int8";
                }
                return "uint8";
              }
              function getShaderProgram(image) {
                var datatype = getImageDataType(image);
                if (_shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"].hasOwnProperty(datatype)) {
                  return _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"][datatype];
                }
                return _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["shaders"].rgb;
              }
              function generateTexture(image) {
                var TEXTURE_FORMAT = {
                  uint8: gl.LUMINANCE,
                  int8: gl.LUMINANCE_ALPHA,
                  uint16: gl.LUMINANCE_ALPHA,
                  int16: gl.RGB,
                  rgb: gl.RGB
                };
                var TEXTURE_BYTES = {
                  int8: 1,
                  // Luminance
                  uint16: 2,
                  // Luminance + Alpha
                  int16: 3,
                  // RGB
                  rgb: 3
                  // RGB
                };
                var imageDataType = getImageDataType(image);
                var format = TEXTURE_FORMAT[imageDataType];
                var texture = gl.createTexture();
                gl.bindTexture(gl.TEXTURE_2D, texture);
                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);
                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);
                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);
                gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);
                gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);
                var imageData = _shaders_index_js__WEBPACK_IMPORTED_MODULE_0__["dataUtilities"][imageDataType].storedPixelDataToImageData(image, image.width, image.height);
                gl.texImage2D(gl.TEXTURE_2D, 0, format, image.width, image.height, 0, format, gl.UNSIGNED_BYTE, imageData);
                var sizeInBytes = image.width * image.height * TEXTURE_BYTES[imageDataType];
                return {
                  texture,
                  sizeInBytes
                };
              }
              function getImageTexture(image) {
                var imageTexture = _textureCache_js__WEBPACK_IMPORTED_MODULE_2__["default"].getImageTexture(image.imageId);
                if (!imageTexture) {
                  imageTexture = generateTexture(image);
                  _textureCache_js__WEBPACK_IMPORTED_MODULE_2__["default"].putImageTexture(image, imageTexture);
                }
                return imageTexture.texture;
              }
              function initBuffers() {
                positionBuffer = gl.createBuffer();
                gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, 0, 1, 1, 0, 0, 0]), gl.STATIC_DRAW);
                texCoordBuffer = gl.createBuffer();
                gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);
                gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([1, 1, 0, 1, 1, 0, 0, 0]), gl.STATIC_DRAW);
              }
              function renderQuad(shader, parameters, texture, width, height) {
                gl.clearColor(1, 0, 0, 1);
                gl.viewport(0, 0, width, height);
                gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);
                gl.useProgram(shader.program);
                gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);
                gl.vertexAttribPointer(shader.attributes.texCoordLocation, 2, gl.FLOAT, false, 0, 0);
                gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);
                gl.vertexAttribPointer(shader.attributes.positionLocation, 2, gl.FLOAT, false, 0, 0);
                for (var key in parameters) {
                  var uniformLocation = gl.getUniformLocation(shader.program, key);
                  if (!uniformLocation) {
                    continue;
                  }
                  var uniform = parameters[key];
                  var type = uniform.type;
                  var value = uniform.value;
                  if (type === "i") {
                    gl.uniform1i(uniformLocation, value);
                  } else if (type === "f") {
                    gl.uniform1f(uniformLocation, value);
                  } else if (type === "2f") {
                    gl.uniform2f(uniformLocation, value[0], value[1]);
                  }
                }
                updateRectangle(gl, width, height);
                gl.activeTexture(gl.TEXTURE0);
                gl.bindTexture(gl.TEXTURE_2D, texture);
                gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);
              }
              function render(enabledElement) {
                var image = enabledElement.image;
                renderCanvas.width = image.width;
                renderCanvas.height = image.height;
                var viewport = enabledElement.viewport;
                var shader = getShaderProgram(image);
                var texture = getImageTexture(image);
                var parameters = {
                  u_resolution: {
                    type: "2f",
                    value: [image.width, image.height]
                  },
                  wc: {
                    type: "f",
                    value: viewport.voi.windowCenter
                  },
                  ww: {
                    type: "f",
                    value: viewport.voi.windowWidth
                  },
                  slope: {
                    type: "f",
                    value: image.slope
                  },
                  intercept: {
                    type: "f",
                    value: image.intercept
                  },
                  minPixelValue: {
                    type: "f",
                    value: image.minPixelValue
                  },
                  invert: {
                    type: "i",
                    value: viewport.invert ? 1 : 0
                  }
                };
                renderQuad(shader, parameters, texture, image.width, image.height);
                return renderCanvas;
              }
              function isWebGLAvailable() {
                var options = {
                  failIfMajorPerformanceCaveat: true
                };
                try {
                  var canvas = document.createElement("canvas");
                  return Boolean(window.WebGLRenderingContext) && (canvas.getContext("webgl", options) || canvas.getContext("experimental-webgl", options));
                } catch (e) {
                  return false;
                }
              }
            }
          ),
          /***/
          "./webgl/shaders/index.js": (
            /*!********************************!*\
              !*** ./webgl/shaders/index.js ***!
              \********************************/
            /*! exports provided: shaders, dataUtilities */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "shaders", function() {
                return shaders;
              });
              __webpack_require__.d(__webpack_exports__, "dataUtilities", function() {
                return dataUtilities;
              });
              var _int16_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ./int16.js */
                "./webgl/shaders/int16.js"
              );
              var _int8_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ./int8.js */
                "./webgl/shaders/int8.js"
              );
              var _rgb_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(
                /*! ./rgb.js */
                "./webgl/shaders/rgb.js"
              );
              var _uint16_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(
                /*! ./uint16.js */
                "./webgl/shaders/uint16.js"
              );
              var _uint8_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(
                /*! ./uint8.js */
                "./webgl/shaders/uint8.js"
              );
              var shaders = {
                int16: _int16_js__WEBPACK_IMPORTED_MODULE_0__["int16Shader"],
                int8: _int8_js__WEBPACK_IMPORTED_MODULE_1__["int8Shader"],
                rgb: _rgb_js__WEBPACK_IMPORTED_MODULE_2__["rgbShader"],
                uint16: _uint16_js__WEBPACK_IMPORTED_MODULE_3__["uint16Shader"],
                uint8: _uint8_js__WEBPACK_IMPORTED_MODULE_4__["uint8Shader"]
              };
              var dataUtilities = {
                int16: _int16_js__WEBPACK_IMPORTED_MODULE_0__["int16DataUtilities"],
                int8: _int8_js__WEBPACK_IMPORTED_MODULE_1__["int8DataUtilities"],
                rgb: _rgb_js__WEBPACK_IMPORTED_MODULE_2__["rgbDataUtilities"],
                uint16: _uint16_js__WEBPACK_IMPORTED_MODULE_3__["uint16DataUtilities"],
                uint8: _uint8_js__WEBPACK_IMPORTED_MODULE_4__["uint8DataUtilities"]
              };
            }
          ),
          /***/
          "./webgl/shaders/int16.js": (
            /*!********************************!*\
              !*** ./webgl/shaders/int16.js ***!
              \********************************/
            /*! exports provided: int16DataUtilities, int16Shader */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "int16DataUtilities", function() {
                return int16DataUtilities;
              });
              __webpack_require__.d(__webpack_exports__, "int16Shader", function() {
                return int16Shader;
              });
              var int16Shader = {};
              function storedPixelDataToImageData(image) {
                var pixelData = image.getPixelData();
                var numberOfChannels = 3;
                var data = new Uint8Array(image.width * image.height * numberOfChannels);
                var offset = 0;
                for (var i = 0; i < pixelData.length; i++) {
                  var val = Math.abs(pixelData[i]);
                  data[offset++] = val & 255;
                  data[offset++] = val >> 8;
                  data[offset++] = pixelData[i] < 0 ? 0 : 1;
                }
                return data;
              }
              var int16DataUtilities = {
                storedPixelDataToImageData
              };
              int16Shader.frag = "precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform int invert;varying vec2 v_texCoord;void main() {vec4 color = texture2D(u_image, v_texCoord);float intensity = color.r*256.0 + color.g*65536.0;if (color.b == 0.0)intensity = -intensity;intensity = intensity * slope + intercept;float center0 = wc - 0.5;float width0 = max(ww, 1.0);intensity = (intensity - center0) / width0 + 0.5;intensity = clamp(intensity, 0.0, 1.0);gl_FragColor = vec4(intensity, intensity, intensity, 1.0);if (invert == 1)gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;}";
            }
          ),
          /***/
          "./webgl/shaders/int8.js": (
            /*!*******************************!*\
              !*** ./webgl/shaders/int8.js ***!
              \*******************************/
            /*! exports provided: int8DataUtilities, int8Shader */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "int8DataUtilities", function() {
                return int8DataUtilities;
              });
              __webpack_require__.d(__webpack_exports__, "int8Shader", function() {
                return int8Shader;
              });
              var int8Shader = {};
              function storedPixelDataToImageData(image) {
                var pixelData = image.getPixelData();
                var numberOfChannels = 2;
                var data = new Uint8Array(image.width * image.height * numberOfChannels);
                var offset = 0;
                for (var i = 0; i < pixelData.length; i++) {
                  data[offset++] = pixelData[i];
                  data[offset++] = pixelData[i] < 0 ? 0 : 1;
                }
                return data;
              }
              var int8DataUtilities = {
                storedPixelDataToImageData
              };
              int8Shader.frag = "precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform int invert;varying vec2 v_texCoord;void main() {vec4 color = texture2D(u_image, v_texCoord);float intensity = color.r*256.;if (color.a == 0.0)intensity = -intensity;intensity = intensity * slope + intercept;float center0 = wc - 0.5;float width0 = max(ww, 1.0);intensity = (intensity - center0) / width0 + 0.5;intensity = clamp(intensity, 0.0, 1.0);gl_FragColor = vec4(intensity, intensity, intensity, 1.0);if (invert == 1)gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;}";
            }
          ),
          /***/
          "./webgl/shaders/rgb.js": (
            /*!******************************!*\
              !*** ./webgl/shaders/rgb.js ***!
              \******************************/
            /*! exports provided: rgbDataUtilities, rgbShader */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "rgbDataUtilities", function() {
                return rgbDataUtilities;
              });
              __webpack_require__.d(__webpack_exports__, "rgbShader", function() {
                return rgbShader;
              });
              var rgbShader = {};
              function storedPixelDataToImageData(image) {
                var minPixelValue = image.minPixelValue;
                var canvasImageDataIndex = 0;
                var storedPixelDataIndex = 0;
                var numStoredPixels = image.width * image.height * 4;
                var numOutputPixels = image.width * image.height * 3;
                var storedPixelData = image.getPixelData();
                var data = new Uint8Array(numOutputPixels);
                if (minPixelValue < 0) {
                  while (storedPixelDataIndex < numStoredPixels) {
                    data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++] + -minPixelValue;
                    data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++] + -minPixelValue;
                    data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++] + -minPixelValue;
                    storedPixelDataIndex += 1;
                  }
                } else {
                  while (storedPixelDataIndex < numStoredPixels) {
                    data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++];
                    data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++];
                    data[canvasImageDataIndex++] = storedPixelData[storedPixelDataIndex++];
                    storedPixelDataIndex += 1;
                  }
                }
                return data;
              }
              var rgbDataUtilities = {
                storedPixelDataToImageData
              };
              rgbShader.frag = "precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform float minPixelValue;uniform int invert;varying vec2 v_texCoord;void main() {vec3 color = texture2D(u_image, v_texCoord).xyz;color = color * 256.0 * slope + intercept;float center0 = wc - 0.5 - minPixelValue;float width0 = max(ww, 1.0);color = (color - center0) / width0 + 0.5;gl_FragColor = vec4(color, 1);if (invert == 1)gl_FragColor.rgb = 1. - gl_FragColor.rgb;}";
            }
          ),
          /***/
          "./webgl/shaders/uint16.js": (
            /*!*********************************!*\
              !*** ./webgl/shaders/uint16.js ***!
              \*********************************/
            /*! exports provided: uint16DataUtilities, uint16Shader */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "uint16DataUtilities", function() {
                return uint16DataUtilities;
              });
              __webpack_require__.d(__webpack_exports__, "uint16Shader", function() {
                return uint16Shader;
              });
              var uint16Shader = {};
              function storedPixelDataToImageData(image) {
                var pixelData = image.getPixelData();
                var numberOfChannels = 2;
                var data = new Uint8Array(image.width * image.height * numberOfChannels);
                var offset = 0;
                for (var i = 0; i < pixelData.length; i++) {
                  var val = pixelData[i];
                  data[offset++] = val & 255;
                  data[offset++] = val >> 8;
                }
                return data;
              }
              var uint16DataUtilities = {
                storedPixelDataToImageData
              };
              uint16Shader.frag = "precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform int invert;varying vec2 v_texCoord;void main() {vec4 color = texture2D(u_image, v_texCoord);float intensity = color.r*256.0 + color.a*65536.0;intensity = intensity * slope + intercept;float center0 = wc - 0.5;float width0 = max(ww, 1.0);intensity = (intensity - center0) / width0 + 0.5;intensity = clamp(intensity, 0.0, 1.0);gl_FragColor = vec4(intensity, intensity, intensity, 1.0);if (invert == 1)gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;}";
            }
          ),
          /***/
          "./webgl/shaders/uint8.js": (
            /*!********************************!*\
              !*** ./webgl/shaders/uint8.js ***!
              \********************************/
            /*! exports provided: uint8DataUtilities, uint8Shader */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "uint8DataUtilities", function() {
                return uint8DataUtilities;
              });
              __webpack_require__.d(__webpack_exports__, "uint8Shader", function() {
                return uint8Shader;
              });
              var uint8Shader = {};
              function storedPixelDataToImageData(image) {
                return image.getPixelData();
              }
              var uint8DataUtilities = {
                storedPixelDataToImageData
              };
              uint8Shader.frag = "precision mediump float;uniform sampler2D u_image;uniform float ww;uniform float wc;uniform float slope;uniform float intercept;uniform int invert;varying vec2 v_texCoord;void main() {vec4 color = texture2D(u_image, v_texCoord);float intensity = color.r*256.0;intensity = intensity * slope + intercept;float center0 = wc - 0.5;float width0 = max(ww, 1.0);intensity = (intensity - center0) / width0 + 0.5;intensity = clamp(intensity, 0.0, 1.0);gl_FragColor = vec4(intensity, intensity, intensity, 1.0);if (invert == 1)gl_FragColor.rgb = 1.0 - gl_FragColor.rgb;}";
            }
          ),
          /***/
          "./webgl/textureCache.js": (
            /*!*******************************!*\
              !*** ./webgl/textureCache.js ***!
              \*******************************/
            /*! exports provided: default */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              var _events_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(
                /*! ../events.js */
                "./events.js"
              );
              var _triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(
                /*! ../triggerEvent.js */
                "./triggerEvent.js"
              );
              var imageCache = {};
              var cachedImages = [];
              var maximumSizeInBytes = 1024 * 1024 * 256;
              var cacheSizeInBytes = 0;
              function getCacheInfo() {
                return {
                  maximumSizeInBytes,
                  cacheSizeInBytes,
                  numberOfImagesCached: cachedImages.length
                };
              }
              function purgeCacheIfNecessary() {
                if (cacheSizeInBytes <= maximumSizeInBytes) {
                  return;
                }
                function compare(a, b) {
                  if (a.timeStamp > b.timeStamp) {
                    return -1;
                  }
                  if (a.timeStamp < b.timeStamp) {
                    return 1;
                  }
                  return 0;
                }
                cachedImages.sort(compare);
                while (cacheSizeInBytes > maximumSizeInBytes) {
                  var lastCachedImage = cachedImages[cachedImages.length - 1];
                  cacheSizeInBytes -= lastCachedImage.sizeInBytes;
                  delete imageCache[lastCachedImage.imageId];
                  cachedImages.pop();
                  Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].WEBGL_TEXTURE_REMOVED, {
                    imageId: lastCachedImage.imageId
                  });
                }
                var cacheInfo = getCacheInfo();
                Object(_triggerEvent_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_events_js__WEBPACK_IMPORTED_MODULE_0__["events"], _events_js__WEBPACK_IMPORTED_MODULE_0__["default"].WEBGL_TEXTURE_CACHE_FULL, cacheInfo);
              }
              function setMaximumSizeBytes(numBytes) {
                if (numBytes === void 0) {
                  throw new Error("setMaximumSizeBytes: parameter numBytes must not be undefined");
                }
                if (numBytes.toFixed === void 0) {
                  throw new Error("setMaximumSizeBytes: parameter numBytes must be a number");
                }
                maximumSizeInBytes = numBytes;
                purgeCacheIfNecessary();
              }
              function putImageTexture(image, imageTexture) {
                var imageId = image.imageId;
                if (image === void 0) {
                  throw new Error("putImageTexture: image must not be undefined");
                }
                if (imageId === void 0) {
                  throw new Error("putImageTexture: imageId must not be undefined");
                }
                if (imageTexture === void 0) {
                  throw new Error("putImageTexture: imageTexture must not be undefined");
                }
                if (Object.prototype.hasOwnProperty.call(imageCache, imageId) === true) {
                  throw new Error("putImageTexture: imageId already in cache");
                }
                var cachedImage = {
                  imageId,
                  imageTexture,
                  timeStamp: /* @__PURE__ */ new Date(),
                  sizeInBytes: imageTexture.sizeInBytes
                };
                imageCache[imageId] = cachedImage;
                cachedImages.push(cachedImage);
                if (imageTexture.sizeInBytes === void 0) {
                  throw new Error("putImageTexture: imageTexture.sizeInBytes must not be undefined");
                }
                if (imageTexture.sizeInBytes.toFixed === void 0) {
                  throw new Error("putImageTexture: imageTexture.sizeInBytes is not a number");
                }
                cacheSizeInBytes += cachedImage.sizeInBytes;
                purgeCacheIfNecessary();
              }
              function getImageTexture(imageId) {
                if (imageId === void 0) {
                  throw new Error("getImageTexture: imageId must not be undefined");
                }
                var cachedImage = imageCache[imageId];
                if (cachedImage === void 0) {
                  return;
                }
                cachedImage.timeStamp = /* @__PURE__ */ new Date();
                return cachedImage.imageTexture;
              }
              function removeImageTexture(imageId) {
                if (imageId === void 0) {
                  throw new Error("removeImageTexture: imageId must not be undefined");
                }
                var cachedImage = imageCache[imageId];
                if (cachedImage === void 0) {
                  throw new Error("removeImageTexture: imageId must not be undefined");
                }
                cachedImages.splice(cachedImages.indexOf(cachedImage), 1);
                cacheSizeInBytes -= cachedImage.sizeInBytes;
                delete imageCache[imageId];
                return cachedImage.imageTexture;
              }
              function purgeCache() {
                while (cachedImages.length > 0) {
                  var removedCachedImage = cachedImages.pop();
                  delete imageCache[removedCachedImage.imageId];
                }
                cacheSizeInBytes = 0;
              }
              __webpack_exports__["default"] = {
                purgeCache,
                getImageTexture,
                putImageTexture,
                removeImageTexture,
                setMaximumSizeBytes
              };
            }
          ),
          /***/
          "./webgl/vertexShader.js": (
            /*!*******************************!*\
              !*** ./webgl/vertexShader.js ***!
              \*******************************/
            /*! exports provided: vertexShader */
            /***/
            function(module2, __webpack_exports__, __webpack_require__) {
              "use strict";
              __webpack_require__.r(__webpack_exports__);
              __webpack_require__.d(__webpack_exports__, "vertexShader", function() {
                return vertexShader;
              });
              var vertexShader = "attribute vec2 a_position;attribute vec2 a_texCoord;uniform vec2 u_resolution;varying vec2 v_texCoord;void main() {vec2 zeroToOne = a_position / u_resolution;vec2 zeroToTwo = zeroToOne * 2.0;vec2 clipSpace = zeroToTwo - 1.0;gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);v_texCoord = a_texCoord;}";
            }
          )
          /******/
        })
      );
    });
  }
});
export default require_cornerstone();
/*! Bundled license information:

cornerstone-core/dist/cornerstone.js:
  (*! cornerstone-core - 2.6.1 - 2021-11-19 | (c) 2016 Chris Hafey | https://github.com/cornerstonejs/cornerstone *)
*/
//# sourceMappingURL=cornerstone-core.js.map
